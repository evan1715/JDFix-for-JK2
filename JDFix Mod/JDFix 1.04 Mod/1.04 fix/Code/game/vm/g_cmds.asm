export DeathmatchScoreboardMessage
code
proc DeathmatchScoreboardMessage 2484 68
file "../g_cmds.c"
line 20
;1:// Copyright (C) 1999-2000 Id Software, Inc.
;2://
;3:#include "g_local.h"
;4:
;5:#include "../../ui/menudef.h"			// for the voice chats
;6:
;7://rww - for getting bot commands...
;8:int AcceptBotCommand(char *cmd, gentity_t *pl);
;9://end rww
;10:
;11:void BG_CycleInven(playerState_t *ps, int direction);
;12:void BG_CycleForce(playerState_t *ps, int direction);
;13:
;14:/*
;15:==================
;16:DeathmatchScoreboardMessage
;17:
;18:==================
;19:*/
;20:void DeathmatchScoreboardMessage( gentity_t *ent ) {
line 29
;21:	char		entry[1024];
;22:	char		string[1400];
;23:	int			stringlength;
;24:	int			i, j;
;25:	gclient_t	*cl;
;26:	int			numSorted, scoreFlags, accuracy, perfect;
;27:
;28:	// send the latest information on all clients
;29:	string[0] = 0;
ADDRLP4 1052
CNSTI1 0
ASGNI1
line 30
;30:	stringlength = 0;
ADDRLP4 1032
CNSTI4 0
ASGNI4
line 31
;31:	scoreFlags = 0;
ADDRLP4 2452
CNSTI4 0
ASGNI4
line 33
;32:
;33:	numSorted = level.numConnectedClients;
ADDRLP4 1048
ADDRGP4 level+72
INDIRI4
ASGNI4
line 35
;34:	
;35:	if (numSorted > MAX_CLIENT_SCORE_SEND)
ADDRLP4 1048
INDIRI4
CNSTI4 20
LEI4 $80
line 36
;36:	{
line 37
;37:		numSorted = MAX_CLIENT_SCORE_SEND;
ADDRLP4 1048
CNSTI4 20
ASGNI4
line 38
;38:	}
LABELV $80
line 40
;39:
;40:	for (i=0 ; i < numSorted ; i++) {
ADDRLP4 4
CNSTI4 0
ASGNI4
ADDRGP4 $85
JUMPV
LABELV $82
line 43
;41:		int		ping;
;42:
;43:		cl = &level.clients[level.sortedClients[i]];
ADDRLP4 0
CNSTI4 1812
ADDRLP4 4
INDIRI4
CNSTI4 2
LSHI4
ADDRGP4 level+84
ADDP4
INDIRI4
MULI4
ADDRGP4 level
INDIRP4
ADDP4
ASGNP4
line 45
;44:
;45:		if ( cl->pers.connected == CON_CONNECTING ) {
ADDRLP4 0
INDIRP4
CNSTI4 1380
ADDP4
INDIRI4
CNSTI4 1
NEI4 $87
line 46
;46:			ping = -1;
ADDRLP4 2456
CNSTI4 -1
ASGNI4
line 47
;47:		} else {
ADDRGP4 $88
JUMPV
LABELV $87
line 48
;48:			ping = cl->ps.ping < 999 ? cl->ps.ping : 999;
ADDRLP4 0
INDIRP4
CNSTI4 484
ADDP4
INDIRI4
CNSTI4 999
GEI4 $90
ADDRLP4 2460
ADDRLP4 0
INDIRP4
CNSTI4 484
ADDP4
INDIRI4
ASGNI4
ADDRGP4 $91
JUMPV
LABELV $90
ADDRLP4 2460
CNSTI4 999
ASGNI4
LABELV $91
ADDRLP4 2456
ADDRLP4 2460
INDIRI4
ASGNI4
line 49
;49:		}
LABELV $88
line 51
;50:
;51:		if( cl->accuracy_shots ) {
ADDRLP4 0
INDIRP4
CNSTI4 1668
ADDP4
INDIRI4
CNSTI4 0
EQI4 $92
line 52
;52:			accuracy = cl->accuracy_hits * 100 / cl->accuracy_shots;
ADDRLP4 1040
CNSTI4 100
ADDRLP4 0
INDIRP4
CNSTI4 1672
ADDP4
INDIRI4
MULI4
ADDRLP4 0
INDIRP4
CNSTI4 1668
ADDP4
INDIRI4
DIVI4
ASGNI4
line 53
;53:		}
ADDRGP4 $93
JUMPV
LABELV $92
line 54
;54:		else {
line 55
;55:			accuracy = 0;
ADDRLP4 1040
CNSTI4 0
ASGNI4
line 56
;56:		}
LABELV $93
line 57
;57:		perfect = ( cl->ps.persistant[PERS_RANK] == 0 && cl->ps.persistant[PERS_KILLED] == 0 ) ? 1 : 0;
ADDRLP4 2468
CNSTI4 0
ASGNI4
ADDRLP4 0
INDIRP4
CNSTI4 288
ADDP4
INDIRI4
ADDRLP4 2468
INDIRI4
NEI4 $95
ADDRLP4 0
INDIRP4
CNSTI4 312
ADDP4
INDIRI4
ADDRLP4 2468
INDIRI4
NEI4 $95
ADDRLP4 2460
CNSTI4 1
ASGNI4
ADDRGP4 $96
JUMPV
LABELV $95
ADDRLP4 2460
CNSTI4 0
ASGNI4
LABELV $96
ADDRLP4 1044
ADDRLP4 2460
INDIRI4
ASGNI4
line 59
;58:
;59:		Com_sprintf (entry, sizeof(entry),
ADDRLP4 8
ARGP4
CNSTI4 1024
ARGI4
ADDRGP4 $97
ARGP4
ADDRLP4 2472
ADDRLP4 4
INDIRI4
CNSTI4 2
LSHI4
ASGNI4
ADDRLP4 2472
INDIRI4
ADDRGP4 level+84
ADDP4
INDIRI4
ARGI4
ADDRLP4 0
INDIRP4
CNSTI4 280
ADDP4
INDIRI4
ARGI4
ADDRLP4 2456
INDIRI4
ARGI4
ADDRGP4 level+32
INDIRI4
ADDRLP4 0
INDIRP4
CNSTI4 1468
ADDP4
INDIRI4
SUBI4
CNSTI4 60000
DIVI4
ARGI4
ADDRLP4 2452
INDIRI4
ARGI4
CNSTI4 832
ADDRLP4 2472
INDIRI4
ADDRGP4 level+84
ADDP4
INDIRI4
MULI4
ADDRGP4 g_entities+272
ADDP4
INDIRI4
ARGI4
ADDRLP4 1040
INDIRI4
ARGI4
ADDRLP4 0
INDIRP4
CNSTI4 316
ADDP4
INDIRI4
ARGI4
ADDRLP4 0
INDIRP4
CNSTI4 320
ADDP4
INDIRI4
ARGI4
ADDRLP4 0
INDIRP4
CNSTI4 332
ADDP4
INDIRI4
ARGI4
ADDRLP4 0
INDIRP4
CNSTI4 324
ADDP4
INDIRI4
ARGI4
ADDRLP4 0
INDIRP4
CNSTI4 328
ADDP4
INDIRI4
ARGI4
ADDRLP4 1044
INDIRI4
ARGI4
ADDRLP4 0
INDIRP4
CNSTI4 336
ADDP4
INDIRI4
ARGI4
ADDRGP4 Com_sprintf
CALLV
pop
line 70
;60:			" %i %i %i %i %i %i %i %i %i %i %i %i %i %i", level.sortedClients[i],
;61:			cl->ps.persistant[PERS_SCORE], ping, (level.time - cl->pers.enterTime)/60000,
;62:			scoreFlags, g_entities[level.sortedClients[i]].s.powerups, accuracy, 
;63:			cl->ps.persistant[PERS_IMPRESSIVE_COUNT],
;64:			cl->ps.persistant[PERS_EXCELLENT_COUNT],
;65:			cl->ps.persistant[PERS_GAUNTLET_FRAG_COUNT], 
;66:			cl->ps.persistant[PERS_DEFEND_COUNT], 
;67:			cl->ps.persistant[PERS_ASSIST_COUNT], 
;68:			perfect,
;69:			cl->ps.persistant[PERS_CAPTURES]);
;70:		j = strlen(entry);
ADDRLP4 8
ARGP4
ADDRLP4 2480
ADDRGP4 strlen
CALLI4
ASGNI4
ADDRLP4 1036
ADDRLP4 2480
INDIRI4
ASGNI4
line 71
;71:		if (stringlength + j > 1022)
ADDRLP4 1032
INDIRI4
ADDRLP4 1036
INDIRI4
ADDI4
CNSTI4 1022
LEI4 $102
line 72
;72:			break;
ADDRGP4 $84
JUMPV
LABELV $102
line 73
;73:		strcpy (string + stringlength, entry);
ADDRLP4 1032
INDIRI4
ADDRLP4 1052
ADDP4
ARGP4
ADDRLP4 8
ARGP4
ADDRGP4 strcpy
CALLP4
pop
line 74
;74:		stringlength += j;
ADDRLP4 1032
ADDRLP4 1032
INDIRI4
ADDRLP4 1036
INDIRI4
ADDI4
ASGNI4
line 75
;75:	}
LABELV $83
line 40
ADDRLP4 4
ADDRLP4 4
INDIRI4
CNSTI4 1
ADDI4
ASGNI4
LABELV $85
ADDRLP4 4
INDIRI4
ADDRLP4 1048
INDIRI4
LTI4 $82
LABELV $84
line 78
;76:
;77:	//still want to know the total # of clients
;78:	i = level.numConnectedClients;
ADDRLP4 4
ADDRGP4 level+72
INDIRI4
ASGNI4
line 80
;79:
;80:	trap_SendServerCommand( ent-g_entities, va("scores %i %i %i%s", i, 
ADDRGP4 $105
ARGP4
ADDRLP4 4
INDIRI4
ARGI4
ADDRGP4 level+44+4
INDIRI4
ARGI4
ADDRGP4 level+44+8
INDIRI4
ARGI4
ADDRLP4 1052
ARGP4
ADDRLP4 2456
ADDRGP4 va
CALLP4
ASGNP4
ADDRFP4 0
INDIRP4
CVPU4 4
ADDRGP4 g_entities
CVPU4 4
SUBU4
CVUI4 4
CNSTI4 832
DIVI4
ARGI4
ADDRLP4 2456
INDIRP4
ARGP4
ADDRGP4 trap_SendServerCommand
CALLV
pop
line 83
;81:		level.teamScores[TEAM_RED], level.teamScores[TEAM_BLUE],
;82:		string ) );
;83:}
LABELV $78
endproc DeathmatchScoreboardMessage 2484 68
export Cmd_Score_f
proc Cmd_Score_f 0 4
line 93
;84:
;85:
;86:/*
;87:==================
;88:Cmd_Score_f
;89:
;90:Request current scoreboard information
;91:==================
;92:*/
;93:void Cmd_Score_f( gentity_t *ent ) {
line 94
;94:	DeathmatchScoreboardMessage( ent );
ADDRFP4 0
INDIRP4
ARGP4
ADDRGP4 DeathmatchScoreboardMessage
CALLV
pop
line 95
;95:}
LABELV $110
endproc Cmd_Score_f 0 4
export CheatsOk
proc CheatsOk 8 8
line 104
;96:
;97:
;98:
;99:/*
;100:==================
;101:CheatsOk
;102:==================
;103:*/
;104:qboolean	CheatsOk( gentity_t *ent ) {
line 105
;105:	if ( !g_cheats.integer ) {
ADDRGP4 g_cheats+12
INDIRI4
CNSTI4 0
NEI4 $112
line 106
;106:		trap_SendServerCommand( ent-g_entities, va("print \"%s\n\"", G_GetStripEdString("SVINGAME", "NOCHEATS")));
ADDRGP4 $116
ARGP4
ADDRGP4 $117
ARGP4
ADDRLP4 0
ADDRGP4 G_GetStripEdString
CALLP4
ASGNP4
ADDRGP4 $115
ARGP4
ADDRLP4 0
INDIRP4
ARGP4
ADDRLP4 4
ADDRGP4 va
CALLP4
ASGNP4
ADDRFP4 0
INDIRP4
CVPU4 4
ADDRGP4 g_entities
CVPU4 4
SUBU4
CVUI4 4
CNSTI4 832
DIVI4
ARGI4
ADDRLP4 4
INDIRP4
ARGP4
ADDRGP4 trap_SendServerCommand
CALLV
pop
line 107
;107:		return qfalse;
CNSTI4 0
RETI4
ADDRGP4 $111
JUMPV
LABELV $112
line 109
;108:	}
;109:	if ( ent->health <= 0 ) {
ADDRFP4 0
INDIRP4
CNSTI4 676
ADDP4
INDIRI4
CNSTI4 0
GTI4 $118
line 110
;110:		trap_SendServerCommand( ent-g_entities, va("print \"%s\n\"", G_GetStripEdString("SVINGAME", "MUSTBEALIVE")));
ADDRGP4 $116
ARGP4
ADDRGP4 $120
ARGP4
ADDRLP4 0
ADDRGP4 G_GetStripEdString
CALLP4
ASGNP4
ADDRGP4 $115
ARGP4
ADDRLP4 0
INDIRP4
ARGP4
ADDRLP4 4
ADDRGP4 va
CALLP4
ASGNP4
ADDRFP4 0
INDIRP4
CVPU4 4
ADDRGP4 g_entities
CVPU4 4
SUBU4
CVUI4 4
CNSTI4 832
DIVI4
ARGI4
ADDRLP4 4
INDIRP4
ARGP4
ADDRGP4 trap_SendServerCommand
CALLV
pop
line 111
;111:		return qfalse;
CNSTI4 0
RETI4
ADDRGP4 $111
JUMPV
LABELV $118
line 113
;112:	}
;113:	return qtrue;
CNSTI4 1
RETI4
LABELV $111
endproc CheatsOk 8 8
bss
align 1
LABELV $122
skip 1024
export ConcatArgs
code
proc ConcatArgs 1048 12
line 122
;114:}
;115:
;116:
;117:/*
;118:==================
;119:ConcatArgs
;120:==================
;121:*/
;122:char	*ConcatArgs( int start ) {
line 128
;123:	int		i, c, tlen;
;124:	static char	line[MAX_STRING_CHARS];
;125:	int		len;
;126:	char	arg[MAX_STRING_CHARS];
;127:
;128:	len = 0;
ADDRLP4 0
CNSTI4 0
ASGNI4
line 129
;129:	c = trap_Argc();
ADDRLP4 1040
ADDRGP4 trap_Argc
CALLI4
ASGNI4
ADDRLP4 1036
ADDRLP4 1040
INDIRI4
ASGNI4
line 130
;130:	for ( i = start ; i < c ; i++ ) {
ADDRLP4 4
ADDRFP4 0
INDIRI4
ASGNI4
ADDRGP4 $126
JUMPV
LABELV $123
line 131
;131:		trap_Argv( i, arg, sizeof( arg ) );
ADDRLP4 4
INDIRI4
ARGI4
ADDRLP4 12
ARGP4
CNSTI4 1024
ARGI4
ADDRGP4 trap_Argv
CALLV
pop
line 132
;132:		tlen = strlen( arg );
ADDRLP4 12
ARGP4
ADDRLP4 1044
ADDRGP4 strlen
CALLI4
ASGNI4
ADDRLP4 8
ADDRLP4 1044
INDIRI4
ASGNI4
line 134
;133:		//JediDog: added this for anti 'msgboom/msgbof'
;134:		if ( len + tlen >= 896 ) {
ADDRLP4 0
INDIRI4
ADDRLP4 8
INDIRI4
ADDI4
CNSTI4 896
LTI4 $127
line 135
;135:			break;
ADDRGP4 $125
JUMPV
LABELV $127
line 137
;136:		}
;137:		memcpy( line + len, arg, tlen );
ADDRLP4 0
INDIRI4
ADDRGP4 $122
ADDP4
ARGP4
ADDRLP4 12
ARGP4
ADDRLP4 8
INDIRI4
ARGI4
ADDRGP4 memcpy
CALLP4
pop
line 138
;138:		len += tlen;
ADDRLP4 0
ADDRLP4 0
INDIRI4
ADDRLP4 8
INDIRI4
ADDI4
ASGNI4
line 139
;139:		if ( i != c - 1 ) {
ADDRLP4 4
INDIRI4
ADDRLP4 1036
INDIRI4
CNSTI4 1
SUBI4
EQI4 $129
line 140
;140:			line[len] = ' ';
ADDRLP4 0
INDIRI4
ADDRGP4 $122
ADDP4
CNSTI1 32
ASGNI1
line 141
;141:			len++;
ADDRLP4 0
ADDRLP4 0
INDIRI4
CNSTI4 1
ADDI4
ASGNI4
line 142
;142:		}
LABELV $129
line 143
;143:	}
LABELV $124
line 130
ADDRLP4 4
ADDRLP4 4
INDIRI4
CNSTI4 1
ADDI4
ASGNI4
LABELV $126
ADDRLP4 4
INDIRI4
ADDRLP4 1036
INDIRI4
LTI4 $123
LABELV $125
line 145
;144:
;145:	line[len] = 0;
ADDRLP4 0
INDIRI4
ADDRGP4 $122
ADDP4
CNSTI1 0
ASGNI1
line 147
;146:
;147:	return line;
ADDRGP4 $122
RETP4
LABELV $121
endproc ConcatArgs 1048 12
export SanitizeString
proc SanitizeString 16 4
line 157
;148:}
;149:
;150:/*
;151:==================
;152:SanitizeString
;153:
;154:Remove case and control characters
;155:==================
;156:*/
;157:void SanitizeString( char *in, char *out ) {
ADDRGP4 $133
JUMPV
LABELV $132
line 158
;158:	while ( *in ) {
line 159
;159:		if ( *in == 27 ) {
ADDRFP4 0
INDIRP4
INDIRI1
CVII4 1
CNSTI4 27
NEI4 $135
line 160
;160:			in += 2;		// skip color code
ADDRFP4 0
ADDRFP4 0
INDIRP4
CNSTI4 2
ADDP4
ASGNP4
line 161
;161:			continue;
ADDRGP4 $133
JUMPV
LABELV $135
line 163
;162:		}
;163:		if ( *in < 32 ) {
ADDRFP4 0
INDIRP4
INDIRI1
CVII4 1
CNSTI4 32
GEI4 $137
line 164
;164:			in++;
ADDRFP4 0
ADDRFP4 0
INDIRP4
CNSTI4 1
ADDP4
ASGNP4
line 165
;165:			continue;
ADDRGP4 $133
JUMPV
LABELV $137
line 167
;166:		}
;167:		*out++ = tolower( *in++ );
ADDRLP4 0
ADDRFP4 4
INDIRP4
ASGNP4
ADDRLP4 8
CNSTI4 1
ASGNI4
ADDRFP4 4
ADDRLP4 0
INDIRP4
ADDRLP4 8
INDIRI4
ADDP4
ASGNP4
ADDRLP4 4
ADDRFP4 0
INDIRP4
ASGNP4
ADDRFP4 0
ADDRLP4 4
INDIRP4
ADDRLP4 8
INDIRI4
ADDP4
ASGNP4
ADDRLP4 4
INDIRP4
INDIRI1
CVII4 1
ARGI4
ADDRLP4 12
ADDRGP4 tolower
CALLI4
ASGNI4
ADDRLP4 0
INDIRP4
ADDRLP4 12
INDIRI4
CVII1 4
ASGNI1
line 168
;168:	}
LABELV $133
line 158
ADDRFP4 0
INDIRP4
INDIRI1
CVII4 1
CNSTI4 0
NEI4 $132
line 170
;169:
;170:	*out = 0;
ADDRFP4 4
INDIRP4
CNSTI1 0
ASGNI1
line 171
;171:}
LABELV $131
endproc SanitizeString 16 4
export ClientNumberFromString
proc ClientNumberFromString 2072 8
line 181
;172:
;173:/*
;174:==================
;175:ClientNumberFromString
;176:
;177:Returns a player number for either a number or name string
;178:Returns -1 if invalid
;179:==================
;180:*/
;181:int ClientNumberFromString( gentity_t *to, char *s ) {
line 188
;182:	gclient_t	*cl;
;183:	int			idnum;
;184:	char		s2[MAX_STRING_CHARS];
;185:	char		n2[MAX_STRING_CHARS];
;186:
;187:	// numeric values are just slot numbers
;188:	if (s[0] >= '0' && s[0] <= '9') {
ADDRLP4 2056
ADDRFP4 4
INDIRP4
INDIRI1
CVII4 1
ASGNI4
ADDRLP4 2056
INDIRI4
CNSTI4 48
LTI4 $140
ADDRLP4 2056
INDIRI4
CNSTI4 57
GTI4 $140
line 189
;189:		idnum = atoi( s );
ADDRFP4 4
INDIRP4
ARGP4
ADDRLP4 2060
ADDRGP4 atoi
CALLI4
ASGNI4
ADDRLP4 4
ADDRLP4 2060
INDIRI4
ASGNI4
line 190
;190:		if ( idnum < 0 || idnum >= level.maxclients ) {
ADDRLP4 4
INDIRI4
CNSTI4 0
LTI4 $145
ADDRLP4 4
INDIRI4
ADDRGP4 level+24
INDIRI4
LTI4 $142
LABELV $145
line 191
;191:			trap_SendServerCommand( to-g_entities, va("print \"Bad client slot: %i\n\"", idnum));
ADDRGP4 $146
ARGP4
ADDRLP4 4
INDIRI4
ARGI4
ADDRLP4 2068
ADDRGP4 va
CALLP4
ASGNP4
ADDRFP4 0
INDIRP4
CVPU4 4
ADDRGP4 g_entities
CVPU4 4
SUBU4
CVUI4 4
CNSTI4 832
DIVI4
ARGI4
ADDRLP4 2068
INDIRP4
ARGP4
ADDRGP4 trap_SendServerCommand
CALLV
pop
line 192
;192:			return -1;
CNSTI4 -1
RETI4
ADDRGP4 $139
JUMPV
LABELV $142
line 195
;193:		}
;194:
;195:		cl = &level.clients[idnum];
ADDRLP4 0
CNSTI4 1812
ADDRLP4 4
INDIRI4
MULI4
ADDRGP4 level
INDIRP4
ADDP4
ASGNP4
line 196
;196:		if ( cl->pers.connected != CON_CONNECTED ) {
ADDRLP4 0
INDIRP4
CNSTI4 1380
ADDP4
INDIRI4
CNSTI4 2
EQI4 $147
line 197
;197:			trap_SendServerCommand( to-g_entities, va("print \"Client %i is not active\n\"", idnum));
ADDRGP4 $149
ARGP4
ADDRLP4 4
INDIRI4
ARGI4
ADDRLP4 2068
ADDRGP4 va
CALLP4
ASGNP4
ADDRFP4 0
INDIRP4
CVPU4 4
ADDRGP4 g_entities
CVPU4 4
SUBU4
CVUI4 4
CNSTI4 832
DIVI4
ARGI4
ADDRLP4 2068
INDIRP4
ARGP4
ADDRGP4 trap_SendServerCommand
CALLV
pop
line 198
;198:			return -1;
CNSTI4 -1
RETI4
ADDRGP4 $139
JUMPV
LABELV $147
line 200
;199:		}
;200:		return idnum;
ADDRLP4 4
INDIRI4
RETI4
ADDRGP4 $139
JUMPV
LABELV $140
line 204
;201:	}
;202:
;203:	// check for a name match
;204:	SanitizeString( s, s2 );
ADDRFP4 4
INDIRP4
ARGP4
ADDRLP4 1032
ARGP4
ADDRGP4 SanitizeString
CALLV
pop
line 205
;205:	for ( idnum=0,cl=level.clients ; idnum < level.maxclients ; idnum++,cl++ ) {
ADDRLP4 4
CNSTI4 0
ASGNI4
ADDRLP4 0
ADDRGP4 level
INDIRP4
ASGNP4
ADDRGP4 $153
JUMPV
LABELV $150
line 206
;206:		if ( cl->pers.connected != CON_CONNECTED ) {
ADDRLP4 0
INDIRP4
CNSTI4 1380
ADDP4
INDIRI4
CNSTI4 2
EQI4 $155
line 207
;207:			continue;
ADDRGP4 $151
JUMPV
LABELV $155
line 209
;208:		}
;209:		SanitizeString( cl->pers.netname, n2 );
ADDRLP4 0
INDIRP4
CNSTI4 1428
ADDP4
ARGP4
ADDRLP4 8
ARGP4
ADDRGP4 SanitizeString
CALLV
pop
line 210
;210:		if ( !strcmp( n2, s2 ) ) {
ADDRLP4 8
ARGP4
ADDRLP4 1032
ARGP4
ADDRLP4 2060
ADDRGP4 strcmp
CALLI4
ASGNI4
ADDRLP4 2060
INDIRI4
CNSTI4 0
NEI4 $157
line 211
;211:			return idnum;
ADDRLP4 4
INDIRI4
RETI4
ADDRGP4 $139
JUMPV
LABELV $157
line 213
;212:		}
;213:	}
LABELV $151
line 205
ADDRLP4 4
ADDRLP4 4
INDIRI4
CNSTI4 1
ADDI4
ASGNI4
ADDRLP4 0
ADDRLP4 0
INDIRP4
CNSTI4 1812
ADDP4
ASGNP4
LABELV $153
ADDRLP4 4
INDIRI4
ADDRGP4 level+24
INDIRI4
LTI4 $150
line 215
;214:
;215:	trap_SendServerCommand( to-g_entities, va("print \"User %s is not on the server\n\"", s));
ADDRGP4 $159
ARGP4
ADDRFP4 4
INDIRP4
ARGP4
ADDRLP4 2060
ADDRGP4 va
CALLP4
ASGNP4
ADDRFP4 0
INDIRP4
CVPU4 4
ADDRGP4 g_entities
CVPU4 4
SUBU4
CVUI4 4
CNSTI4 832
DIVI4
ARGI4
ADDRLP4 2060
INDIRP4
ARGP4
ADDRGP4 trap_SendServerCommand
CALLV
pop
line 216
;216:	return -1;
CNSTI4 -1
RETI4
LABELV $139
endproc ClientNumberFromString 2072 8
export Cmd_Give_f
proc Cmd_Give_f 3200 12
line 227
;217:}
;218:
;219:/*
;220:==================
;221:Cmd_Give_f
;222:
;223:Give items to a client
;224:==================
;225:*/
;226:void Cmd_Give_f (gentity_t *ent)
;227:{
line 236
;228:	char		name[MAX_TOKEN_CHARS];
;229:	gitem_t		*it;
;230:	int			i;
;231:	qboolean	give_all;
;232:	gentity_t		*it_ent;
;233:	trace_t		trace;
;234:	char		arg[MAX_TOKEN_CHARS];
;235:
;236:	if ( !CheatsOk( ent ) ) {
ADDRFP4 0
INDIRP4
ARGP4
ADDRLP4 3144
ADDRGP4 CheatsOk
CALLI4
ASGNI4
ADDRLP4 3144
INDIRI4
CNSTI4 0
NEI4 $161
line 237
;237:		return;
ADDRGP4 $160
JUMPV
LABELV $161
line 240
;238:	}
;239:
;240:	trap_Argv( 1, name, sizeof( name ) );
CNSTI4 1
ARGI4
ADDRLP4 4
ARGP4
CNSTI4 1024
ARGI4
ADDRGP4 trap_Argv
CALLV
pop
line 242
;241:
;242:	if (Q_stricmp(name, "all") == 0)
ADDRLP4 4
ARGP4
ADDRGP4 $165
ARGP4
ADDRLP4 3148
ADDRGP4 Q_stricmp
CALLI4
ASGNI4
ADDRLP4 3148
INDIRI4
CNSTI4 0
NEI4 $163
line 243
;243:		give_all = qtrue;
ADDRLP4 1028
CNSTI4 1
ASGNI4
ADDRGP4 $164
JUMPV
LABELV $163
line 245
;244:	else
;245:		give_all = qfalse;
ADDRLP4 1028
CNSTI4 0
ASGNI4
LABELV $164
line 247
;246:
;247:	if (give_all)
ADDRLP4 1028
INDIRI4
CNSTI4 0
EQI4 $166
line 248
;248:	{
line 249
;249:		i = 0;
ADDRLP4 0
CNSTI4 0
ASGNI4
ADDRGP4 $169
JUMPV
LABELV $168
line 251
;250:		while (i < HI_NUM_HOLDABLE)
;251:		{
line 252
;252:			ent->client->ps.stats[STAT_HOLDABLE_ITEMS] |= (1 << i);
ADDRLP4 3152
ADDRFP4 0
INDIRP4
CNSTI4 408
ADDP4
INDIRP4
CNSTI4 224
ADDP4
ASGNP4
ADDRLP4 3152
INDIRP4
ADDRLP4 3152
INDIRP4
INDIRI4
CNSTI4 1
ADDRLP4 0
INDIRI4
LSHI4
BORI4
ASGNI4
line 253
;253:			i++;
ADDRLP4 0
ADDRLP4 0
INDIRI4
CNSTI4 1
ADDI4
ASGNI4
line 254
;254:		}
LABELV $169
line 250
ADDRLP4 0
INDIRI4
CNSTI4 7
LTI4 $168
line 255
;255:		i = 0;
ADDRLP4 0
CNSTI4 0
ASGNI4
line 256
;256:	}
LABELV $166
line 258
;257:
;258:	if (give_all || Q_stricmp( name, "health") == 0)
ADDRLP4 1028
INDIRI4
CNSTI4 0
NEI4 $174
ADDRLP4 4
ARGP4
ADDRGP4 $173
ARGP4
ADDRLP4 3152
ADDRGP4 Q_stricmp
CALLI4
ASGNI4
ADDRLP4 3152
INDIRI4
CNSTI4 0
NEI4 $171
LABELV $174
line 259
;259:	{
line 260
;260:		if (trap_Argc() == 3) {
ADDRLP4 3156
ADDRGP4 trap_Argc
CALLI4
ASGNI4
ADDRLP4 3156
INDIRI4
CNSTI4 3
NEI4 $175
line 261
;261:			trap_Argv( 2, arg, sizeof( arg ) );
CNSTI4 2
ARGI4
ADDRLP4 1036
ARGP4
CNSTI4 1024
ARGI4
ADDRGP4 trap_Argv
CALLV
pop
line 262
;262:			ent->health = atoi(arg);
ADDRLP4 1036
ARGP4
ADDRLP4 3160
ADDRGP4 atoi
CALLI4
ASGNI4
ADDRFP4 0
INDIRP4
CNSTI4 676
ADDP4
ADDRLP4 3160
INDIRI4
ASGNI4
line 263
;263:			if (ent->health > ent->client->ps.stats[STAT_MAX_HEALTH]) {
ADDRLP4 3164
ADDRFP4 0
INDIRP4
ASGNP4
ADDRLP4 3164
INDIRP4
CNSTI4 676
ADDP4
INDIRI4
ADDRLP4 3164
INDIRP4
CNSTI4 408
ADDP4
INDIRP4
CNSTI4 248
ADDP4
INDIRI4
LEI4 $176
line 264
;264:				ent->health = ent->client->ps.stats[STAT_MAX_HEALTH];
ADDRLP4 3168
ADDRFP4 0
INDIRP4
ASGNP4
ADDRLP4 3168
INDIRP4
CNSTI4 676
ADDP4
ADDRLP4 3168
INDIRP4
CNSTI4 408
ADDP4
INDIRP4
CNSTI4 248
ADDP4
INDIRI4
ASGNI4
line 265
;265:			}
line 266
;266:		}
ADDRGP4 $176
JUMPV
LABELV $175
line 267
;267:		else {
line 268
;268:			ent->health = ent->client->ps.stats[STAT_MAX_HEALTH];
ADDRLP4 3160
ADDRFP4 0
INDIRP4
ASGNP4
ADDRLP4 3160
INDIRP4
CNSTI4 676
ADDP4
ADDRLP4 3160
INDIRP4
CNSTI4 408
ADDP4
INDIRP4
CNSTI4 248
ADDP4
INDIRI4
ASGNI4
line 269
;269:		}
LABELV $176
line 270
;270:		if (!give_all)
ADDRLP4 1028
INDIRI4
CNSTI4 0
NEI4 $179
line 271
;271:			return;
ADDRGP4 $160
JUMPV
LABELV $179
line 272
;272:	}
LABELV $171
line 274
;273:
;274:	if (give_all || Q_stricmp(name, "weapons") == 0)
ADDRLP4 1028
INDIRI4
CNSTI4 0
NEI4 $184
ADDRLP4 4
ARGP4
ADDRGP4 $183
ARGP4
ADDRLP4 3156
ADDRGP4 Q_stricmp
CALLI4
ASGNI4
ADDRLP4 3156
INDIRI4
CNSTI4 0
NEI4 $181
LABELV $184
line 275
;275:	{
line 276
;276:		ent->client->ps.stats[STAT_WEAPONS] = (1 << (WP_DET_PACK+1))  - ( 1 << WP_NONE );
ADDRFP4 0
INDIRP4
CNSTI4 408
ADDP4
INDIRP4
CNSTI4 232
ADDP4
CNSTI4 16383
ASGNI4
line 277
;277:		if (!give_all)
ADDRLP4 1028
INDIRI4
CNSTI4 0
NEI4 $185
line 278
;278:			return;
ADDRGP4 $160
JUMPV
LABELV $185
line 279
;279:	}
LABELV $181
line 281
;280:	
;281:	if ( !give_all && Q_stricmp(name, "weaponnum") == 0 )
ADDRLP4 1028
INDIRI4
CNSTI4 0
NEI4 $187
ADDRLP4 4
ARGP4
ADDRGP4 $189
ARGP4
ADDRLP4 3160
ADDRGP4 Q_stricmp
CALLI4
ASGNI4
ADDRLP4 3160
INDIRI4
CNSTI4 0
NEI4 $187
line 282
;282:	{
line 283
;283:		trap_Argv( 2, arg, sizeof( arg ) );
CNSTI4 2
ARGI4
ADDRLP4 1036
ARGP4
CNSTI4 1024
ARGI4
ADDRGP4 trap_Argv
CALLV
pop
line 284
;284:		ent->client->ps.stats[STAT_WEAPONS] |= (1 << atoi(arg));
ADDRLP4 1036
ARGP4
ADDRLP4 3164
ADDRGP4 atoi
CALLI4
ASGNI4
ADDRLP4 3168
ADDRFP4 0
INDIRP4
CNSTI4 408
ADDP4
INDIRP4
CNSTI4 232
ADDP4
ASGNP4
ADDRLP4 3168
INDIRP4
ADDRLP4 3168
INDIRP4
INDIRI4
CNSTI4 1
ADDRLP4 3164
INDIRI4
LSHI4
BORI4
ASGNI4
line 285
;285:		return;
ADDRGP4 $160
JUMPV
LABELV $187
line 288
;286:	}
;287:
;288:	if (give_all || Q_stricmp(name, "ammo") == 0)
ADDRLP4 1028
INDIRI4
CNSTI4 0
NEI4 $193
ADDRLP4 4
ARGP4
ADDRGP4 $192
ARGP4
ADDRLP4 3164
ADDRGP4 Q_stricmp
CALLI4
ASGNI4
ADDRLP4 3164
INDIRI4
CNSTI4 0
NEI4 $190
LABELV $193
line 289
;289:	{
line 290
;290:		int num = 999;
ADDRLP4 3168
CNSTI4 999
ASGNI4
line 291
;291:		if (trap_Argc() == 3) {
ADDRLP4 3172
ADDRGP4 trap_Argc
CALLI4
ASGNI4
ADDRLP4 3172
INDIRI4
CNSTI4 3
NEI4 $194
line 292
;292:			trap_Argv( 2, arg, sizeof( arg ) );
CNSTI4 2
ARGI4
ADDRLP4 1036
ARGP4
CNSTI4 1024
ARGI4
ADDRGP4 trap_Argv
CALLV
pop
line 293
;293:			num = atoi(arg);
ADDRLP4 1036
ARGP4
ADDRLP4 3176
ADDRGP4 atoi
CALLI4
ASGNI4
ADDRLP4 3168
ADDRLP4 3176
INDIRI4
ASGNI4
line 294
;294:		}
LABELV $194
line 295
;295:		for ( i = 0 ; i < MAX_WEAPONS ; i++ ) {
ADDRLP4 0
CNSTI4 0
ASGNI4
LABELV $196
line 296
;296:			ent->client->ps.ammo[i] = num;
ADDRLP4 3176
CNSTI4 408
ASGNI4
ADDRLP4 0
INDIRI4
CNSTI4 2
LSHI4
ADDRFP4 0
INDIRP4
ADDRLP4 3176
INDIRI4
ADDP4
INDIRP4
ADDRLP4 3176
INDIRI4
ADDP4
ADDP4
ADDRLP4 3168
INDIRI4
ASGNI4
line 297
;297:		}
LABELV $197
line 295
ADDRLP4 0
ADDRLP4 0
INDIRI4
CNSTI4 1
ADDI4
ASGNI4
ADDRLP4 0
INDIRI4
CNSTI4 16
LTI4 $196
line 298
;298:		if (!give_all)
ADDRLP4 1028
INDIRI4
CNSTI4 0
NEI4 $200
line 299
;299:			return;
ADDRGP4 $160
JUMPV
LABELV $200
line 300
;300:	}
LABELV $190
line 302
;301:
;302:	if (give_all || Q_stricmp(name, "armor") == 0)
ADDRLP4 1028
INDIRI4
CNSTI4 0
NEI4 $205
ADDRLP4 4
ARGP4
ADDRGP4 $204
ARGP4
ADDRLP4 3168
ADDRGP4 Q_stricmp
CALLI4
ASGNI4
ADDRLP4 3168
INDIRI4
CNSTI4 0
NEI4 $202
LABELV $205
line 303
;303:	{
line 304
;304:		if (trap_Argc() == 3) {
ADDRLP4 3172
ADDRGP4 trap_Argc
CALLI4
ASGNI4
ADDRLP4 3172
INDIRI4
CNSTI4 3
NEI4 $206
line 305
;305:			trap_Argv( 2, arg, sizeof( arg ) );
CNSTI4 2
ARGI4
ADDRLP4 1036
ARGP4
CNSTI4 1024
ARGI4
ADDRGP4 trap_Argv
CALLV
pop
line 306
;306:			ent->client->ps.stats[STAT_ARMOR] = atoi(arg);
ADDRLP4 1036
ARGP4
ADDRLP4 3176
ADDRGP4 atoi
CALLI4
ASGNI4
ADDRFP4 0
INDIRP4
CNSTI4 408
ADDP4
INDIRP4
CNSTI4 236
ADDP4
ADDRLP4 3176
INDIRI4
ASGNI4
line 307
;307:		} else {
ADDRGP4 $207
JUMPV
LABELV $206
line 308
;308:			ent->client->ps.stats[STAT_ARMOR] = ent->client->ps.stats[STAT_MAX_HEALTH];
ADDRLP4 3176
ADDRFP4 0
INDIRP4
CNSTI4 408
ADDP4
INDIRP4
ASGNP4
ADDRLP4 3176
INDIRP4
CNSTI4 236
ADDP4
ADDRLP4 3176
INDIRP4
CNSTI4 248
ADDP4
INDIRI4
ASGNI4
line 309
;309:		}
LABELV $207
line 311
;310:
;311:		if (!give_all)
ADDRLP4 1028
INDIRI4
CNSTI4 0
NEI4 $208
line 312
;312:			return;
ADDRGP4 $160
JUMPV
LABELV $208
line 313
;313:	}
LABELV $202
line 315
;314:
;315:	if (Q_stricmp(name, "excellent") == 0) {
ADDRLP4 4
ARGP4
ADDRGP4 $212
ARGP4
ADDRLP4 3172
ADDRGP4 Q_stricmp
CALLI4
ASGNI4
ADDRLP4 3172
INDIRI4
CNSTI4 0
NEI4 $210
line 316
;316:		ent->client->ps.persistant[PERS_EXCELLENT_COUNT]++;
ADDRLP4 3176
ADDRFP4 0
INDIRP4
CNSTI4 408
ADDP4
INDIRP4
CNSTI4 320
ADDP4
ASGNP4
ADDRLP4 3176
INDIRP4
ADDRLP4 3176
INDIRP4
INDIRI4
CNSTI4 1
ADDI4
ASGNI4
line 317
;317:		return;
ADDRGP4 $160
JUMPV
LABELV $210
line 319
;318:	}
;319:	if (Q_stricmp(name, "impressive") == 0) {
ADDRLP4 4
ARGP4
ADDRGP4 $215
ARGP4
ADDRLP4 3176
ADDRGP4 Q_stricmp
CALLI4
ASGNI4
ADDRLP4 3176
INDIRI4
CNSTI4 0
NEI4 $213
line 320
;320:		ent->client->ps.persistant[PERS_IMPRESSIVE_COUNT]++;
ADDRLP4 3180
ADDRFP4 0
INDIRP4
CNSTI4 408
ADDP4
INDIRP4
CNSTI4 316
ADDP4
ASGNP4
ADDRLP4 3180
INDIRP4
ADDRLP4 3180
INDIRP4
INDIRI4
CNSTI4 1
ADDI4
ASGNI4
line 321
;321:		return;
ADDRGP4 $160
JUMPV
LABELV $213
line 323
;322:	}
;323:	if (Q_stricmp(name, "gauntletaward") == 0) {
ADDRLP4 4
ARGP4
ADDRGP4 $218
ARGP4
ADDRLP4 3180
ADDRGP4 Q_stricmp
CALLI4
ASGNI4
ADDRLP4 3180
INDIRI4
CNSTI4 0
NEI4 $216
line 324
;324:		ent->client->ps.persistant[PERS_GAUNTLET_FRAG_COUNT]++;
ADDRLP4 3184
ADDRFP4 0
INDIRP4
CNSTI4 408
ADDP4
INDIRP4
CNSTI4 332
ADDP4
ASGNP4
ADDRLP4 3184
INDIRP4
ADDRLP4 3184
INDIRP4
INDIRI4
CNSTI4 1
ADDI4
ASGNI4
line 325
;325:		return;
ADDRGP4 $160
JUMPV
LABELV $216
line 327
;326:	}
;327:	if (Q_stricmp(name, "defend") == 0) {
ADDRLP4 4
ARGP4
ADDRGP4 $221
ARGP4
ADDRLP4 3184
ADDRGP4 Q_stricmp
CALLI4
ASGNI4
ADDRLP4 3184
INDIRI4
CNSTI4 0
NEI4 $219
line 328
;328:		ent->client->ps.persistant[PERS_DEFEND_COUNT]++;
ADDRLP4 3188
ADDRFP4 0
INDIRP4
CNSTI4 408
ADDP4
INDIRP4
CNSTI4 324
ADDP4
ASGNP4
ADDRLP4 3188
INDIRP4
ADDRLP4 3188
INDIRP4
INDIRI4
CNSTI4 1
ADDI4
ASGNI4
line 329
;329:		return;
ADDRGP4 $160
JUMPV
LABELV $219
line 331
;330:	}
;331:	if (Q_stricmp(name, "assist") == 0) {
ADDRLP4 4
ARGP4
ADDRGP4 $224
ARGP4
ADDRLP4 3188
ADDRGP4 Q_stricmp
CALLI4
ASGNI4
ADDRLP4 3188
INDIRI4
CNSTI4 0
NEI4 $222
line 332
;332:		ent->client->ps.persistant[PERS_ASSIST_COUNT]++;
ADDRLP4 3192
ADDRFP4 0
INDIRP4
CNSTI4 408
ADDP4
INDIRP4
CNSTI4 328
ADDP4
ASGNP4
ADDRLP4 3192
INDIRP4
ADDRLP4 3192
INDIRP4
INDIRI4
CNSTI4 1
ADDI4
ASGNI4
line 333
;333:		return;
ADDRGP4 $160
JUMPV
LABELV $222
line 337
;334:	}
;335:
;336:	// spawn a specific item right on the player
;337:	if ( !give_all ) {
ADDRLP4 1028
INDIRI4
CNSTI4 0
NEI4 $225
line 338
;338:		it = BG_FindItem (name);
ADDRLP4 4
ARGP4
ADDRLP4 3192
ADDRGP4 BG_FindItem
CALLP4
ASGNP4
ADDRLP4 2060
ADDRLP4 3192
INDIRP4
ASGNP4
line 339
;339:		if (!it) {
ADDRLP4 2060
INDIRP4
CVPU4 4
CNSTU4 0
NEU4 $227
line 340
;340:			return;
ADDRGP4 $160
JUMPV
LABELV $227
line 343
;341:		}
;342:
;343:		it_ent = G_Spawn();
ADDRLP4 3196
ADDRGP4 G_Spawn
CALLP4
ASGNP4
ADDRLP4 1032
ADDRLP4 3196
INDIRP4
ASGNP4
line 344
;344:		VectorCopy( ent->r.currentOrigin, it_ent->s.origin );
ADDRLP4 1032
INDIRP4
CNSTI4 92
ADDP4
ADDRFP4 0
INDIRP4
CNSTI4 368
ADDP4
INDIRB
ASGNB 12
line 345
;345:		it_ent->classname = it->classname;
ADDRLP4 1032
INDIRP4
CNSTI4 416
ADDP4
ADDRLP4 2060
INDIRP4
INDIRP4
ASGNP4
line 346
;346:		G_SpawnItem (it_ent, it);
ADDRLP4 1032
INDIRP4
ARGP4
ADDRLP4 2060
INDIRP4
ARGP4
ADDRGP4 G_SpawnItem
CALLV
pop
line 347
;347:		FinishSpawningItem(it_ent );
ADDRLP4 1032
INDIRP4
ARGP4
ADDRGP4 FinishSpawningItem
CALLV
pop
line 348
;348:		memset( &trace, 0, sizeof( trace ) );
ADDRLP4 2064
ARGP4
CNSTI4 0
ARGI4
CNSTI4 1080
ARGI4
ADDRGP4 memset
CALLP4
pop
line 349
;349:		Touch_Item (it_ent, ent, &trace);
ADDRLP4 1032
INDIRP4
ARGP4
ADDRFP4 0
INDIRP4
ARGP4
ADDRLP4 2064
ARGP4
ADDRGP4 Touch_Item
CALLV
pop
line 350
;350:		if (it_ent->inuse) {
ADDRLP4 1032
INDIRP4
CNSTI4 412
ADDP4
INDIRI4
CNSTI4 0
EQI4 $229
line 351
;351:			G_FreeEntity( it_ent );
ADDRLP4 1032
INDIRP4
ARGP4
ADDRGP4 G_FreeEntity
CALLV
pop
line 352
;352:		}
LABELV $229
line 353
;353:	}
LABELV $225
line 354
;354:}
LABELV $160
endproc Cmd_Give_f 3200 12
export Cmd_God_f
proc Cmd_God_f 16 8
line 367
;355:
;356:
;357:/*
;358:==================
;359:Cmd_God_f
;360:
;361:Sets client to godmode
;362:
;363:argv(0) god
;364:==================
;365:*/
;366:void Cmd_God_f (gentity_t *ent)
;367:{
line 370
;368:	char	*msg;
;369:
;370:	if ( !CheatsOk( ent ) ) {
ADDRFP4 0
INDIRP4
ARGP4
ADDRLP4 4
ADDRGP4 CheatsOk
CALLI4
ASGNI4
ADDRLP4 4
INDIRI4
CNSTI4 0
NEI4 $232
line 371
;371:		return;
ADDRGP4 $231
JUMPV
LABELV $232
line 374
;372:	}
;373:
;374:	ent->flags ^= FL_GODMODE;
ADDRLP4 8
ADDRFP4 0
INDIRP4
CNSTI4 472
ADDP4
ASGNP4
ADDRLP4 8
INDIRP4
ADDRLP4 8
INDIRP4
INDIRI4
CNSTI4 16
BXORI4
ASGNI4
line 375
;375:	if (!(ent->flags & FL_GODMODE) )
ADDRFP4 0
INDIRP4
CNSTI4 472
ADDP4
INDIRI4
CNSTI4 16
BANDI4
CNSTI4 0
NEI4 $234
line 376
;376:		msg = "godmode OFF\n";
ADDRLP4 0
ADDRGP4 $236
ASGNP4
ADDRGP4 $235
JUMPV
LABELV $234
line 378
;377:	else
;378:		msg = "godmode ON\n";
ADDRLP4 0
ADDRGP4 $237
ASGNP4
LABELV $235
line 380
;379:
;380:	trap_SendServerCommand( ent-g_entities, va("print \"%s\"", msg));
ADDRGP4 $238
ARGP4
ADDRLP4 0
INDIRP4
ARGP4
ADDRLP4 12
ADDRGP4 va
CALLP4
ASGNP4
ADDRFP4 0
INDIRP4
CVPU4 4
ADDRGP4 g_entities
CVPU4 4
SUBU4
CVUI4 4
CNSTI4 832
DIVI4
ARGI4
ADDRLP4 12
INDIRP4
ARGP4
ADDRGP4 trap_SendServerCommand
CALLV
pop
line 381
;381:}
LABELV $231
endproc Cmd_God_f 16 8
export Cmd_Notarget_f
proc Cmd_Notarget_f 16 8
line 393
;382:
;383:
;384:/*
;385:==================
;386:Cmd_Notarget_f
;387:
;388:Sets client to notarget
;389:
;390:argv(0) notarget
;391:==================
;392:*/
;393:void Cmd_Notarget_f( gentity_t *ent ) {
line 396
;394:	char	*msg;
;395:
;396:	if ( !CheatsOk( ent ) ) {
ADDRFP4 0
INDIRP4
ARGP4
ADDRLP4 4
ADDRGP4 CheatsOk
CALLI4
ASGNI4
ADDRLP4 4
INDIRI4
CNSTI4 0
NEI4 $240
line 397
;397:		return;
ADDRGP4 $239
JUMPV
LABELV $240
line 400
;398:	}
;399:
;400:	ent->flags ^= FL_NOTARGET;
ADDRLP4 8
ADDRFP4 0
INDIRP4
CNSTI4 472
ADDP4
ASGNP4
ADDRLP4 8
INDIRP4
ADDRLP4 8
INDIRP4
INDIRI4
CNSTI4 32
BXORI4
ASGNI4
line 401
;401:	if (!(ent->flags & FL_NOTARGET) )
ADDRFP4 0
INDIRP4
CNSTI4 472
ADDP4
INDIRI4
CNSTI4 32
BANDI4
CNSTI4 0
NEI4 $242
line 402
;402:		msg = "notarget OFF\n";
ADDRLP4 0
ADDRGP4 $244
ASGNP4
ADDRGP4 $243
JUMPV
LABELV $242
line 404
;403:	else
;404:		msg = "notarget ON\n";
ADDRLP4 0
ADDRGP4 $245
ASGNP4
LABELV $243
line 406
;405:
;406:	trap_SendServerCommand( ent-g_entities, va("print \"%s\"", msg));
ADDRGP4 $238
ARGP4
ADDRLP4 0
INDIRP4
ARGP4
ADDRLP4 12
ADDRGP4 va
CALLP4
ASGNP4
ADDRFP4 0
INDIRP4
CVPU4 4
ADDRGP4 g_entities
CVPU4 4
SUBU4
CVUI4 4
CNSTI4 832
DIVI4
ARGI4
ADDRLP4 12
INDIRP4
ARGP4
ADDRGP4 trap_SendServerCommand
CALLV
pop
line 407
;407:}
LABELV $239
endproc Cmd_Notarget_f 16 8
export Cmd_Noclip_f
proc Cmd_Noclip_f 20 8
line 417
;408:
;409:
;410:/*
;411:==================
;412:Cmd_Noclip_f
;413:
;414:argv(0) noclip
;415:==================
;416:*/
;417:void Cmd_Noclip_f( gentity_t *ent ) {
line 420
;418:	char	*msg;
;419:
;420:	if ( !CheatsOk( ent ) ) {
ADDRFP4 0
INDIRP4
ARGP4
ADDRLP4 4
ADDRGP4 CheatsOk
CALLI4
ASGNI4
ADDRLP4 4
INDIRI4
CNSTI4 0
NEI4 $247
line 421
;421:		return;
ADDRGP4 $246
JUMPV
LABELV $247
line 424
;422:	}
;423:
;424:	if ( ent->client->noclip ) {
ADDRFP4 0
INDIRP4
CNSTI4 408
ADDP4
INDIRP4
CNSTI4 1592
ADDP4
INDIRI4
CNSTI4 0
EQI4 $249
line 425
;425:		msg = "noclip OFF\n";
ADDRLP4 0
ADDRGP4 $251
ASGNP4
line 426
;426:	} else {
ADDRGP4 $250
JUMPV
LABELV $249
line 427
;427:		msg = "noclip ON\n";
ADDRLP4 0
ADDRGP4 $252
ASGNP4
line 428
;428:	}
LABELV $250
line 429
;429:	ent->client->noclip = !ent->client->noclip;
ADDRLP4 12
ADDRFP4 0
INDIRP4
CNSTI4 408
ADDP4
INDIRP4
CNSTI4 1592
ADDP4
ASGNP4
ADDRLP4 12
INDIRP4
INDIRI4
CNSTI4 0
NEI4 $254
ADDRLP4 8
CNSTI4 1
ASGNI4
ADDRGP4 $255
JUMPV
LABELV $254
ADDRLP4 8
CNSTI4 0
ASGNI4
LABELV $255
ADDRLP4 12
INDIRP4
ADDRLP4 8
INDIRI4
ASGNI4
line 431
;430:
;431:	trap_SendServerCommand( ent-g_entities, va("print \"%s\"", msg));
ADDRGP4 $238
ARGP4
ADDRLP4 0
INDIRP4
ARGP4
ADDRLP4 16
ADDRGP4 va
CALLP4
ASGNP4
ADDRFP4 0
INDIRP4
CVPU4 4
ADDRGP4 g_entities
CVPU4 4
SUBU4
CVUI4 4
CNSTI4 832
DIVI4
ARGI4
ADDRLP4 16
INDIRP4
ARGP4
ADDRGP4 trap_SendServerCommand
CALLV
pop
line 432
;432:}
LABELV $246
endproc Cmd_Noclip_f 20 8
export Cmd_LevelShot_f
proc Cmd_LevelShot_f 4 8
line 445
;433:
;434:
;435:/*
;436:==================
;437:Cmd_LevelShot_f
;438:
;439:This is just to help generate the level pictures
;440:for the menus.  It goes to the intermission immediately
;441:and sends over a command to the client to resize the view,
;442:hide the scoreboard, and take a special screenshot
;443:==================
;444:*/
;445:void Cmd_LevelShot_f( gentity_t *ent ) {
line 446
;446:	if ( !CheatsOk( ent ) ) {
ADDRFP4 0
INDIRP4
ARGP4
ADDRLP4 0
ADDRGP4 CheatsOk
CALLI4
ASGNI4
ADDRLP4 0
INDIRI4
CNSTI4 0
NEI4 $257
line 447
;447:		return;
ADDRGP4 $256
JUMPV
LABELV $257
line 451
;448:	}
;449:
;450:	// doesn't work in single player
;451:	if ( g_gametype.integer != 0 ) {
ADDRGP4 g_gametype+12
INDIRI4
CNSTI4 0
EQI4 $259
line 452
;452:		trap_SendServerCommand( ent-g_entities, 
ADDRFP4 0
INDIRP4
CVPU4 4
ADDRGP4 g_entities
CVPU4 4
SUBU4
CVUI4 4
CNSTI4 832
DIVI4
ARGI4
ADDRGP4 $262
ARGP4
ADDRGP4 trap_SendServerCommand
CALLV
pop
line 454
;453:			"print \"Must be in g_gametype 0 for levelshot\n\"" );
;454:		return;
ADDRGP4 $256
JUMPV
LABELV $259
line 457
;455:	}
;456:
;457:	BeginIntermission();
ADDRGP4 BeginIntermission
CALLV
pop
line 458
;458:	trap_SendServerCommand( ent-g_entities, "clientLevelShot" );
ADDRFP4 0
INDIRP4
CVPU4 4
ADDRGP4 g_entities
CVPU4 4
SUBU4
CVUI4 4
CNSTI4 832
DIVI4
ARGI4
ADDRGP4 $263
ARGP4
ADDRGP4 trap_SendServerCommand
CALLV
pop
line 459
;459:}
LABELV $256
endproc Cmd_LevelShot_f 4 8
export Cmd_TeamTask_f
proc Cmd_TeamTask_f 2068 12
line 472
;460:
;461:
;462:/*
;463:==================
;464:Cmd_LevelShot_f
;465:
;466:This is just to help generate the level pictures
;467:for the menus.  It goes to the intermission immediately
;468:and sends over a command to the client to resize the view,
;469:hide the scoreboard, and take a special screenshot
;470:==================
;471:*/
;472:void Cmd_TeamTask_f( gentity_t *ent ) {
line 476
;473:	char userinfo[MAX_INFO_STRING];
;474:	char		arg[MAX_TOKEN_CHARS];
;475:	int task;
;476:	int client = ent->client - level.clients;
ADDRLP4 1024
ADDRFP4 0
INDIRP4
CNSTI4 408
ADDP4
INDIRP4
CVPU4 4
ADDRGP4 level
INDIRP4
CVPU4 4
SUBU4
CVUI4 4
CNSTI4 1812
DIVI4
ASGNI4
line 478
;477:
;478:	if ( trap_Argc() != 2 ) {
ADDRLP4 2056
ADDRGP4 trap_Argc
CALLI4
ASGNI4
ADDRLP4 2056
INDIRI4
CNSTI4 2
EQI4 $265
line 479
;479:		return;
ADDRGP4 $264
JUMPV
LABELV $265
line 481
;480:	}
;481:	trap_Argv( 1, arg, sizeof( arg ) );
CNSTI4 1
ARGI4
ADDRLP4 1028
ARGP4
CNSTI4 1024
ARGI4
ADDRGP4 trap_Argv
CALLV
pop
line 482
;482:	task = atoi( arg );
ADDRLP4 1028
ARGP4
ADDRLP4 2060
ADDRGP4 atoi
CALLI4
ASGNI4
ADDRLP4 2052
ADDRLP4 2060
INDIRI4
ASGNI4
line 484
;483:
;484:	trap_GetUserinfo(client, userinfo, sizeof(userinfo));
ADDRLP4 1024
INDIRI4
ARGI4
ADDRLP4 0
ARGP4
CNSTI4 1024
ARGI4
ADDRGP4 trap_GetUserinfo
CALLV
pop
line 485
;485:	Info_SetValueForKey(userinfo, "teamtask", va("%d", task));
ADDRGP4 $268
ARGP4
ADDRLP4 2052
INDIRI4
ARGI4
ADDRLP4 2064
ADDRGP4 va
CALLP4
ASGNP4
ADDRLP4 0
ARGP4
ADDRGP4 $267
ARGP4
ADDRLP4 2064
INDIRP4
ARGP4
ADDRGP4 Info_SetValueForKey
CALLV
pop
line 486
;486:	trap_SetUserinfo(client, userinfo);
ADDRLP4 1024
INDIRI4
ARGI4
ADDRLP4 0
ARGP4
ADDRGP4 trap_SetUserinfo
CALLV
pop
line 487
;487:	ClientUserinfoChanged(client);
ADDRLP4 1024
INDIRI4
ARGI4
ADDRGP4 ClientUserinfoChanged
CALLV
pop
line 488
;488:}
LABELV $264
endproc Cmd_TeamTask_f 2068 12
export Cmd_Kill_f
proc Cmd_Kill_f 16 20
line 497
;489:
;490:
;491:
;492:/*
;493:=================
;494:Cmd_Kill_f
;495:=================
;496:*/
;497:void Cmd_Kill_f( gentity_t *ent ) {
line 498
;498:	if ( ent->client->sess.sessionTeam == TEAM_SPECTATOR ) {
ADDRFP4 0
INDIRP4
CNSTI4 408
ADDP4
INDIRP4
CNSTI4 1536
ADDP4
INDIRI4
CNSTI4 3
NEI4 $270
line 499
;499:		return;
ADDRGP4 $269
JUMPV
LABELV $270
line 501
;500:	}
;501:	if (ent->health <= 0) {
ADDRFP4 0
INDIRP4
CNSTI4 676
ADDP4
INDIRI4
CNSTI4 0
GTI4 $272
line 502
;502:		return;
ADDRGP4 $269
JUMPV
LABELV $272
line 506
;503:	}
;504:
;505:	//JediDog: sleeping clients cannot kill themselves
;506:	if (ent->client->pers.Sleep == qtrue) {
ADDRFP4 0
INDIRP4
CNSTI4 408
ADDP4
INDIRP4
CNSTI4 1532
ADDP4
INDIRI4
CNSTI4 1
NEI4 $274
line 507
;507:		return;
ADDRGP4 $269
JUMPV
LABELV $274
line 510
;508:	}
;509:
;510:	if (g_gametype.integer == GT_TOURNAMENT && level.numPlayingClients > 1 && !level.warmupTime)
ADDRGP4 g_gametype+12
INDIRI4
CNSTI4 3
NEI4 $276
ADDRGP4 level+80
INDIRI4
CNSTI4 1
LEI4 $276
ADDRGP4 level+16
INDIRI4
CNSTI4 0
NEI4 $276
line 511
;511:	{
line 512
;512:		if (!g_allowDuelSuicide.integer)
ADDRGP4 g_allowDuelSuicide+12
INDIRI4
CNSTI4 0
NEI4 $281
line 513
;513:		{
line 514
;514:			trap_SendServerCommand( ent-g_entities, va("print \"%s\n\"", G_GetStripEdString("SVINGAME", "ATTEMPTDUELKILL")) );
ADDRGP4 $116
ARGP4
ADDRGP4 $284
ARGP4
ADDRLP4 0
ADDRGP4 G_GetStripEdString
CALLP4
ASGNP4
ADDRGP4 $115
ARGP4
ADDRLP4 0
INDIRP4
ARGP4
ADDRLP4 4
ADDRGP4 va
CALLP4
ASGNP4
ADDRFP4 0
INDIRP4
CVPU4 4
ADDRGP4 g_entities
CVPU4 4
SUBU4
CVUI4 4
CNSTI4 832
DIVI4
ARGI4
ADDRLP4 4
INDIRP4
ARGP4
ADDRGP4 trap_SendServerCommand
CALLV
pop
line 515
;515:			return;
ADDRGP4 $269
JUMPV
LABELV $281
line 517
;516:		}
;517:	}
LABELV $276
line 519
;518:
;519:	ent->flags &= ~FL_GODMODE;
ADDRLP4 0
ADDRFP4 0
INDIRP4
CNSTI4 472
ADDP4
ASGNP4
ADDRLP4 0
INDIRP4
ADDRLP4 0
INDIRP4
INDIRI4
CNSTI4 -17
BANDI4
ASGNI4
line 520
;520:	ent->client->ps.stats[STAT_HEALTH] = ent->health = -999;
ADDRLP4 4
ADDRFP4 0
INDIRP4
ASGNP4
ADDRLP4 8
CNSTI4 -999
ASGNI4
ADDRLP4 4
INDIRP4
CNSTI4 676
ADDP4
ADDRLP4 8
INDIRI4
ASGNI4
ADDRLP4 4
INDIRP4
CNSTI4 408
ADDP4
INDIRP4
CNSTI4 216
ADDP4
ADDRLP4 8
INDIRI4
ASGNI4
line 521
;521:	player_die (ent, ent, ent, 100000, MOD_SUICIDE);
ADDRLP4 12
ADDRFP4 0
INDIRP4
ASGNP4
ADDRLP4 12
INDIRP4
ARGP4
ADDRLP4 12
INDIRP4
ARGP4
ADDRLP4 12
INDIRP4
ARGP4
CNSTI4 100000
ARGI4
CNSTI4 35
ARGI4
ADDRGP4 player_die
CALLV
pop
line 522
;522:}
LABELV $269
endproc Cmd_Kill_f 16 20
export G_GetDuelWinner
proc G_GetDuelWinner 16 0
line 525
;523:
;524:gentity_t *G_GetDuelWinner(gclient_t *client)
;525:{
line 529
;526:	gclient_t *wCl;
;527:	int i;
;528:
;529:	for ( i = 0 ; i < level.maxclients ; i++ ) {
ADDRLP4 4
CNSTI4 0
ASGNI4
ADDRGP4 $289
JUMPV
LABELV $286
line 530
;530:		wCl = &level.clients[i];
ADDRLP4 0
CNSTI4 1812
ADDRLP4 4
INDIRI4
MULI4
ADDRGP4 level
INDIRP4
ADDP4
ASGNP4
line 532
;531:		
;532:		if (wCl && wCl != client && /*wCl->ps.clientNum != client->ps.clientNum &&*/
ADDRLP4 12
ADDRLP4 0
INDIRP4
CVPU4 4
ASGNU4
ADDRLP4 12
INDIRU4
CNSTU4 0
EQU4 $291
ADDRLP4 12
INDIRU4
ADDRFP4 0
INDIRP4
CVPU4 4
EQU4 $291
ADDRLP4 0
INDIRP4
CNSTI4 1380
ADDP4
INDIRI4
CNSTI4 2
NEI4 $291
ADDRLP4 0
INDIRP4
CNSTI4 1536
ADDP4
INDIRI4
CNSTI4 3
EQI4 $291
line 534
;533:			wCl->pers.connected == CON_CONNECTED && wCl->sess.sessionTeam != TEAM_SPECTATOR)
;534:		{
line 535
;535:			return &g_entities[wCl->ps.clientNum];
CNSTI4 832
ADDRLP4 0
INDIRP4
CNSTI4 144
ADDP4
INDIRI4
MULI4
ADDRGP4 g_entities
ADDP4
RETP4
ADDRGP4 $285
JUMPV
LABELV $291
line 537
;536:		}
;537:	}
LABELV $287
line 529
ADDRLP4 4
ADDRLP4 4
INDIRI4
CNSTI4 1
ADDI4
ASGNI4
LABELV $289
ADDRLP4 4
INDIRI4
ADDRGP4 level+24
INDIRI4
LTI4 $286
line 539
;538:
;539:	return NULL;
CNSTP4 0
RETP4
LABELV $285
endproc G_GetDuelWinner 16 0
export BroadcastTeamChange
proc BroadcastTeamChange 12 16
line 550
;540:}
;541:
;542:/*
;543:=================
;544:BroadCastTeamChange
;545:
;546:Let everyone know about a team change
;547:=================
;548:*/
;549:void BroadcastTeamChange( gclient_t *client, int oldTeam )
;550:{
line 551
;551:	client->ps.fd.forceDoInit = 1; //every time we change teams make sure our force powers are set right
ADDRFP4 0
INDIRP4
CNSTI4 1184
ADDP4
CNSTI4 1
ASGNI4
line 553
;552:
;553:	if ( client->sess.sessionTeam == TEAM_RED ) {
ADDRFP4 0
INDIRP4
CNSTI4 1536
ADDP4
INDIRI4
CNSTI4 1
NEI4 $294
line 554
;554:		trap_SendServerCommand( -1, va("cp \"%s" S_COLOR_WHITE " %s\n\"",
ADDRGP4 $116
ARGP4
ADDRGP4 $297
ARGP4
ADDRLP4 0
ADDRGP4 G_GetStripEdString
CALLP4
ASGNP4
ADDRGP4 $296
ARGP4
ADDRFP4 0
INDIRP4
CNSTI4 1428
ADDP4
ARGP4
ADDRLP4 0
INDIRP4
ARGP4
ADDRLP4 4
ADDRGP4 va
CALLP4
ASGNP4
CNSTI4 -1
ARGI4
ADDRLP4 4
INDIRP4
ARGP4
ADDRGP4 trap_SendServerCommand
CALLV
pop
line 556
;555:			client->pers.netname, G_GetStripEdString("SVINGAME", "JOINEDTHEREDTEAM")) );
;556:	} else if ( client->sess.sessionTeam == TEAM_BLUE ) {
ADDRGP4 $295
JUMPV
LABELV $294
ADDRFP4 0
INDIRP4
CNSTI4 1536
ADDP4
INDIRI4
CNSTI4 2
NEI4 $298
line 557
;557:		trap_SendServerCommand( -1, va("cp \"%s" S_COLOR_WHITE " %s\n\"",
ADDRGP4 $116
ARGP4
ADDRGP4 $300
ARGP4
ADDRLP4 0
ADDRGP4 G_GetStripEdString
CALLP4
ASGNP4
ADDRGP4 $296
ARGP4
ADDRFP4 0
INDIRP4
CNSTI4 1428
ADDP4
ARGP4
ADDRLP4 0
INDIRP4
ARGP4
ADDRLP4 4
ADDRGP4 va
CALLP4
ASGNP4
CNSTI4 -1
ARGI4
ADDRLP4 4
INDIRP4
ARGP4
ADDRGP4 trap_SendServerCommand
CALLV
pop
line 559
;558:		client->pers.netname, G_GetStripEdString("SVINGAME", "JOINEDTHEBLUETEAM")));
;559:	} else if ( client->sess.sessionTeam == TEAM_SPECTATOR && oldTeam != TEAM_SPECTATOR ) {
ADDRGP4 $299
JUMPV
LABELV $298
ADDRLP4 0
CNSTI4 3
ASGNI4
ADDRFP4 0
INDIRP4
CNSTI4 1536
ADDP4
INDIRI4
ADDRLP4 0
INDIRI4
NEI4 $301
ADDRFP4 4
INDIRI4
ADDRLP4 0
INDIRI4
EQI4 $301
line 560
;560:		trap_SendServerCommand( -1, va("cp \"%s" S_COLOR_WHITE " %s\n\"",
ADDRGP4 $116
ARGP4
ADDRGP4 $303
ARGP4
ADDRLP4 4
ADDRGP4 G_GetStripEdString
CALLP4
ASGNP4
ADDRGP4 $296
ARGP4
ADDRFP4 0
INDIRP4
CNSTI4 1428
ADDP4
ARGP4
ADDRLP4 4
INDIRP4
ARGP4
ADDRLP4 8
ADDRGP4 va
CALLP4
ASGNP4
CNSTI4 -1
ARGI4
ADDRLP4 8
INDIRP4
ARGP4
ADDRGP4 trap_SendServerCommand
CALLV
pop
line 562
;561:		client->pers.netname, G_GetStripEdString("SVINGAME", "JOINEDTHESPECTATORS")));
;562:	} else if ( client->sess.sessionTeam == TEAM_FREE ) {
ADDRGP4 $302
JUMPV
LABELV $301
ADDRFP4 0
INDIRP4
CNSTI4 1536
ADDP4
INDIRI4
CNSTI4 0
NEI4 $304
line 563
;563:		if (g_gametype.integer == GT_TOURNAMENT)
ADDRGP4 g_gametype+12
INDIRI4
CNSTI4 3
NEI4 $306
line 564
;564:		{
line 580
;565:			/*
;566:			gentity_t *currentWinner = G_GetDuelWinner(client);
;567:
;568:			if (currentWinner && currentWinner->client)
;569:			{
;570:				trap_SendServerCommand( -1, va("cp \"%s" S_COLOR_WHITE " %s %s\n\"",
;571:				currentWinner->client->pers.netname, G_GetStripEdString("SVINGAME", "VERSUS"), client->pers.netname));
;572:			}
;573:			else
;574:			{
;575:				trap_SendServerCommand( -1, va("cp \"%s" S_COLOR_WHITE " %s\n\"",
;576:				client->pers.netname, G_GetStripEdString("SVINGAME", "JOINEDTHEBATTLE")));
;577:			}
;578:			*/
;579:			//NOTE: Just doing a vs. once it counts two players up
;580:		}
ADDRGP4 $307
JUMPV
LABELV $306
line 582
;581:		else
;582:		{
line 583
;583:			trap_SendServerCommand( -1, va("cp \"%s" S_COLOR_WHITE " %s\n\"",
ADDRGP4 $116
ARGP4
ADDRGP4 $309
ARGP4
ADDRLP4 4
ADDRGP4 G_GetStripEdString
CALLP4
ASGNP4
ADDRGP4 $296
ARGP4
ADDRFP4 0
INDIRP4
CNSTI4 1428
ADDP4
ARGP4
ADDRLP4 4
INDIRP4
ARGP4
ADDRLP4 8
ADDRGP4 va
CALLP4
ASGNP4
CNSTI4 -1
ARGI4
ADDRLP4 8
INDIRP4
ARGP4
ADDRGP4 trap_SendServerCommand
CALLV
pop
line 585
;584:			client->pers.netname, G_GetStripEdString("SVINGAME", "JOINEDTHEBATTLE")));
;585:		}
LABELV $307
line 586
;586:	}
LABELV $304
LABELV $302
LABELV $299
LABELV $295
line 588
;587:
;588:	G_LogPrintf ( "setteam:  %i %s %s\n",
ADDRFP4 4
INDIRI4
ARGI4
ADDRLP4 4
ADDRGP4 TeamName
CALLP4
ASGNP4
ADDRFP4 0
INDIRP4
CNSTI4 1536
ADDP4
INDIRI4
ARGI4
ADDRLP4 8
ADDRGP4 TeamName
CALLP4
ASGNP4
ADDRGP4 $310
ARGP4
ADDRFP4 0
INDIRP4
CVPU4 4
ADDRGP4 level
INDIRP4
CVPU4 4
SUBU4
CVUI4 4
CNSTI4 1812
DIVI4
ARGI4
ADDRLP4 4
INDIRP4
ARGP4
ADDRLP4 8
INDIRP4
ARGP4
ADDRGP4 G_LogPrintf
CALLV
pop
line 592
;589:				  client - &level.clients[0],
;590:				  TeamName ( oldTeam ),
;591:				  TeamName ( client->sess.sessionTeam ) );
;592:}
LABELV $293
endproc BroadcastTeamChange 12 16
export SetTeam
proc SetTeam 100 20
line 599
;593:
;594:/*
;595:=================
;596:SetTeam
;597:=================
;598:*/
;599:void SetTeam( gentity_t *ent, char *s ) {
line 610
;600:	int					team, oldTeam;
;601:	gclient_t			*client;
;602:	int					clientNum;
;603:	spectatorState_t	specState;
;604:	int					specClient;
;605:	int					teamLeader;
;606:
;607:	//
;608:	// see what change is requested
;609:	//
;610:	client = ent->client;
ADDRLP4 0
ADDRFP4 0
INDIRP4
CNSTI4 408
ADDP4
INDIRP4
ASGNP4
line 612
;611:
;612:	clientNum = client - level.clients;
ADDRLP4 12
ADDRLP4 0
INDIRP4
CVPU4 4
ADDRGP4 level
INDIRP4
CVPU4 4
SUBU4
CVUI4 4
CNSTI4 1812
DIVI4
ASGNI4
line 613
;613:	specClient = 0;
ADDRLP4 20
CNSTI4 0
ASGNI4
line 614
;614:	specState = SPECTATOR_NOT;
ADDRLP4 16
CNSTI4 0
ASGNI4
line 615
;615:	if ( !Q_stricmp( s, "scoreboard" ) || !Q_stricmp( s, "score" )  ) {
ADDRFP4 4
INDIRP4
ARGP4
ADDRGP4 $314
ARGP4
ADDRLP4 28
ADDRGP4 Q_stricmp
CALLI4
ASGNI4
ADDRLP4 28
INDIRI4
CNSTI4 0
EQI4 $316
ADDRFP4 4
INDIRP4
ARGP4
ADDRGP4 $315
ARGP4
ADDRLP4 32
ADDRGP4 Q_stricmp
CALLI4
ASGNI4
ADDRLP4 32
INDIRI4
CNSTI4 0
NEI4 $312
LABELV $316
line 616
;616:		team = TEAM_SPECTATOR;
ADDRLP4 4
CNSTI4 3
ASGNI4
line 617
;617:		specState = SPECTATOR_SCOREBOARD;
ADDRLP4 16
CNSTI4 3
ASGNI4
line 619
;618:	//JediDog: Got rid of follow1 and follow2 because of server crash
;619:/*	} else if ( !Q_stricmp( s, "follow1" ) ) {
ADDRGP4 $313
JUMPV
LABELV $312
ADDRFP4 4
INDIRP4
ARGP4
ADDRGP4 $319
ARGP4
ADDRLP4 36
ADDRGP4 Q_stricmp
CALLI4
ASGNI4
ADDRLP4 36
INDIRI4
CNSTI4 0
EQI4 $321
ADDRFP4 4
INDIRP4
ARGP4
ADDRGP4 $320
ARGP4
ADDRLP4 40
ADDRGP4 Q_stricmp
CALLI4
ASGNI4
ADDRLP4 40
INDIRI4
CNSTI4 0
NEI4 $317
LABELV $321
line 628
;620:		team = TEAM_SPECTATOR;
;621:		specState = SPECTATOR_FOLLOW;
;622:		specClient = -1;
;623:	} else if ( !Q_stricmp( s, "follow2" ) ) {
;624:		team = TEAM_SPECTATOR;
;625:		specState = SPECTATOR_FOLLOW;
;626:		specClient = -2;
;627:*/	} else if ( !Q_stricmp( s, "spectator" ) || !Q_stricmp( s, "s" ) ) {
;628:		team = TEAM_SPECTATOR;
ADDRLP4 4
CNSTI4 3
ASGNI4
line 629
;629:		specState = SPECTATOR_FREE;
ADDRLP4 16
CNSTI4 1
ASGNI4
line 630
;630:	} else if ( g_gametype.integer >= GT_TEAM ) {
ADDRGP4 $318
JUMPV
LABELV $317
ADDRGP4 g_gametype+12
INDIRI4
CNSTI4 5
LTI4 $322
line 632
;631:		// if running a team game, assign player to one of the teams
;632:		specState = SPECTATOR_NOT;
ADDRLP4 16
CNSTI4 0
ASGNI4
line 633
;633:		if ( !Q_stricmp( s, "red" ) || !Q_stricmp( s, "r" ) ) {
ADDRFP4 4
INDIRP4
ARGP4
ADDRGP4 $327
ARGP4
ADDRLP4 44
ADDRGP4 Q_stricmp
CALLI4
ASGNI4
ADDRLP4 44
INDIRI4
CNSTI4 0
EQI4 $329
ADDRFP4 4
INDIRP4
ARGP4
ADDRGP4 $328
ARGP4
ADDRLP4 48
ADDRGP4 Q_stricmp
CALLI4
ASGNI4
ADDRLP4 48
INDIRI4
CNSTI4 0
NEI4 $325
LABELV $329
line 634
;634:			team = TEAM_RED;
ADDRLP4 4
CNSTI4 1
ASGNI4
line 635
;635:		} else if ( !Q_stricmp( s, "blue" ) || !Q_stricmp( s, "b" ) ) {
ADDRGP4 $326
JUMPV
LABELV $325
ADDRFP4 4
INDIRP4
ARGP4
ADDRGP4 $332
ARGP4
ADDRLP4 52
ADDRGP4 Q_stricmp
CALLI4
ASGNI4
ADDRLP4 52
INDIRI4
CNSTI4 0
EQI4 $334
ADDRFP4 4
INDIRP4
ARGP4
ADDRGP4 $333
ARGP4
ADDRLP4 56
ADDRGP4 Q_stricmp
CALLI4
ASGNI4
ADDRLP4 56
INDIRI4
CNSTI4 0
NEI4 $330
LABELV $334
line 636
;636:			team = TEAM_BLUE;
ADDRLP4 4
CNSTI4 2
ASGNI4
line 637
;637:		} else {
ADDRGP4 $331
JUMPV
LABELV $330
line 655
;638:			// pick the team with the least number of players
;639:			//For now, don't do this. The legalize function will set powers properly now.
;640:			/*
;641:			if (g_forceBasedTeams.integer)
;642:			{
;643:				if (ent->client->ps.fd.forceSide == FORCE_LIGHTSIDE)
;644:				{
;645:					team = TEAM_BLUE;
;646:				}
;647:				else
;648:				{
;649:					team = TEAM_RED;
;650:				}
;651:			}
;652:			else
;653:			{
;654:			*/
;655:				team = PickTeam( clientNum );
ADDRLP4 12
INDIRI4
ARGI4
ADDRLP4 60
ADDRGP4 PickTeam
CALLI4
ASGNI4
ADDRLP4 4
ADDRLP4 60
INDIRI4
ASGNI4
line 657
;656:			//}
;657:		}
LABELV $331
LABELV $326
line 659
;658:
;659:		if ( g_teamForceBalance.integer && !g_trueJedi.integer ) {
ADDRLP4 60
CNSTI4 0
ASGNI4
ADDRGP4 g_teamForceBalance+12
INDIRI4
ADDRLP4 60
INDIRI4
EQI4 $323
ADDRGP4 g_trueJedi+12
INDIRI4
ADDRLP4 60
INDIRI4
NEI4 $323
line 662
;660:			int		counts[TEAM_NUM_TEAMS];
;661:
;662:			counts[TEAM_BLUE] = TeamCount( ent->client->ps.clientNum, TEAM_BLUE );
ADDRFP4 0
INDIRP4
CNSTI4 408
ADDP4
INDIRP4
CNSTI4 144
ADDP4
INDIRI4
ARGI4
CNSTI4 2
ARGI4
ADDRLP4 80
ADDRGP4 TeamCount
CALLI4
ASGNI4
ADDRLP4 64+8
ADDRLP4 80
INDIRI4
ASGNI4
line 663
;663:			counts[TEAM_RED] = TeamCount( ent->client->ps.clientNum, TEAM_RED );
ADDRFP4 0
INDIRP4
CNSTI4 408
ADDP4
INDIRP4
CNSTI4 144
ADDP4
INDIRI4
ARGI4
CNSTI4 1
ARGI4
ADDRLP4 84
ADDRGP4 TeamCount
CALLI4
ASGNI4
ADDRLP4 64+4
ADDRLP4 84
INDIRI4
ASGNI4
line 666
;664:
;665:			// We allow a spread of two
;666:			if ( team == TEAM_RED && counts[TEAM_RED] - counts[TEAM_BLUE] > 1 ) {
ADDRLP4 88
CNSTI4 1
ASGNI4
ADDRLP4 4
INDIRI4
ADDRLP4 88
INDIRI4
NEI4 $341
ADDRLP4 64+4
INDIRI4
ADDRLP4 64+8
INDIRI4
SUBI4
ADDRLP4 88
INDIRI4
LEI4 $341
line 676
;667:				//For now, don't do this. The legalize function will set powers properly now.
;668:				/*
;669:				if (g_forceBasedTeams.integer && ent->client->ps.fd.forceSide == FORCE_DARKSIDE)
;670:				{
;671:					trap_SendServerCommand( ent->client->ps.clientNum, 
;672:						va("print \"%s\n\"", G_GetStripEdString("SVINGAME", "TOOMANYRED_SWITCH")) );
;673:				}
;674:				else
;675:				*/
;676:				{
line 677
;677:					trap_SendServerCommand( ent->client->ps.clientNum, 
ADDRGP4 $116
ARGP4
ADDRGP4 $345
ARGP4
ADDRLP4 92
ADDRGP4 G_GetStripEdString
CALLP4
ASGNP4
ADDRGP4 $115
ARGP4
ADDRLP4 92
INDIRP4
ARGP4
ADDRLP4 96
ADDRGP4 va
CALLP4
ASGNP4
ADDRFP4 0
INDIRP4
CNSTI4 408
ADDP4
INDIRP4
CNSTI4 144
ADDP4
INDIRI4
ARGI4
ADDRLP4 96
INDIRP4
ARGP4
ADDRGP4 trap_SendServerCommand
CALLV
pop
line 679
;678:						va("print \"%s\n\"", G_GetStripEdString("SVINGAME", "TOOMANYRED")) );
;679:				}
line 680
;680:				return; // ignore the request
ADDRGP4 $311
JUMPV
LABELV $341
line 682
;681:			}
;682:			if ( team == TEAM_BLUE && counts[TEAM_BLUE] - counts[TEAM_RED] > 1 ) {
ADDRLP4 4
INDIRI4
CNSTI4 2
NEI4 $323
ADDRLP4 64+8
INDIRI4
ADDRLP4 64+4
INDIRI4
SUBI4
CNSTI4 1
LEI4 $323
line 692
;683:				//For now, don't do this. The legalize function will set powers properly now.
;684:				/*
;685:				if (g_forceBasedTeams.integer && ent->client->ps.fd.forceSide == FORCE_LIGHTSIDE)
;686:				{
;687:					trap_SendServerCommand( ent->client->ps.clientNum, 
;688:						va("print \"%s\n\"", G_GetStripEdString("SVINGAME", "TOOMANYBLUE_SWITCH")) );
;689:				}
;690:				else
;691:				*/
;692:				{
line 693
;693:					trap_SendServerCommand( ent->client->ps.clientNum, 
ADDRGP4 $116
ARGP4
ADDRGP4 $350
ARGP4
ADDRLP4 92
ADDRGP4 G_GetStripEdString
CALLP4
ASGNP4
ADDRGP4 $115
ARGP4
ADDRLP4 92
INDIRP4
ARGP4
ADDRLP4 96
ADDRGP4 va
CALLP4
ASGNP4
ADDRFP4 0
INDIRP4
CNSTI4 408
ADDP4
INDIRP4
CNSTI4 144
ADDP4
INDIRI4
ARGI4
ADDRLP4 96
INDIRP4
ARGP4
ADDRGP4 trap_SendServerCommand
CALLV
pop
line 695
;694:						va("print \"%s\n\"", G_GetStripEdString("SVINGAME", "TOOMANYBLUE")) );
;695:				}
line 696
;696:				return; // ignore the request
ADDRGP4 $311
JUMPV
line 700
;697:			}
;698:
;699:			// It's ok, the team we are switching to has less or same number of players
;700:		}
line 719
;701:
;702:		//For now, don't do this. The legalize function will set powers properly now.
;703:		/*
;704:		if (g_forceBasedTeams.integer)
;705:		{
;706:			if (team == TEAM_BLUE && ent->client->ps.fd.forceSide != FORCE_LIGHTSIDE)
;707:			{
;708:				trap_SendServerCommand( ent-g_entities, va("print \"%s\n\"", G_GetStripEdString("SVINGAME", "MUSTBELIGHT")) );
;709:				return;
;710:			}
;711:			if (team == TEAM_RED && ent->client->ps.fd.forceSide != FORCE_DARKSIDE)
;712:			{
;713:				trap_SendServerCommand( ent-g_entities, va("print \"%s\n\"", G_GetStripEdString("SVINGAME", "MUSTBEDARK")) );
;714:				return;
;715:			}
;716:		}
;717:		*/
;718:
;719:	} else {
LABELV $322
line 721
;720:		// force them to spectators if there aren't any spots free
;721:		team = TEAM_FREE;
ADDRLP4 4
CNSTI4 0
ASGNI4
line 722
;722:	}
LABELV $323
LABELV $318
LABELV $313
line 725
;723:
;724:	// override decision if limiting the players
;725:	if ( (g_gametype.integer == GT_TOURNAMENT)
ADDRGP4 g_gametype+12
INDIRI4
CNSTI4 3
NEI4 $351
ADDRGP4 level+76
INDIRI4
CNSTI4 2
LTI4 $351
line 726
;726:		&& level.numNonSpectatorClients >= 2 ) {
line 727
;727:		team = TEAM_SPECTATOR;
ADDRLP4 4
CNSTI4 3
ASGNI4
line 728
;728:	} else if ( g_maxGameClients.integer > 0 && 
ADDRGP4 $352
JUMPV
LABELV $351
ADDRGP4 g_maxGameClients+12
INDIRI4
CNSTI4 0
LEI4 $355
ADDRGP4 level+76
INDIRI4
ADDRGP4 g_maxGameClients+12
INDIRI4
LTI4 $355
line 729
;729:		level.numNonSpectatorClients >= g_maxGameClients.integer ) {
line 730
;730:		team = TEAM_SPECTATOR;
ADDRLP4 4
CNSTI4 3
ASGNI4
line 731
;731:	}
LABELV $355
LABELV $352
line 736
;732:
;733:	//
;734:	// decide if we will allow the change
;735:	//
;736:	oldTeam = client->sess.sessionTeam;
ADDRLP4 8
ADDRLP4 0
INDIRP4
CNSTI4 1536
ADDP4
INDIRI4
ASGNI4
line 737
;737:	if ( team == oldTeam && team != TEAM_SPECTATOR ) {
ADDRLP4 4
INDIRI4
ADDRLP4 8
INDIRI4
NEI4 $360
ADDRLP4 4
INDIRI4
CNSTI4 3
EQI4 $360
line 738
;738:		return;
ADDRGP4 $311
JUMPV
LABELV $360
line 746
;739:	}
;740:
;741:	//
;742:	// execute the team change
;743:	//
;744:
;745:	// if the player was dead leave the body
;746:	if ( client->ps.stats[STAT_HEALTH] <= 0 ) {
ADDRLP4 0
INDIRP4
CNSTI4 216
ADDP4
INDIRI4
CNSTI4 0
GTI4 $362
line 747
;747:		CopyToBodyQue(ent);
ADDRFP4 0
INDIRP4
ARGP4
ADDRGP4 CopyToBodyQue
CALLV
pop
line 748
;748:	}
LABELV $362
line 751
;749:
;750:	// he starts at 'base'
;751:	client->pers.teamState.state = TEAM_BEGIN;
ADDRLP4 0
INDIRP4
CNSTI4 1472
ADDP4
CNSTI4 0
ASGNI4
line 752
;752:	if ( oldTeam != TEAM_SPECTATOR ) {
ADDRLP4 8
INDIRI4
CNSTI4 3
EQI4 $364
line 754
;753:		// Kill him (makes sure he loses flags, etc)
;754:		ent->flags &= ~FL_GODMODE;
ADDRLP4 48
ADDRFP4 0
INDIRP4
CNSTI4 472
ADDP4
ASGNP4
ADDRLP4 48
INDIRP4
ADDRLP4 48
INDIRP4
INDIRI4
CNSTI4 -17
BANDI4
ASGNI4
line 755
;755:		ent->client->ps.stats[STAT_HEALTH] = ent->health = 0;
ADDRLP4 52
ADDRFP4 0
INDIRP4
ASGNP4
ADDRLP4 56
CNSTI4 0
ASGNI4
ADDRLP4 52
INDIRP4
CNSTI4 676
ADDP4
ADDRLP4 56
INDIRI4
ASGNI4
ADDRLP4 52
INDIRP4
CNSTI4 408
ADDP4
INDIRP4
CNSTI4 216
ADDP4
ADDRLP4 56
INDIRI4
ASGNI4
line 756
;756:		player_die (ent, ent, ent, 100000, MOD_SUICIDE);
ADDRLP4 60
ADDRFP4 0
INDIRP4
ASGNP4
ADDRLP4 60
INDIRP4
ARGP4
ADDRLP4 60
INDIRP4
ARGP4
ADDRLP4 60
INDIRP4
ARGP4
CNSTI4 100000
ARGI4
CNSTI4 35
ARGI4
ADDRGP4 player_die
CALLV
pop
line 758
;757:
;758:	}
LABELV $364
line 760
;759:	// they go to the end of the line for tournements
;760:	if ( team == TEAM_SPECTATOR ) {
ADDRLP4 4
INDIRI4
CNSTI4 3
NEI4 $366
line 761
;761:		if ( (g_gametype.integer != GT_TOURNAMENT) || (oldTeam != TEAM_SPECTATOR) )	{//so you don't get dropped to the bottom of the queue for changing skins, etc.
ADDRLP4 48
CNSTI4 3
ASGNI4
ADDRGP4 g_gametype+12
INDIRI4
ADDRLP4 48
INDIRI4
NEI4 $371
ADDRLP4 8
INDIRI4
ADDRLP4 48
INDIRI4
EQI4 $368
LABELV $371
line 762
;762:			client->sess.spectatorTime = level.time;
ADDRLP4 0
INDIRP4
CNSTI4 1540
ADDP4
ADDRGP4 level+32
INDIRI4
ASGNI4
line 763
;763:		}
LABELV $368
line 764
;764:	}
LABELV $366
line 766
;765:
;766:	client->sess.sessionTeam = team;
ADDRLP4 0
INDIRP4
CNSTI4 1536
ADDP4
ADDRLP4 4
INDIRI4
ASGNI4
line 767
;767:	client->sess.spectatorState = specState;
ADDRLP4 0
INDIRP4
CNSTI4 1544
ADDP4
ADDRLP4 16
INDIRI4
ASGNI4
line 768
;768:	client->sess.spectatorClient = specClient;
ADDRLP4 0
INDIRP4
CNSTI4 1548
ADDP4
ADDRLP4 20
INDIRI4
ASGNI4
line 770
;769:
;770:	client->sess.teamLeader = qfalse;
ADDRLP4 0
INDIRP4
CNSTI4 1576
ADDP4
CNSTI4 0
ASGNI4
line 771
;771:	if ( team == TEAM_RED || team == TEAM_BLUE ) {
ADDRLP4 4
INDIRI4
CNSTI4 1
EQI4 $375
ADDRLP4 4
INDIRI4
CNSTI4 2
NEI4 $373
LABELV $375
line 772
;772:		teamLeader = TeamLeader( team );
ADDRLP4 4
INDIRI4
ARGI4
ADDRLP4 52
ADDRGP4 TeamLeader
CALLI4
ASGNI4
ADDRLP4 24
ADDRLP4 52
INDIRI4
ASGNI4
line 774
;773:		// if there is no team leader or the team leader is a bot and this client is not a bot
;774:		if ( teamLeader == -1 || ( !(g_entities[clientNum].r.svFlags & SVF_BOT) && (g_entities[teamLeader].r.svFlags & SVF_BOT) ) ) {
ADDRLP4 56
ADDRLP4 24
INDIRI4
ASGNI4
ADDRLP4 56
INDIRI4
CNSTI4 -1
EQI4 $382
ADDRLP4 60
CNSTI4 832
ASGNI4
ADDRLP4 64
CNSTI4 8
ASGNI4
ADDRLP4 68
CNSTI4 0
ASGNI4
ADDRLP4 60
INDIRI4
ADDRLP4 12
INDIRI4
MULI4
ADDRGP4 g_entities+296+8
ADDP4
INDIRI4
ADDRLP4 64
INDIRI4
BANDI4
ADDRLP4 68
INDIRI4
NEI4 $376
ADDRLP4 60
INDIRI4
ADDRLP4 56
INDIRI4
MULI4
ADDRGP4 g_entities+296+8
ADDP4
INDIRI4
ADDRLP4 64
INDIRI4
BANDI4
ADDRLP4 68
INDIRI4
EQI4 $376
LABELV $382
line 775
;775:			SetLeader( team, clientNum );
ADDRLP4 4
INDIRI4
ARGI4
ADDRLP4 12
INDIRI4
ARGI4
ADDRGP4 SetLeader
CALLV
pop
line 776
;776:		}
LABELV $376
line 777
;777:	}
LABELV $373
line 779
;778:	// make sure there is a team leader on the team the player came from
;779:	if ( oldTeam == TEAM_RED || oldTeam == TEAM_BLUE ) {
ADDRLP4 8
INDIRI4
CNSTI4 1
EQI4 $385
ADDRLP4 8
INDIRI4
CNSTI4 2
NEI4 $383
LABELV $385
line 780
;780:		CheckTeamLeader( oldTeam );
ADDRLP4 8
INDIRI4
ARGI4
ADDRGP4 CheckTeamLeader
CALLV
pop
line 781
;781:	}
LABELV $383
line 783
;782:
;783:	BroadcastTeamChange( client, oldTeam );
ADDRLP4 0
INDIRP4
ARGP4
ADDRLP4 8
INDIRI4
ARGI4
ADDRGP4 BroadcastTeamChange
CALLV
pop
line 786
;784:
;785:	// get and distribute relevent paramters
;786:	ClientUserinfoChanged( clientNum );
ADDRLP4 12
INDIRI4
ARGI4
ADDRGP4 ClientUserinfoChanged
CALLV
pop
line 788
;787:
;788:	ClientBegin( clientNum, qfalse );
ADDRLP4 12
INDIRI4
ARGI4
CNSTI4 0
ARGI4
ADDRGP4 ClientBegin
CALLV
pop
line 789
;789:}
LABELV $311
endproc SetTeam 100 20
export StopFollowing
proc StopFollowing 12 0
line 799
;790:
;791:/*
;792:=================
;793:StopFollowing
;794:
;795:If the client being followed leaves the game, or you just want to drop
;796:to free floating spectator mode
;797:=================
;798:*/
;799:void StopFollowing( gentity_t *ent ) {
line 800
;800:	ent->client->ps.persistant[ PERS_TEAM ] = TEAM_SPECTATOR;	
ADDRFP4 0
INDIRP4
CNSTI4 408
ADDP4
INDIRP4
CNSTI4 292
ADDP4
CNSTI4 3
ASGNI4
line 801
;801:	ent->client->sess.sessionTeam = TEAM_SPECTATOR;	
ADDRFP4 0
INDIRP4
CNSTI4 408
ADDP4
INDIRP4
CNSTI4 1536
ADDP4
CNSTI4 3
ASGNI4
line 802
;802:	ent->client->sess.spectatorState = SPECTATOR_FREE;
ADDRFP4 0
INDIRP4
CNSTI4 408
ADDP4
INDIRP4
CNSTI4 1544
ADDP4
CNSTI4 1
ASGNI4
line 803
;803:	ent->client->ps.pm_flags &= ~PMF_FOLLOW;
ADDRLP4 0
ADDRFP4 0
INDIRP4
CNSTI4 408
ADDP4
INDIRP4
CNSTI4 12
ADDP4
ASGNP4
ADDRLP4 0
INDIRP4
ADDRLP4 0
INDIRP4
INDIRI4
CNSTI4 -4097
BANDI4
ASGNI4
line 804
;804:	ent->r.svFlags &= ~SVF_BOT;
ADDRLP4 4
ADDRFP4 0
INDIRP4
CNSTI4 304
ADDP4
ASGNP4
ADDRLP4 4
INDIRP4
ADDRLP4 4
INDIRP4
INDIRI4
CNSTI4 -9
BANDI4
ASGNI4
line 805
;805:	ent->client->ps.clientNum = ent - g_entities;
ADDRLP4 8
ADDRFP4 0
INDIRP4
ASGNP4
ADDRLP4 8
INDIRP4
CNSTI4 408
ADDP4
INDIRP4
CNSTI4 144
ADDP4
ADDRLP4 8
INDIRP4
CVPU4 4
ADDRGP4 g_entities
CVPU4 4
SUBU4
CVUI4 4
CNSTI4 832
DIVI4
ASGNI4
line 806
;806:	ent->client->ps.weapon = WP_NONE;
ADDRFP4 0
INDIRP4
CNSTI4 408
ADDP4
INDIRP4
CNSTI4 148
ADDP4
CNSTI4 0
ASGNI4
line 807
;807:}
LABELV $386
endproc StopFollowing 12 0
export Cmd_Team_f
proc Cmd_Team_f 1068 12
line 814
;808:
;809:/*
;810:=================
;811:Cmd_Team_f
;812:=================
;813:*/
;814:void Cmd_Team_f( gentity_t *ent ) {
line 818
;815:	int			oldTeam;
;816:	char		s[MAX_TOKEN_CHARS];
;817:
;818:	if ( trap_Argc() != 2 ) {
ADDRLP4 1028
ADDRGP4 trap_Argc
CALLI4
ASGNI4
ADDRLP4 1028
INDIRI4
CNSTI4 2
EQI4 $388
line 819
;819:		oldTeam = ent->client->sess.sessionTeam;
ADDRLP4 1024
ADDRFP4 0
INDIRP4
CNSTI4 408
ADDP4
INDIRP4
CNSTI4 1536
ADDP4
INDIRI4
ASGNI4
line 820
;820:		switch ( oldTeam ) {
ADDRLP4 1032
ADDRLP4 1024
INDIRI4
ASGNI4
ADDRLP4 1032
INDIRI4
CNSTI4 0
LTI4 $387
ADDRLP4 1032
INDIRI4
CNSTI4 3
GTI4 $387
ADDRLP4 1032
INDIRI4
CNSTI4 2
LSHI4
ADDRGP4 $403
ADDP4
INDIRP4
JUMPV
lit
align 4
LABELV $403
address $397
address $394
address $392
address $400
code
LABELV $392
line 822
;821:		case TEAM_BLUE:
;822:			trap_SendServerCommand( ent-g_entities, va("print \"%s\n\"", G_GetStripEdString("SVINGAME", "PRINTBLUETEAM")) );
ADDRGP4 $116
ARGP4
ADDRGP4 $393
ARGP4
ADDRLP4 1036
ADDRGP4 G_GetStripEdString
CALLP4
ASGNP4
ADDRGP4 $115
ARGP4
ADDRLP4 1036
INDIRP4
ARGP4
ADDRLP4 1040
ADDRGP4 va
CALLP4
ASGNP4
ADDRFP4 0
INDIRP4
CVPU4 4
ADDRGP4 g_entities
CVPU4 4
SUBU4
CVUI4 4
CNSTI4 832
DIVI4
ARGI4
ADDRLP4 1040
INDIRP4
ARGP4
ADDRGP4 trap_SendServerCommand
CALLV
pop
line 823
;823:			break;
ADDRGP4 $387
JUMPV
LABELV $394
line 825
;824:		case TEAM_RED:
;825:			trap_SendServerCommand( ent-g_entities, va("print \"Red team\n\"", G_GetStripEdString("SVINGAME", "PRINTREDTEAM")) );
ADDRGP4 $116
ARGP4
ADDRGP4 $396
ARGP4
ADDRLP4 1044
ADDRGP4 G_GetStripEdString
CALLP4
ASGNP4
ADDRGP4 $395
ARGP4
ADDRLP4 1044
INDIRP4
ARGP4
ADDRLP4 1048
ADDRGP4 va
CALLP4
ASGNP4
ADDRFP4 0
INDIRP4
CVPU4 4
ADDRGP4 g_entities
CVPU4 4
SUBU4
CVUI4 4
CNSTI4 832
DIVI4
ARGI4
ADDRLP4 1048
INDIRP4
ARGP4
ADDRGP4 trap_SendServerCommand
CALLV
pop
line 826
;826:			break;
ADDRGP4 $387
JUMPV
LABELV $397
line 828
;827:		case TEAM_FREE:
;828:			trap_SendServerCommand( ent-g_entities, va("print \"Free team\n\"", G_GetStripEdString("SVINGAME", "PRINTFREETEAM")) );
ADDRGP4 $116
ARGP4
ADDRGP4 $399
ARGP4
ADDRLP4 1052
ADDRGP4 G_GetStripEdString
CALLP4
ASGNP4
ADDRGP4 $398
ARGP4
ADDRLP4 1052
INDIRP4
ARGP4
ADDRLP4 1056
ADDRGP4 va
CALLP4
ASGNP4
ADDRFP4 0
INDIRP4
CVPU4 4
ADDRGP4 g_entities
CVPU4 4
SUBU4
CVUI4 4
CNSTI4 832
DIVI4
ARGI4
ADDRLP4 1056
INDIRP4
ARGP4
ADDRGP4 trap_SendServerCommand
CALLV
pop
line 829
;829:			break;
ADDRGP4 $387
JUMPV
LABELV $400
line 831
;830:		case TEAM_SPECTATOR:
;831:			trap_SendServerCommand( ent-g_entities, va("print \"Spectator team\n\"", G_GetStripEdString("SVINGAME", "PRINTSPECTEAM")) );
ADDRGP4 $116
ARGP4
ADDRGP4 $402
ARGP4
ADDRLP4 1060
ADDRGP4 G_GetStripEdString
CALLP4
ASGNP4
ADDRGP4 $401
ARGP4
ADDRLP4 1060
INDIRP4
ARGP4
ADDRLP4 1064
ADDRGP4 va
CALLP4
ASGNP4
ADDRFP4 0
INDIRP4
CVPU4 4
ADDRGP4 g_entities
CVPU4 4
SUBU4
CVUI4 4
CNSTI4 832
DIVI4
ARGI4
ADDRLP4 1064
INDIRP4
ARGP4
ADDRGP4 trap_SendServerCommand
CALLV
pop
line 832
;832:			break;
line 834
;833:		}
;834:		return;
ADDRGP4 $387
JUMPV
LABELV $388
line 837
;835:	}
;836:
;837:	if ( ent->client->switchTeamTime > level.time ) {
ADDRFP4 0
INDIRP4
CNSTI4 408
ADDP4
INDIRP4
CNSTI4 1720
ADDP4
INDIRI4
ADDRGP4 level+32
INDIRI4
LEI4 $404
line 838
;838:		trap_SendServerCommand( ent-g_entities, va("print \"%s\n\"", G_GetStripEdString("SVINGAME", "NOSWITCH")) );
ADDRGP4 $116
ARGP4
ADDRGP4 $407
ARGP4
ADDRLP4 1032
ADDRGP4 G_GetStripEdString
CALLP4
ASGNP4
ADDRGP4 $115
ARGP4
ADDRLP4 1032
INDIRP4
ARGP4
ADDRLP4 1036
ADDRGP4 va
CALLP4
ASGNP4
ADDRFP4 0
INDIRP4
CVPU4 4
ADDRGP4 g_entities
CVPU4 4
SUBU4
CVUI4 4
CNSTI4 832
DIVI4
ARGI4
ADDRLP4 1036
INDIRP4
ARGP4
ADDRGP4 trap_SendServerCommand
CALLV
pop
line 839
;839:		return;
ADDRGP4 $387
JUMPV
LABELV $404
line 842
;840:	}
;841:
;842:	if (gEscaping)
ADDRGP4 gEscaping
INDIRI4
CNSTI4 0
EQI4 $408
line 843
;843:	{
line 844
;844:		return;
ADDRGP4 $387
JUMPV
LABELV $408
line 848
;845:	}
;846:
;847:	// if they are playing a tournement game, count as a loss
;848:	if ( (g_gametype.integer == GT_TOURNAMENT )
ADDRGP4 g_gametype+12
INDIRI4
CNSTI4 3
NEI4 $410
ADDRFP4 0
INDIRP4
CNSTI4 408
ADDP4
INDIRP4
CNSTI4 1536
ADDP4
INDIRI4
CNSTI4 0
NEI4 $410
line 849
;849:		&& ent->client->sess.sessionTeam == TEAM_FREE ) {//in a tournament game
line 851
;850:		//disallow changing teams
;851:		trap_SendServerCommand( ent-g_entities, "print \"Cannot switch teams in Duel\n\"" );
ADDRFP4 0
INDIRP4
CVPU4 4
ADDRGP4 g_entities
CVPU4 4
SUBU4
CVUI4 4
CNSTI4 832
DIVI4
ARGI4
ADDRGP4 $413
ARGP4
ADDRGP4 trap_SendServerCommand
CALLV
pop
line 852
;852:		return;
ADDRGP4 $387
JUMPV
LABELV $410
line 857
;853:		//FIXME: why should this be a loss???
;854:		//ent->client->sess.losses++;
;855:	}
;856:
;857:	trap_Argv( 1, s, sizeof( s ) );
CNSTI4 1
ARGI4
ADDRLP4 0
ARGP4
CNSTI4 1024
ARGI4
ADDRGP4 trap_Argv
CALLV
pop
line 859
;858:
;859:	SetTeam( ent, s );
ADDRFP4 0
INDIRP4
ARGP4
ADDRLP4 0
ARGP4
ADDRGP4 SetTeam
CALLV
pop
line 861
;860:
;861:	ent->client->switchTeamTime = level.time + 5000;
ADDRFP4 0
INDIRP4
CNSTI4 408
ADDP4
INDIRP4
CNSTI4 1720
ADDP4
ADDRGP4 level+32
INDIRI4
CNSTI4 5000
ADDI4
ASGNI4
line 862
;862:}
LABELV $387
endproc Cmd_Team_f 1068 12
export Cmd_ForceChanged_f
proc Cmd_ForceChanged_f 2064 12
line 870
;863:
;864:/*
;865:=================
;866:Cmd_Team_f
;867:=================
;868:*/
;869:void Cmd_ForceChanged_f( gentity_t *ent )
;870:{
line 874
;871:	char fpChStr[1024];
;872:	const char *buf;
;873://	Cmd_Kill_f(ent);
;874:	if (ent->client->sess.sessionTeam == TEAM_SPECTATOR)
ADDRFP4 0
INDIRP4
CNSTI4 408
ADDP4
INDIRP4
CNSTI4 1536
ADDP4
INDIRI4
CNSTI4 3
NEI4 $416
line 875
;875:	{ //if it's a spec, just make the changes now
line 878
;876:		//trap_SendServerCommand( ent-g_entities, va("print \"%s\n\"", G_GetStripEdString("SVINGAME", "FORCEAPPLIED")) );
;877:		//No longer print it, as the UI calls this a lot.
;878:		WP_InitForcePowers( ent );
ADDRFP4 0
INDIRP4
ARGP4
ADDRGP4 WP_InitForcePowers
CALLV
pop
line 879
;879:		goto argCheck;
ADDRGP4 $418
JUMPV
LABELV $416
line 882
;880:	}
;881:
;882:	buf = G_GetStripEdString("SVINGAME", "FORCEPOWERCHANGED");
ADDRGP4 $116
ARGP4
ADDRGP4 $419
ARGP4
ADDRLP4 1028
ADDRGP4 G_GetStripEdString
CALLP4
ASGNP4
ADDRLP4 1024
ADDRLP4 1028
INDIRP4
ASGNP4
line 884
;883:
;884:	strcpy(fpChStr, buf);
ADDRLP4 0
ARGP4
ADDRLP4 1024
INDIRP4
ARGP4
ADDRGP4 strcpy
CALLP4
pop
line 886
;885:
;886:	trap_SendServerCommand( ent-g_entities, va("print \"%s%s\n\n\"", S_COLOR_GREEN, fpChStr) );
ADDRGP4 $420
ARGP4
ADDRGP4 $421
ARGP4
ADDRLP4 0
ARGP4
ADDRLP4 1032
ADDRGP4 va
CALLP4
ASGNP4
ADDRFP4 0
INDIRP4
CVPU4 4
ADDRGP4 g_entities
CVPU4 4
SUBU4
CVUI4 4
CNSTI4 832
DIVI4
ARGI4
ADDRLP4 1032
INDIRP4
ARGP4
ADDRGP4 trap_SendServerCommand
CALLV
pop
line 888
;887:
;888:	ent->client->ps.fd.forceDoInit = 1;
ADDRFP4 0
INDIRP4
CNSTI4 408
ADDP4
INDIRP4
CNSTI4 1184
ADDP4
CNSTI4 1
ASGNI4
LABELV $418
line 890
;889:argCheck:
;890:	if (g_gametype.integer == GT_TOURNAMENT)
ADDRGP4 g_gametype+12
INDIRI4
CNSTI4 3
NEI4 $422
line 891
;891:	{ //If this is duel, don't even bother changing team in relation to this.
line 892
;892:		return;
ADDRGP4 $415
JUMPV
LABELV $422
line 895
;893:	}
;894:
;895:	if (trap_Argc() > 1)
ADDRLP4 1036
ADDRGP4 trap_Argc
CALLI4
ASGNI4
ADDRLP4 1036
INDIRI4
CNSTI4 1
LEI4 $425
line 896
;896:	{
line 899
;897:		char	arg[MAX_TOKEN_CHARS];
;898:
;899:		trap_Argv( 1, arg, sizeof( arg ) );
CNSTI4 1
ARGI4
ADDRLP4 1040
ARGP4
CNSTI4 1024
ARGI4
ADDRGP4 trap_Argv
CALLV
pop
line 901
;900:
;901:		if (arg && arg[0])
ADDRLP4 1040
CVPU4 4
CNSTU4 0
EQU4 $427
ADDRLP4 1040
INDIRI1
CVII4 1
CNSTI4 0
EQI4 $427
line 902
;902:		{ //if there's an arg, assume it's a combo team command from the UI.
line 903
;903:			Cmd_Team_f(ent);
ADDRFP4 0
INDIRP4
ARGP4
ADDRGP4 Cmd_Team_f
CALLV
pop
line 904
;904:		}
LABELV $427
line 905
;905:	}
LABELV $425
line 906
;906:}
LABELV $415
endproc Cmd_ForceChanged_f 2064 12
export Cmd_Follow_f
proc Cmd_Follow_f 1040 12
line 913
;907:
;908:/*
;909:=================
;910:Cmd_Follow_f
;911:=================
;912:*/
;913:void Cmd_Follow_f( gentity_t *ent ) {
line 917
;914:	int		i;
;915:	char	arg[MAX_TOKEN_CHARS];
;916:
;917:	if ( trap_Argc() != 2 ) {
ADDRLP4 1028
ADDRGP4 trap_Argc
CALLI4
ASGNI4
ADDRLP4 1028
INDIRI4
CNSTI4 2
EQI4 $430
line 918
;918:		if ( ent->client->sess.spectatorState == SPECTATOR_FOLLOW ) {
ADDRFP4 0
INDIRP4
CNSTI4 408
ADDP4
INDIRP4
CNSTI4 1544
ADDP4
INDIRI4
CNSTI4 2
NEI4 $429
line 919
;919:			StopFollowing( ent );
ADDRFP4 0
INDIRP4
ARGP4
ADDRGP4 StopFollowing
CALLV
pop
line 920
;920:		}
line 921
;921:		return;
ADDRGP4 $429
JUMPV
LABELV $430
line 924
;922:	}
;923:
;924:	trap_Argv( 1, arg, sizeof( arg ) );
CNSTI4 1
ARGI4
ADDRLP4 4
ARGP4
CNSTI4 1024
ARGI4
ADDRGP4 trap_Argv
CALLV
pop
line 925
;925:	i = ClientNumberFromString( ent, arg );
ADDRFP4 0
INDIRP4
ARGP4
ADDRLP4 4
ARGP4
ADDRLP4 1032
ADDRGP4 ClientNumberFromString
CALLI4
ASGNI4
ADDRLP4 0
ADDRLP4 1032
INDIRI4
ASGNI4
line 926
;926:	if ( i == -1 ) {
ADDRLP4 0
INDIRI4
CNSTI4 -1
NEI4 $434
line 927
;927:		return;
ADDRGP4 $429
JUMPV
LABELV $434
line 931
;928:	}
;929:
;930:	// can't follow self
;931:	if ( &level.clients[ i ] == ent->client ) {
CNSTI4 1812
ADDRLP4 0
INDIRI4
MULI4
ADDRGP4 level
INDIRP4
ADDP4
CVPU4 4
ADDRFP4 0
INDIRP4
CNSTI4 408
ADDP4
INDIRP4
CVPU4 4
NEU4 $436
line 932
;932:		return;
ADDRGP4 $429
JUMPV
LABELV $436
line 936
;933:	}
;934:
;935:	// can't follow another spectator
;936:	if ( level.clients[ i ].sess.sessionTeam == TEAM_SPECTATOR ) {
CNSTI4 1812
ADDRLP4 0
INDIRI4
MULI4
ADDRGP4 level
INDIRP4
ADDP4
CNSTI4 1536
ADDP4
INDIRI4
CNSTI4 3
NEI4 $438
line 937
;937:		return;
ADDRGP4 $429
JUMPV
LABELV $438
line 941
;938:	}
;939:
;940:	// if they are playing a tournement game, count as a loss
;941:	if ( (g_gametype.integer == GT_TOURNAMENT )
ADDRGP4 g_gametype+12
INDIRI4
CNSTI4 3
NEI4 $440
ADDRFP4 0
INDIRP4
CNSTI4 408
ADDP4
INDIRP4
CNSTI4 1536
ADDP4
INDIRI4
CNSTI4 0
NEI4 $440
line 942
;942:		&& ent->client->sess.sessionTeam == TEAM_FREE ) {
line 944
;943:		//WTF???
;944:		ent->client->sess.losses++;
ADDRLP4 1036
ADDRFP4 0
INDIRP4
CNSTI4 408
ADDP4
INDIRP4
CNSTI4 1556
ADDP4
ASGNP4
ADDRLP4 1036
INDIRP4
ADDRLP4 1036
INDIRP4
INDIRI4
CNSTI4 1
ADDI4
ASGNI4
line 945
;945:	}
LABELV $440
line 948
;946:
;947:	// first set them to spectator
;948:	if ( ent->client->sess.sessionTeam != TEAM_SPECTATOR ) {
ADDRFP4 0
INDIRP4
CNSTI4 408
ADDP4
INDIRP4
CNSTI4 1536
ADDP4
INDIRI4
CNSTI4 3
EQI4 $443
line 949
;949:		SetTeam( ent, "spectator" );
ADDRFP4 0
INDIRP4
ARGP4
ADDRGP4 $319
ARGP4
ADDRGP4 SetTeam
CALLV
pop
line 950
;950:	}
LABELV $443
line 952
;951:
;952:	ent->client->sess.spectatorState = SPECTATOR_FOLLOW;
ADDRFP4 0
INDIRP4
CNSTI4 408
ADDP4
INDIRP4
CNSTI4 1544
ADDP4
CNSTI4 2
ASGNI4
line 953
;953:	ent->client->sess.spectatorClient = i;
ADDRFP4 0
INDIRP4
CNSTI4 408
ADDP4
INDIRP4
CNSTI4 1548
ADDP4
ADDRLP4 0
INDIRI4
ASGNI4
line 954
;954:}
LABELV $429
endproc Cmd_Follow_f 1040 12
export Cmd_FollowCycle_f
proc Cmd_FollowCycle_f 12 8
line 961
;955:
;956:/*
;957:=================
;958:Cmd_FollowCycle_f
;959:=================
;960:*/
;961:void Cmd_FollowCycle_f( gentity_t *ent, int dir ) {
line 966
;962:	int		clientnum;
;963:	int		original;
;964:
;965:	// if they are playing a tournement game, count as a loss
;966:	if ( (g_gametype.integer == GT_TOURNAMENT )
ADDRGP4 g_gametype+12
INDIRI4
CNSTI4 3
NEI4 $446
ADDRFP4 0
INDIRP4
CNSTI4 408
ADDP4
INDIRP4
CNSTI4 1536
ADDP4
INDIRI4
CNSTI4 0
NEI4 $446
line 967
;967:		&& ent->client->sess.sessionTeam == TEAM_FREE ) {\
line 969
;968:		//WTF???
;969:		ent->client->sess.losses++;
ADDRLP4 8
ADDRFP4 0
INDIRP4
CNSTI4 408
ADDP4
INDIRP4
CNSTI4 1556
ADDP4
ASGNP4
ADDRLP4 8
INDIRP4
ADDRLP4 8
INDIRP4
INDIRI4
CNSTI4 1
ADDI4
ASGNI4
line 970
;970:	}
LABELV $446
line 972
;971:	// first set them to spectator
;972:	if ( ent->client->sess.spectatorState == SPECTATOR_NOT ) {
ADDRFP4 0
INDIRP4
CNSTI4 408
ADDP4
INDIRP4
CNSTI4 1544
ADDP4
INDIRI4
CNSTI4 0
NEI4 $449
line 973
;973:		SetTeam( ent, "spectator" );
ADDRFP4 0
INDIRP4
ARGP4
ADDRGP4 $319
ARGP4
ADDRGP4 SetTeam
CALLV
pop
line 974
;974:	}
LABELV $449
line 976
;975:
;976:	if ( dir != 1 && dir != -1 ) {
ADDRLP4 8
ADDRFP4 4
INDIRI4
ASGNI4
ADDRLP4 8
INDIRI4
CNSTI4 1
EQI4 $451
ADDRLP4 8
INDIRI4
CNSTI4 -1
EQI4 $451
line 977
;977:		G_Error( "Cmd_FollowCycle_f: bad dir %i", dir );
ADDRGP4 $453
ARGP4
ADDRFP4 4
INDIRI4
ARGI4
ADDRGP4 G_Error
CALLV
pop
line 978
;978:	}
LABELV $451
line 980
;979:
;980:	clientnum = ent->client->sess.spectatorClient;
ADDRLP4 0
ADDRFP4 0
INDIRP4
CNSTI4 408
ADDP4
INDIRP4
CNSTI4 1548
ADDP4
INDIRI4
ASGNI4
line 981
;981:	original = clientnum;
ADDRLP4 4
ADDRLP4 0
INDIRI4
ASGNI4
LABELV $454
line 982
;982:	do {
line 983
;983:		clientnum += dir;
ADDRLP4 0
ADDRLP4 0
INDIRI4
ADDRFP4 4
INDIRI4
ADDI4
ASGNI4
line 984
;984:		if ( clientnum >= level.maxclients ) {
ADDRLP4 0
INDIRI4
ADDRGP4 level+24
INDIRI4
LTI4 $457
line 985
;985:			clientnum = 0;
ADDRLP4 0
CNSTI4 0
ASGNI4
line 986
;986:		}
LABELV $457
line 987
;987:		if ( clientnum < 0 ) {
ADDRLP4 0
INDIRI4
CNSTI4 0
GEI4 $460
line 988
;988:			clientnum = level.maxclients - 1;
ADDRLP4 0
ADDRGP4 level+24
INDIRI4
CNSTI4 1
SUBI4
ASGNI4
line 989
;989:		}
LABELV $460
line 992
;990:
;991:		// can only follow connected clients
;992:		if ( level.clients[ clientnum ].pers.connected != CON_CONNECTED ) {
CNSTI4 1812
ADDRLP4 0
INDIRI4
MULI4
ADDRGP4 level
INDIRP4
ADDP4
CNSTI4 1380
ADDP4
INDIRI4
CNSTI4 2
EQI4 $463
line 993
;993:			continue;
ADDRGP4 $455
JUMPV
LABELV $463
line 997
;994:		}
;995:
;996:		// can't follow another spectator
;997:		if ( level.clients[ clientnum ].sess.sessionTeam == TEAM_SPECTATOR ) {
CNSTI4 1812
ADDRLP4 0
INDIRI4
MULI4
ADDRGP4 level
INDIRP4
ADDP4
CNSTI4 1536
ADDP4
INDIRI4
CNSTI4 3
NEI4 $465
line 998
;998:			continue;
ADDRGP4 $455
JUMPV
LABELV $465
line 1002
;999:		}
;1000:
;1001:		// this is good, we can use it
;1002:		ent->client->sess.spectatorClient = clientnum;
ADDRFP4 0
INDIRP4
CNSTI4 408
ADDP4
INDIRP4
CNSTI4 1548
ADDP4
ADDRLP4 0
INDIRI4
ASGNI4
line 1003
;1003:		ent->client->sess.spectatorState = SPECTATOR_FOLLOW;
ADDRFP4 0
INDIRP4
CNSTI4 408
ADDP4
INDIRP4
CNSTI4 1544
ADDP4
CNSTI4 2
ASGNI4
line 1004
;1004:		return;
ADDRGP4 $445
JUMPV
LABELV $455
line 1005
;1005:	} while ( clientnum != original );
ADDRLP4 0
INDIRI4
ADDRLP4 4
INDIRI4
NEI4 $454
line 1008
;1006:
;1007:	// leave it where it was
;1008:}
LABELV $445
endproc Cmd_FollowCycle_f 12 8
proc G_SayTo 24 24
line 1017
;1009:
;1010:
;1011:/*
;1012:==================
;1013:G_Say
;1014:==================
;1015:*/
;1016:
;1017:static void G_SayTo( gentity_t *ent, gentity_t *other, int mode, int color, const char *name, const char *message ) {
line 1018
;1018:	if (!other) {
ADDRFP4 4
INDIRP4
CVPU4 4
CNSTU4 0
NEU4 $468
line 1019
;1019:		return;
ADDRGP4 $467
JUMPV
LABELV $468
line 1021
;1020:	}
;1021:	if (!other->inuse) {
ADDRFP4 4
INDIRP4
CNSTI4 412
ADDP4
INDIRI4
CNSTI4 0
NEI4 $470
line 1022
;1022:		return;
ADDRGP4 $467
JUMPV
LABELV $470
line 1024
;1023:	}
;1024:	if (!other->client) {
ADDRFP4 4
INDIRP4
CNSTI4 408
ADDP4
INDIRP4
CVPU4 4
CNSTU4 0
NEU4 $472
line 1025
;1025:		return;
ADDRGP4 $467
JUMPV
LABELV $472
line 1027
;1026:	}
;1027:	if ( other->client->pers.connected != CON_CONNECTED ) {
ADDRFP4 4
INDIRP4
CNSTI4 408
ADDP4
INDIRP4
CNSTI4 1380
ADDP4
INDIRI4
CNSTI4 2
EQI4 $474
line 1028
;1028:		return;
ADDRGP4 $467
JUMPV
LABELV $474
line 1030
;1029:	}
;1030:	if ( mode == SAY_TEAM  && !OnSameTeam(ent, other) ) {
ADDRFP4 8
INDIRI4
CNSTI4 1
NEI4 $476
ADDRFP4 0
INDIRP4
ARGP4
ADDRFP4 4
INDIRP4
ARGP4
ADDRLP4 0
ADDRGP4 OnSameTeam
CALLI4
ASGNI4
ADDRLP4 0
INDIRI4
CNSTI4 0
NEI4 $476
line 1031
;1031:		return;
ADDRGP4 $467
JUMPV
LABELV $476
line 1034
;1032:	}
;1033:	// no chatting to players in tournements
;1034:	if ( (g_gametype.integer == GT_TOURNAMENT )
ADDRGP4 g_gametype+12
INDIRI4
CNSTI4 3
NEI4 $478
ADDRLP4 4
CNSTI4 408
ASGNI4
ADDRLP4 8
CNSTI4 1536
ASGNI4
ADDRLP4 12
CNSTI4 0
ASGNI4
ADDRFP4 4
INDIRP4
ADDRLP4 4
INDIRI4
ADDP4
INDIRP4
ADDRLP4 8
INDIRI4
ADDP4
INDIRI4
ADDRLP4 12
INDIRI4
NEI4 $478
ADDRFP4 0
INDIRP4
ADDRLP4 4
INDIRI4
ADDP4
INDIRP4
ADDRLP4 8
INDIRI4
ADDP4
INDIRI4
ADDRLP4 12
INDIRI4
EQI4 $478
line 1036
;1035:		&& other->client->sess.sessionTeam == TEAM_FREE
;1036:		&& ent->client->sess.sessionTeam != TEAM_FREE ) {
line 1038
;1037:		//Hmm, maybe some option to do so if allowed?  Or at least in developer mode...
;1038:		return;
ADDRGP4 $467
JUMPV
LABELV $478
line 1041
;1039:	}
;1040:
;1041:	trap_SendServerCommand( other-g_entities, va("%s \"%s%c%c%s\"", 
ADDRGP4 $481
ARGP4
ADDRFP4 8
INDIRI4
CNSTI4 1
NEI4 $485
ADDRLP4 16
ADDRGP4 $482
ASGNP4
ADDRGP4 $486
JUMPV
LABELV $485
ADDRLP4 16
ADDRGP4 $483
ASGNP4
LABELV $486
ADDRLP4 16
INDIRP4
ARGP4
ADDRFP4 16
INDIRP4
ARGP4
CNSTI4 94
ARGI4
ADDRFP4 12
INDIRI4
ARGI4
ADDRFP4 20
INDIRP4
ARGP4
ADDRLP4 20
ADDRGP4 va
CALLP4
ASGNP4
ADDRFP4 4
INDIRP4
CVPU4 4
ADDRGP4 g_entities
CVPU4 4
SUBU4
CVUI4 4
CNSTI4 832
DIVI4
ARGI4
ADDRLP4 20
INDIRP4
ARGP4
ADDRGP4 trap_SendServerCommand
CALLV
pop
line 1044
;1042:		mode == SAY_TEAM ? "tchat" : "chat",
;1043:		name, Q_COLOR_ESCAPE, color, message));
;1044:}
LABELV $467
endproc G_SayTo 24 24
export G_Say
proc G_Say 320 28
line 1048
;1045:
;1046:#define EC		"\x19"
;1047:
;1048:void G_Say( gentity_t *ent, gentity_t *target, int mode, const char *chatText ) {
line 1057
;1049:	int			j;
;1050:	gentity_t	*other;
;1051:	int			color;
;1052:	char		name[64];
;1053:	// don't let text be too long for malicious reasons
;1054:	char		text[MAX_SAY_TEXT];
;1055:	char		location[64];
;1056:
;1057:	if ( g_gametype.integer < GT_TEAM && mode == SAY_TEAM ) {
ADDRGP4 g_gametype+12
INDIRI4
CNSTI4 5
GEI4 $488
ADDRFP4 8
INDIRI4
CNSTI4 1
NEI4 $488
line 1058
;1058:		mode = SAY_ALL;
ADDRFP4 8
CNSTI4 0
ASGNI4
line 1059
;1059:	}
LABELV $488
line 1061
;1060:
;1061:	switch ( mode ) {
ADDRLP4 292
ADDRFP4 8
INDIRI4
ASGNI4
ADDRLP4 292
INDIRI4
CNSTI4 0
EQI4 $493
ADDRLP4 292
INDIRI4
CNSTI4 1
EQI4 $496
ADDRLP4 292
INDIRI4
CNSTI4 2
EQI4 $502
ADDRGP4 $491
JUMPV
LABELV $491
LABELV $493
line 1064
;1062:	default:
;1063:	case SAY_ALL:
;1064:		G_LogPrintf( "say: %s: %s\n", ent->client->pers.netname, chatText );
ADDRGP4 $494
ARGP4
ADDRFP4 0
INDIRP4
CNSTI4 408
ADDP4
INDIRP4
CNSTI4 1428
ADDP4
ARGP4
ADDRFP4 12
INDIRP4
ARGP4
ADDRGP4 G_LogPrintf
CALLV
pop
line 1065
;1065:		Com_sprintf (name, sizeof(name), "%s%c%c"EC": ", ent->client->pers.netname, Q_COLOR_ESCAPE, COLOR_WHITE );
ADDRLP4 158
ARGP4
CNSTI4 64
ARGI4
ADDRGP4 $495
ARGP4
ADDRFP4 0
INDIRP4
CNSTI4 408
ADDP4
INDIRP4
CNSTI4 1428
ADDP4
ARGP4
CNSTI4 94
ARGI4
CNSTI4 55
ARGI4
ADDRGP4 Com_sprintf
CALLV
pop
line 1066
;1066:		color = COLOR_GREEN;
ADDRLP4 224
CNSTI4 50
ASGNI4
line 1067
;1067:		break;
ADDRGP4 $492
JUMPV
LABELV $496
line 1069
;1068:	case SAY_TEAM:
;1069:		G_LogPrintf( "sayteam: %s: %s\n", ent->client->pers.netname, chatText );
ADDRGP4 $497
ARGP4
ADDRFP4 0
INDIRP4
CNSTI4 408
ADDP4
INDIRP4
CNSTI4 1428
ADDP4
ARGP4
ADDRFP4 12
INDIRP4
ARGP4
ADDRGP4 G_LogPrintf
CALLV
pop
line 1070
;1070:		if (Team_GetLocationMsg(ent, location, sizeof(location)))
ADDRFP4 0
INDIRP4
ARGP4
ADDRLP4 228
ARGP4
CNSTI4 64
ARGI4
ADDRLP4 296
ADDRGP4 Team_GetLocationMsg
CALLI4
ASGNI4
ADDRLP4 296
INDIRI4
CNSTI4 0
EQI4 $498
line 1071
;1071:			Com_sprintf (name, sizeof(name), EC"(%s%c%c"EC") (%s)"EC": ", 
ADDRLP4 158
ARGP4
CNSTI4 64
ARGI4
ADDRGP4 $500
ARGP4
ADDRFP4 0
INDIRP4
CNSTI4 408
ADDP4
INDIRP4
CNSTI4 1428
ADDP4
ARGP4
CNSTI4 94
ARGI4
CNSTI4 55
ARGI4
ADDRLP4 228
ARGP4
ADDRGP4 Com_sprintf
CALLV
pop
ADDRGP4 $499
JUMPV
LABELV $498
line 1074
;1072:				ent->client->pers.netname, Q_COLOR_ESCAPE, COLOR_WHITE, location);
;1073:		else
;1074:			Com_sprintf (name, sizeof(name), EC"(%s%c%c"EC")"EC": ", 
ADDRLP4 158
ARGP4
CNSTI4 64
ARGI4
ADDRGP4 $501
ARGP4
ADDRFP4 0
INDIRP4
CNSTI4 408
ADDP4
INDIRP4
CNSTI4 1428
ADDP4
ARGP4
CNSTI4 94
ARGI4
CNSTI4 55
ARGI4
ADDRGP4 Com_sprintf
CALLV
pop
LABELV $499
line 1076
;1075:				ent->client->pers.netname, Q_COLOR_ESCAPE, COLOR_WHITE );
;1076:		color = COLOR_CYAN;
ADDRLP4 224
CNSTI4 53
ASGNI4
line 1077
;1077:		break;
ADDRGP4 $492
JUMPV
LABELV $502
line 1079
;1078:	case SAY_TELL:
;1079:		if (target && g_gametype.integer >= GT_TEAM &&
ADDRLP4 300
ADDRFP4 4
INDIRP4
ASGNP4
ADDRLP4 300
INDIRP4
CVPU4 4
CNSTU4 0
EQU4 $503
ADDRGP4 g_gametype+12
INDIRI4
CNSTI4 5
LTI4 $503
ADDRLP4 304
CNSTI4 408
ASGNI4
ADDRLP4 308
CNSTI4 1536
ASGNI4
ADDRLP4 312
ADDRFP4 0
INDIRP4
ASGNP4
ADDRLP4 300
INDIRP4
ADDRLP4 304
INDIRI4
ADDP4
INDIRP4
ADDRLP4 308
INDIRI4
ADDP4
INDIRI4
ADDRLP4 312
INDIRP4
ADDRLP4 304
INDIRI4
ADDP4
INDIRP4
ADDRLP4 308
INDIRI4
ADDP4
INDIRI4
NEI4 $503
ADDRLP4 312
INDIRP4
ARGP4
ADDRLP4 228
ARGP4
CNSTI4 64
ARGI4
ADDRLP4 316
ADDRGP4 Team_GetLocationMsg
CALLI4
ASGNI4
ADDRLP4 316
INDIRI4
CNSTI4 0
EQI4 $503
line 1082
;1080:			target->client->sess.sessionTeam == ent->client->sess.sessionTeam &&
;1081:			Team_GetLocationMsg(ent, location, sizeof(location)))
;1082:			Com_sprintf (name, sizeof(name), EC"[%s%c%c"EC"] (%s)"EC": ", ent->client->pers.netname, Q_COLOR_ESCAPE, COLOR_WHITE, location );
ADDRLP4 158
ARGP4
CNSTI4 64
ARGI4
ADDRGP4 $506
ARGP4
ADDRFP4 0
INDIRP4
CNSTI4 408
ADDP4
INDIRP4
CNSTI4 1428
ADDP4
ARGP4
CNSTI4 94
ARGI4
CNSTI4 55
ARGI4
ADDRLP4 228
ARGP4
ADDRGP4 Com_sprintf
CALLV
pop
ADDRGP4 $504
JUMPV
LABELV $503
line 1084
;1083:		else
;1084:			Com_sprintf (name, sizeof(name), EC"[%s%c%c"EC"]"EC": ", ent->client->pers.netname, Q_COLOR_ESCAPE, COLOR_WHITE );
ADDRLP4 158
ARGP4
CNSTI4 64
ARGI4
ADDRGP4 $507
ARGP4
ADDRFP4 0
INDIRP4
CNSTI4 408
ADDP4
INDIRP4
CNSTI4 1428
ADDP4
ARGP4
CNSTI4 94
ARGI4
CNSTI4 55
ARGI4
ADDRGP4 Com_sprintf
CALLV
pop
LABELV $504
line 1085
;1085:		color = COLOR_MAGENTA;
ADDRLP4 224
CNSTI4 54
ASGNI4
line 1086
;1086:		break;
LABELV $492
line 1089
;1087:	}
;1088:
;1089:	Q_strncpyz( text, chatText, sizeof(text) );
ADDRLP4 8
ARGP4
ADDRFP4 12
INDIRP4
ARGP4
CNSTI4 150
ARGI4
ADDRGP4 Q_strncpyz
CALLV
pop
line 1091
;1090:
;1091:	if ( target ) {
ADDRFP4 4
INDIRP4
CVPU4 4
CNSTU4 0
EQU4 $508
line 1092
;1092:		G_SayTo( ent, target, mode, color, name, text );
ADDRFP4 0
INDIRP4
ARGP4
ADDRFP4 4
INDIRP4
ARGP4
ADDRFP4 8
INDIRI4
ARGI4
ADDRLP4 224
INDIRI4
ARGI4
ADDRLP4 158
ARGP4
ADDRLP4 8
ARGP4
ADDRGP4 G_SayTo
CALLV
pop
line 1093
;1093:		return;
ADDRGP4 $487
JUMPV
LABELV $508
line 1097
;1094:	}
;1095:
;1096:	// echo the text to the console
;1097:	if ( g_dedicated.integer ) {
ADDRGP4 g_dedicated+12
INDIRI4
CNSTI4 0
EQI4 $510
line 1098
;1098:		G_Printf( "%s%s\n", name, text);
ADDRGP4 $513
ARGP4
ADDRLP4 158
ARGP4
ADDRLP4 8
ARGP4
ADDRGP4 G_Printf
CALLV
pop
line 1099
;1099:	}
LABELV $510
line 1102
;1100:
;1101:	// send it to all the apropriate clients
;1102:	for (j = 0; j < level.maxclients; j++) {
ADDRLP4 0
CNSTI4 0
ASGNI4
ADDRGP4 $517
JUMPV
LABELV $514
line 1103
;1103:		other = &g_entities[j];
ADDRLP4 4
CNSTI4 832
ADDRLP4 0
INDIRI4
MULI4
ADDRGP4 g_entities
ADDP4
ASGNP4
line 1104
;1104:		G_SayTo( ent, other, mode, color, name, text );
ADDRFP4 0
INDIRP4
ARGP4
ADDRLP4 4
INDIRP4
ARGP4
ADDRFP4 8
INDIRI4
ARGI4
ADDRLP4 224
INDIRI4
ARGI4
ADDRLP4 158
ARGP4
ADDRLP4 8
ARGP4
ADDRGP4 G_SayTo
CALLV
pop
line 1105
;1105:	}
LABELV $515
line 1102
ADDRLP4 0
ADDRLP4 0
INDIRI4
CNSTI4 1
ADDI4
ASGNI4
LABELV $517
ADDRLP4 0
INDIRI4
ADDRGP4 level+24
INDIRI4
LTI4 $514
line 1106
;1106:}
LABELV $487
endproc G_Say 320 28
proc Cmd_Say_f 12 16
line 1114
;1107:
;1108:
;1109:/*
;1110:==================
;1111:Cmd_Say_f
;1112:==================
;1113:*/
;1114:static void Cmd_Say_f( gentity_t *ent, int mode, qboolean arg0 ) {
line 1117
;1115:	char		*p;
;1116:
;1117:	if ( trap_Argc () < 2 && !arg0 ) {
ADDRLP4 4
ADDRGP4 trap_Argc
CALLI4
ASGNI4
ADDRLP4 4
INDIRI4
CNSTI4 2
GEI4 $520
ADDRFP4 8
INDIRI4
CNSTI4 0
NEI4 $520
line 1118
;1118:		return;
ADDRGP4 $519
JUMPV
LABELV $520
line 1121
;1119:	}
;1120:
;1121:	if (arg0)
ADDRFP4 8
INDIRI4
CNSTI4 0
EQI4 $522
line 1122
;1122:	{
line 1123
;1123:		p = ConcatArgs( 0 );
CNSTI4 0
ARGI4
ADDRLP4 8
ADDRGP4 ConcatArgs
CALLP4
ASGNP4
ADDRLP4 0
ADDRLP4 8
INDIRP4
ASGNP4
line 1124
;1124:	}
ADDRGP4 $523
JUMPV
LABELV $522
line 1126
;1125:	else
;1126:	{
line 1127
;1127:		p = ConcatArgs( 1 );
CNSTI4 1
ARGI4
ADDRLP4 8
ADDRGP4 ConcatArgs
CALLP4
ASGNP4
ADDRLP4 0
ADDRLP4 8
INDIRP4
ASGNP4
line 1128
;1128:	}
LABELV $523
line 1131
;1129:
;1130:	//JediDog: anti msgboom
;1131:	if (strlen(p) > 300) {
ADDRLP4 0
INDIRP4
ARGP4
ADDRLP4 8
ADDRGP4 strlen
CALLI4
ASGNI4
ADDRLP4 8
INDIRI4
CNSTI4 300
LEI4 $524
line 1132
;1132:		p[299] = 0 ;
ADDRLP4 0
INDIRP4
CNSTI4 299
ADDP4
CNSTI1 0
ASGNI1
line 1133
;1133:	}
LABELV $524
line 1136
;1134:	//End
;1135:
;1136:	G_Say( ent, NULL, mode, p );
ADDRFP4 0
INDIRP4
ARGP4
CNSTP4 0
ARGP4
ADDRFP4 4
INDIRI4
ARGI4
ADDRLP4 0
INDIRP4
ARGP4
ADDRGP4 G_Say
CALLV
pop
line 1137
;1137:}
LABELV $519
endproc Cmd_Say_f 12 16
proc Cmd_Tell_f 1080 16
line 1144
;1138:
;1139:/*
;1140:==================
;1141:Cmd_Tell_f
;1142:==================
;1143:*/
;1144:static void Cmd_Tell_f( gentity_t *ent ) {
line 1150
;1145:	int			targetNum;
;1146:	gentity_t	*target;
;1147:	char		*p;
;1148:	char		arg[MAX_TOKEN_CHARS];
;1149:
;1150:	if ( trap_Argc () < 2 ) {
ADDRLP4 1036
ADDRGP4 trap_Argc
CALLI4
ASGNI4
ADDRLP4 1036
INDIRI4
CNSTI4 2
GEI4 $527
line 1151
;1151:		return;
ADDRGP4 $526
JUMPV
LABELV $527
line 1154
;1152:	}
;1153:
;1154:	trap_Argv( 1, arg, sizeof( arg ) );
CNSTI4 1
ARGI4
ADDRLP4 12
ARGP4
CNSTI4 1024
ARGI4
ADDRGP4 trap_Argv
CALLV
pop
line 1155
;1155:	targetNum = atoi( arg );
ADDRLP4 12
ARGP4
ADDRLP4 1040
ADDRGP4 atoi
CALLI4
ASGNI4
ADDRLP4 8
ADDRLP4 1040
INDIRI4
ASGNI4
line 1156
;1156:	if ( targetNum < 0 || targetNum >= level.maxclients ) {
ADDRLP4 8
INDIRI4
CNSTI4 0
LTI4 $532
ADDRLP4 8
INDIRI4
ADDRGP4 level+24
INDIRI4
LTI4 $529
LABELV $532
line 1157
;1157:		return;
ADDRGP4 $526
JUMPV
LABELV $529
line 1160
;1158:	}
;1159:
;1160:	target = &g_entities[targetNum];
ADDRLP4 0
CNSTI4 832
ADDRLP4 8
INDIRI4
MULI4
ADDRGP4 g_entities
ADDP4
ASGNP4
line 1161
;1161:	if ( !target || !target->inuse || !target->client ) {
ADDRLP4 1052
CNSTU4 0
ASGNU4
ADDRLP4 0
INDIRP4
CVPU4 4
ADDRLP4 1052
INDIRU4
EQU4 $536
ADDRLP4 0
INDIRP4
CNSTI4 412
ADDP4
INDIRI4
CNSTI4 0
EQI4 $536
ADDRLP4 0
INDIRP4
CNSTI4 408
ADDP4
INDIRP4
CVPU4 4
ADDRLP4 1052
INDIRU4
NEU4 $533
LABELV $536
line 1162
;1162:		return;
ADDRGP4 $526
JUMPV
LABELV $533
line 1165
;1163:	}
;1164:
;1165:	p = ConcatArgs( 2 );
CNSTI4 2
ARGI4
ADDRLP4 1056
ADDRGP4 ConcatArgs
CALLP4
ASGNP4
ADDRLP4 4
ADDRLP4 1056
INDIRP4
ASGNP4
line 1168
;1166:
;1167:	//JediDog: anti 'msgboom/msgbof'
;1168:	if (strlen(p) > 300) {
ADDRLP4 4
INDIRP4
ARGP4
ADDRLP4 1060
ADDRGP4 strlen
CALLI4
ASGNI4
ADDRLP4 1060
INDIRI4
CNSTI4 300
LEI4 $537
line 1169
;1169:		p[299] = 0 ;
ADDRLP4 4
INDIRP4
CNSTI4 299
ADDP4
CNSTI1 0
ASGNI1
line 1170
;1170:	}
LABELV $537
line 1173
;1171:	//End/
;1172:
;1173:	G_LogPrintf( "tell: %s to %s: %s\n", ent->client->pers.netname, target->client->pers.netname, p );
ADDRGP4 $539
ARGP4
ADDRLP4 1064
CNSTI4 408
ASGNI4
ADDRLP4 1068
CNSTI4 1428
ASGNI4
ADDRFP4 0
INDIRP4
ADDRLP4 1064
INDIRI4
ADDP4
INDIRP4
ADDRLP4 1068
INDIRI4
ADDP4
ARGP4
ADDRLP4 0
INDIRP4
ADDRLP4 1064
INDIRI4
ADDP4
INDIRP4
ADDRLP4 1068
INDIRI4
ADDP4
ARGP4
ADDRLP4 4
INDIRP4
ARGP4
ADDRGP4 G_LogPrintf
CALLV
pop
line 1174
;1174:	G_Say( ent, target, SAY_TELL, p );
ADDRFP4 0
INDIRP4
ARGP4
ADDRLP4 0
INDIRP4
ARGP4
CNSTI4 2
ARGI4
ADDRLP4 4
INDIRP4
ARGP4
ADDRGP4 G_Say
CALLV
pop
line 1177
;1175:	// don't tell to the player self if it was already directed to this player
;1176:	// also don't send the chat back to a bot
;1177:	if ( ent != target && !(ent->r.svFlags & SVF_BOT)) {
ADDRLP4 1072
ADDRFP4 0
INDIRP4
ASGNP4
ADDRLP4 1072
INDIRP4
CVPU4 4
ADDRLP4 0
INDIRP4
CVPU4 4
EQU4 $540
ADDRLP4 1072
INDIRP4
CNSTI4 304
ADDP4
INDIRI4
CNSTI4 8
BANDI4
CNSTI4 0
NEI4 $540
line 1178
;1178:		G_Say( ent, ent, SAY_TELL, p );
ADDRLP4 1076
ADDRFP4 0
INDIRP4
ASGNP4
ADDRLP4 1076
INDIRP4
ARGP4
ADDRLP4 1076
INDIRP4
ARGP4
CNSTI4 2
ARGI4
ADDRLP4 4
INDIRP4
ARGP4
ADDRGP4 G_Say
CALLV
pop
line 1179
;1179:	}
LABELV $540
line 1180
;1180:}
LABELV $526
endproc Cmd_Tell_f 1080 16
proc G_VoiceTo 16 24
line 1183
;1181:
;1182:
;1183:static void G_VoiceTo( gentity_t *ent, gentity_t *other, int mode, const char *id, qboolean voiceonly ) {
line 1187
;1184:	int color;
;1185:	char *cmd;
;1186:
;1187:	if (!other) {
ADDRFP4 4
INDIRP4
CVPU4 4
CNSTU4 0
NEU4 $543
line 1188
;1188:		return;
ADDRGP4 $542
JUMPV
LABELV $543
line 1190
;1189:	}
;1190:	if (!other->inuse) {
ADDRFP4 4
INDIRP4
CNSTI4 412
ADDP4
INDIRI4
CNSTI4 0
NEI4 $545
line 1191
;1191:		return;
ADDRGP4 $542
JUMPV
LABELV $545
line 1193
;1192:	}
;1193:	if (!other->client) {
ADDRFP4 4
INDIRP4
CNSTI4 408
ADDP4
INDIRP4
CVPU4 4
CNSTU4 0
NEU4 $547
line 1194
;1194:		return;
ADDRGP4 $542
JUMPV
LABELV $547
line 1196
;1195:	}
;1196:	if ( mode == SAY_TEAM && !OnSameTeam(ent, other) ) {
ADDRFP4 8
INDIRI4
CNSTI4 1
NEI4 $549
ADDRFP4 0
INDIRP4
ARGP4
ADDRFP4 4
INDIRP4
ARGP4
ADDRLP4 8
ADDRGP4 OnSameTeam
CALLI4
ASGNI4
ADDRLP4 8
INDIRI4
CNSTI4 0
NEI4 $549
line 1197
;1197:		return;
ADDRGP4 $542
JUMPV
LABELV $549
line 1200
;1198:	}
;1199:	// no chatting to players in tournements
;1200:	if ( (g_gametype.integer == GT_TOURNAMENT )) {
ADDRGP4 g_gametype+12
INDIRI4
CNSTI4 3
NEI4 $551
line 1201
;1201:		return;
ADDRGP4 $542
JUMPV
LABELV $551
line 1204
;1202:	}
;1203:
;1204:	if (mode == SAY_TEAM) {
ADDRFP4 8
INDIRI4
CNSTI4 1
NEI4 $554
line 1205
;1205:		color = COLOR_CYAN;
ADDRLP4 0
CNSTI4 53
ASGNI4
line 1206
;1206:		cmd = "vtchat";
ADDRLP4 4
ADDRGP4 $556
ASGNP4
line 1207
;1207:	}
ADDRGP4 $555
JUMPV
LABELV $554
line 1208
;1208:	else if (mode == SAY_TELL) {
ADDRFP4 8
INDIRI4
CNSTI4 2
NEI4 $557
line 1209
;1209:		color = COLOR_MAGENTA;
ADDRLP4 0
CNSTI4 54
ASGNI4
line 1210
;1210:		cmd = "vtell";
ADDRLP4 4
ADDRGP4 $559
ASGNP4
line 1211
;1211:	}
ADDRGP4 $558
JUMPV
LABELV $557
line 1212
;1212:	else {
line 1213
;1213:		color = COLOR_GREEN;
ADDRLP4 0
CNSTI4 50
ASGNI4
line 1214
;1214:		cmd = "vchat";
ADDRLP4 4
ADDRGP4 $560
ASGNP4
line 1215
;1215:	}
LABELV $558
LABELV $555
line 1217
;1216:
;1217:	trap_SendServerCommand( other-g_entities, va("%s %d %d %d %s", cmd, voiceonly, ent->s.number, color, id));
ADDRGP4 $561
ARGP4
ADDRLP4 4
INDIRP4
ARGP4
ADDRFP4 16
INDIRI4
ARGI4
ADDRFP4 0
INDIRP4
INDIRI4
ARGI4
ADDRLP4 0
INDIRI4
ARGI4
ADDRFP4 12
INDIRP4
ARGP4
ADDRLP4 12
ADDRGP4 va
CALLP4
ASGNP4
ADDRFP4 4
INDIRP4
CVPU4 4
ADDRGP4 g_entities
CVPU4 4
SUBU4
CVUI4 4
CNSTI4 832
DIVI4
ARGI4
ADDRLP4 12
INDIRP4
ARGP4
ADDRGP4 trap_SendServerCommand
CALLV
pop
line 1218
;1218:}
LABELV $542
endproc G_VoiceTo 16 24
export G_Voice
proc G_Voice 8 20
line 1220
;1219:
;1220:void G_Voice( gentity_t *ent, gentity_t *target, int mode, const char *id, qboolean voiceonly ) {
line 1224
;1221:	int			j;
;1222:	gentity_t	*other;
;1223:
;1224:	if ( g_gametype.integer < GT_TEAM && mode == SAY_TEAM ) {
ADDRGP4 g_gametype+12
INDIRI4
CNSTI4 5
GEI4 $563
ADDRFP4 8
INDIRI4
CNSTI4 1
NEI4 $563
line 1225
;1225:		mode = SAY_ALL;
ADDRFP4 8
CNSTI4 0
ASGNI4
line 1226
;1226:	}
LABELV $563
line 1228
;1227:
;1228:	if ( target ) {
ADDRFP4 4
INDIRP4
CVPU4 4
CNSTU4 0
EQU4 $566
line 1229
;1229:		G_VoiceTo( ent, target, mode, id, voiceonly );
ADDRFP4 0
INDIRP4
ARGP4
ADDRFP4 4
INDIRP4
ARGP4
ADDRFP4 8
INDIRI4
ARGI4
ADDRFP4 12
INDIRP4
ARGP4
ADDRFP4 16
INDIRI4
ARGI4
ADDRGP4 G_VoiceTo
CALLV
pop
line 1230
;1230:		return;
ADDRGP4 $562
JUMPV
LABELV $566
line 1234
;1231:	}
;1232:
;1233:	// echo the text to the console
;1234:	if ( g_dedicated.integer ) {
ADDRGP4 g_dedicated+12
INDIRI4
CNSTI4 0
EQI4 $568
line 1235
;1235:		G_Printf( "voice: %s %s\n", ent->client->pers.netname, id);
ADDRGP4 $571
ARGP4
ADDRFP4 0
INDIRP4
CNSTI4 408
ADDP4
INDIRP4
CNSTI4 1428
ADDP4
ARGP4
ADDRFP4 12
INDIRP4
ARGP4
ADDRGP4 G_Printf
CALLV
pop
line 1236
;1236:	}
LABELV $568
line 1239
;1237:
;1238:	// send it to all the apropriate clients
;1239:	for (j = 0; j < level.maxclients; j++) {
ADDRLP4 0
CNSTI4 0
ASGNI4
ADDRGP4 $575
JUMPV
LABELV $572
line 1240
;1240:		other = &g_entities[j];
ADDRLP4 4
CNSTI4 832
ADDRLP4 0
INDIRI4
MULI4
ADDRGP4 g_entities
ADDP4
ASGNP4
line 1241
;1241:		G_VoiceTo( ent, other, mode, id, voiceonly );
ADDRFP4 0
INDIRP4
ARGP4
ADDRLP4 4
INDIRP4
ARGP4
ADDRFP4 8
INDIRI4
ARGI4
ADDRFP4 12
INDIRP4
ARGP4
ADDRFP4 16
INDIRI4
ARGI4
ADDRGP4 G_VoiceTo
CALLV
pop
line 1242
;1242:	}
LABELV $573
line 1239
ADDRLP4 0
ADDRLP4 0
INDIRI4
CNSTI4 1
ADDI4
ASGNI4
LABELV $575
ADDRLP4 0
INDIRI4
ADDRGP4 level+24
INDIRI4
LTI4 $572
line 1243
;1243:}
LABELV $562
endproc G_Voice 8 20
proc Cmd_Voice_f 12 20
line 1250
;1244:
;1245:/*
;1246:==================
;1247:Cmd_Voice_f
;1248:==================
;1249:*/
;1250:static void Cmd_Voice_f( gentity_t *ent, int mode, qboolean arg0, qboolean voiceonly ) {
line 1253
;1251:	char		*p;
;1252:
;1253:	if ( trap_Argc () < 2 && !arg0 ) {
ADDRLP4 4
ADDRGP4 trap_Argc
CALLI4
ASGNI4
ADDRLP4 4
INDIRI4
CNSTI4 2
GEI4 $578
ADDRFP4 8
INDIRI4
CNSTI4 0
NEI4 $578
line 1254
;1254:		return;
ADDRGP4 $577
JUMPV
LABELV $578
line 1257
;1255:	}
;1256:
;1257:	if (arg0)
ADDRFP4 8
INDIRI4
CNSTI4 0
EQI4 $580
line 1258
;1258:	{
line 1259
;1259:		p = ConcatArgs( 0 );
CNSTI4 0
ARGI4
ADDRLP4 8
ADDRGP4 ConcatArgs
CALLP4
ASGNP4
ADDRLP4 0
ADDRLP4 8
INDIRP4
ASGNP4
line 1260
;1260:	}
ADDRGP4 $581
JUMPV
LABELV $580
line 1262
;1261:	else
;1262:	{
line 1263
;1263:		p = ConcatArgs( 1 );
CNSTI4 1
ARGI4
ADDRLP4 8
ADDRGP4 ConcatArgs
CALLP4
ASGNP4
ADDRLP4 0
ADDRLP4 8
INDIRP4
ASGNP4
line 1264
;1264:	}
LABELV $581
line 1266
;1265:
;1266:	G_Voice( ent, NULL, mode, p, voiceonly );
ADDRFP4 0
INDIRP4
ARGP4
CNSTP4 0
ARGP4
ADDRFP4 4
INDIRI4
ARGI4
ADDRLP4 0
INDIRP4
ARGP4
ADDRFP4 12
INDIRI4
ARGI4
ADDRGP4 G_Voice
CALLV
pop
line 1267
;1267:}
LABELV $577
endproc Cmd_Voice_f 12 20
proc Cmd_VoiceTell_f 1076 20
line 1274
;1268:
;1269:/*
;1270:==================
;1271:Cmd_VoiceTell_f
;1272:==================
;1273:*/
;1274:static void Cmd_VoiceTell_f( gentity_t *ent, qboolean voiceonly ) {
line 1280
;1275:	int			targetNum;
;1276:	gentity_t	*target;
;1277:	char		*id;
;1278:	char		arg[MAX_TOKEN_CHARS];
;1279:
;1280:	if ( trap_Argc () < 2 ) {
ADDRLP4 1036
ADDRGP4 trap_Argc
CALLI4
ASGNI4
ADDRLP4 1036
INDIRI4
CNSTI4 2
GEI4 $583
line 1281
;1281:		return;
ADDRGP4 $582
JUMPV
LABELV $583
line 1284
;1282:	}
;1283:
;1284:	trap_Argv( 1, arg, sizeof( arg ) );
CNSTI4 1
ARGI4
ADDRLP4 12
ARGP4
CNSTI4 1024
ARGI4
ADDRGP4 trap_Argv
CALLV
pop
line 1285
;1285:	targetNum = atoi( arg );
ADDRLP4 12
ARGP4
ADDRLP4 1040
ADDRGP4 atoi
CALLI4
ASGNI4
ADDRLP4 4
ADDRLP4 1040
INDIRI4
ASGNI4
line 1286
;1286:	if ( targetNum < 0 || targetNum >= level.maxclients ) {
ADDRLP4 4
INDIRI4
CNSTI4 0
LTI4 $588
ADDRLP4 4
INDIRI4
ADDRGP4 level+24
INDIRI4
LTI4 $585
LABELV $588
line 1287
;1287:		return;
ADDRGP4 $582
JUMPV
LABELV $585
line 1290
;1288:	}
;1289:
;1290:	target = &g_entities[targetNum];
ADDRLP4 0
CNSTI4 832
ADDRLP4 4
INDIRI4
MULI4
ADDRGP4 g_entities
ADDP4
ASGNP4
line 1291
;1291:	if ( !target || !target->inuse || !target->client ) {
ADDRLP4 1052
CNSTU4 0
ASGNU4
ADDRLP4 0
INDIRP4
CVPU4 4
ADDRLP4 1052
INDIRU4
EQU4 $592
ADDRLP4 0
INDIRP4
CNSTI4 412
ADDP4
INDIRI4
CNSTI4 0
EQI4 $592
ADDRLP4 0
INDIRP4
CNSTI4 408
ADDP4
INDIRP4
CVPU4 4
ADDRLP4 1052
INDIRU4
NEU4 $589
LABELV $592
line 1292
;1292:		return;
ADDRGP4 $582
JUMPV
LABELV $589
line 1295
;1293:	}
;1294:
;1295:	id = ConcatArgs( 2 );
CNSTI4 2
ARGI4
ADDRLP4 1056
ADDRGP4 ConcatArgs
CALLP4
ASGNP4
ADDRLP4 8
ADDRLP4 1056
INDIRP4
ASGNP4
line 1297
;1296:
;1297:	G_LogPrintf( "vtell: %s to %s: %s\n", ent->client->pers.netname, target->client->pers.netname, id );
ADDRGP4 $593
ARGP4
ADDRLP4 1060
CNSTI4 408
ASGNI4
ADDRLP4 1064
CNSTI4 1428
ASGNI4
ADDRFP4 0
INDIRP4
ADDRLP4 1060
INDIRI4
ADDP4
INDIRP4
ADDRLP4 1064
INDIRI4
ADDP4
ARGP4
ADDRLP4 0
INDIRP4
ADDRLP4 1060
INDIRI4
ADDP4
INDIRP4
ADDRLP4 1064
INDIRI4
ADDP4
ARGP4
ADDRLP4 8
INDIRP4
ARGP4
ADDRGP4 G_LogPrintf
CALLV
pop
line 1298
;1298:	G_Voice( ent, target, SAY_TELL, id, voiceonly );
ADDRFP4 0
INDIRP4
ARGP4
ADDRLP4 0
INDIRP4
ARGP4
CNSTI4 2
ARGI4
ADDRLP4 8
INDIRP4
ARGP4
ADDRFP4 4
INDIRI4
ARGI4
ADDRGP4 G_Voice
CALLV
pop
line 1301
;1299:	// don't tell to the player self if it was already directed to this player
;1300:	// also don't send the chat back to a bot
;1301:	if ( ent != target && !(ent->r.svFlags & SVF_BOT)) {
ADDRLP4 1068
ADDRFP4 0
INDIRP4
ASGNP4
ADDRLP4 1068
INDIRP4
CVPU4 4
ADDRLP4 0
INDIRP4
CVPU4 4
EQU4 $594
ADDRLP4 1068
INDIRP4
CNSTI4 304
ADDP4
INDIRI4
CNSTI4 8
BANDI4
CNSTI4 0
NEI4 $594
line 1302
;1302:		G_Voice( ent, ent, SAY_TELL, id, voiceonly );
ADDRLP4 1072
ADDRFP4 0
INDIRP4
ASGNP4
ADDRLP4 1072
INDIRP4
ARGP4
ADDRLP4 1072
INDIRP4
ARGP4
CNSTI4 2
ARGI4
ADDRLP4 8
INDIRP4
ARGP4
ADDRFP4 4
INDIRI4
ARGI4
ADDRGP4 G_Voice
CALLV
pop
line 1303
;1303:	}
LABELV $594
line 1304
;1304:}
LABELV $582
endproc Cmd_VoiceTell_f 1076 20
proc Cmd_VoiceTaunt_f 56 20
line 1312
;1305:
;1306:
;1307:/*
;1308:==================
;1309:Cmd_VoiceTaunt_f
;1310:==================
;1311:*/
;1312:static void Cmd_VoiceTaunt_f( gentity_t *ent ) {
line 1316
;1313:	gentity_t *who;
;1314:	int i;
;1315:
;1316:	if (!ent->client) {
ADDRFP4 0
INDIRP4
CNSTI4 408
ADDP4
INDIRP4
CVPU4 4
CNSTU4 0
NEU4 $597
line 1317
;1317:		return;
ADDRGP4 $596
JUMPV
LABELV $597
line 1321
;1318:	}
;1319:
;1320:	// insult someone who just killed you
;1321:	if (ent->enemy && ent->enemy->client && ent->enemy->client->lastkilled_client == ent->s.number) {
ADDRLP4 8
ADDRFP4 0
INDIRP4
ASGNP4
ADDRLP4 12
ADDRLP4 8
INDIRP4
CNSTI4 728
ADDP4
INDIRP4
ASGNP4
ADDRLP4 16
CNSTU4 0
ASGNU4
ADDRLP4 12
INDIRP4
CVPU4 4
ADDRLP4 16
INDIRU4
EQU4 $599
ADDRLP4 20
ADDRLP4 12
INDIRP4
CNSTI4 408
ADDP4
INDIRP4
ASGNP4
ADDRLP4 20
INDIRP4
CVPU4 4
ADDRLP4 16
INDIRU4
EQU4 $599
ADDRLP4 20
INDIRP4
CNSTI4 1676
ADDP4
INDIRI4
ADDRLP4 8
INDIRP4
INDIRI4
NEI4 $599
line 1323
;1322:		// i am a dead corpse
;1323:		if (!(ent->enemy->r.svFlags & SVF_BOT)) {
ADDRFP4 0
INDIRP4
CNSTI4 728
ADDP4
INDIRP4
CNSTI4 304
ADDP4
INDIRI4
CNSTI4 8
BANDI4
CNSTI4 0
NEI4 $601
line 1324
;1324:			G_Voice( ent, ent->enemy, SAY_TELL, VOICECHAT_DEATHINSULT, qfalse );
ADDRLP4 24
ADDRFP4 0
INDIRP4
ASGNP4
ADDRLP4 24
INDIRP4
ARGP4
ADDRLP4 24
INDIRP4
CNSTI4 728
ADDP4
INDIRP4
ARGP4
CNSTI4 2
ARGI4
ADDRGP4 $603
ARGP4
CNSTI4 0
ARGI4
ADDRGP4 G_Voice
CALLV
pop
line 1325
;1325:		}
LABELV $601
line 1326
;1326:		if (!(ent->r.svFlags & SVF_BOT)) {
ADDRFP4 0
INDIRP4
CNSTI4 304
ADDP4
INDIRI4
CNSTI4 8
BANDI4
CNSTI4 0
NEI4 $604
line 1327
;1327:			G_Voice( ent, ent,        SAY_TELL, VOICECHAT_DEATHINSULT, qfalse );
ADDRLP4 24
ADDRFP4 0
INDIRP4
ASGNP4
ADDRLP4 24
INDIRP4
ARGP4
ADDRLP4 24
INDIRP4
ARGP4
CNSTI4 2
ARGI4
ADDRGP4 $603
ARGP4
CNSTI4 0
ARGI4
ADDRGP4 G_Voice
CALLV
pop
line 1328
;1328:		}
LABELV $604
line 1329
;1329:		ent->enemy = NULL;
ADDRFP4 0
INDIRP4
CNSTI4 728
ADDP4
CNSTP4 0
ASGNP4
line 1330
;1330:		return;
ADDRGP4 $596
JUMPV
LABELV $599
line 1333
;1331:	}
;1332:	// insult someone you just killed
;1333:	if (ent->client->lastkilled_client >= 0 && ent->client->lastkilled_client != ent->s.number) {
ADDRLP4 24
ADDRFP4 0
INDIRP4
ASGNP4
ADDRLP4 28
ADDRLP4 24
INDIRP4
CNSTI4 408
ADDP4
INDIRP4
CNSTI4 1676
ADDP4
INDIRI4
ASGNI4
ADDRLP4 28
INDIRI4
CNSTI4 0
LTI4 $606
ADDRLP4 28
INDIRI4
ADDRLP4 24
INDIRP4
INDIRI4
EQI4 $606
line 1334
;1334:		who = g_entities + ent->client->lastkilled_client;
ADDRLP4 0
CNSTI4 832
ADDRFP4 0
INDIRP4
CNSTI4 408
ADDP4
INDIRP4
CNSTI4 1676
ADDP4
INDIRI4
MULI4
ADDRGP4 g_entities
ADDP4
ASGNP4
line 1335
;1335:		if (who->client) {
ADDRLP4 0
INDIRP4
CNSTI4 408
ADDP4
INDIRP4
CVPU4 4
CNSTU4 0
EQU4 $608
line 1337
;1336:			// who is the person I just killed
;1337:			if (who->client->lasthurt_mod == MOD_STUN_BATON) {
ADDRLP4 0
INDIRP4
CNSTI4 408
ADDP4
INDIRP4
CNSTI4 1684
ADDP4
INDIRI4
CNSTI4 1
NEI4 $610
line 1338
;1338:				if (!(who->r.svFlags & SVF_BOT)) {
ADDRLP4 0
INDIRP4
CNSTI4 304
ADDP4
INDIRI4
CNSTI4 8
BANDI4
CNSTI4 0
NEI4 $612
line 1339
;1339:					G_Voice( ent, who, SAY_TELL, VOICECHAT_KILLGAUNTLET, qfalse );	// and I killed them with a gauntlet
ADDRFP4 0
INDIRP4
ARGP4
ADDRLP4 0
INDIRP4
ARGP4
CNSTI4 2
ARGI4
ADDRGP4 $614
ARGP4
CNSTI4 0
ARGI4
ADDRGP4 G_Voice
CALLV
pop
line 1340
;1340:				}
LABELV $612
line 1341
;1341:				if (!(ent->r.svFlags & SVF_BOT)) {
ADDRFP4 0
INDIRP4
CNSTI4 304
ADDP4
INDIRI4
CNSTI4 8
BANDI4
CNSTI4 0
NEI4 $611
line 1342
;1342:					G_Voice( ent, ent, SAY_TELL, VOICECHAT_KILLGAUNTLET, qfalse );
ADDRLP4 32
ADDRFP4 0
INDIRP4
ASGNP4
ADDRLP4 32
INDIRP4
ARGP4
ADDRLP4 32
INDIRP4
ARGP4
CNSTI4 2
ARGI4
ADDRGP4 $614
ARGP4
CNSTI4 0
ARGI4
ADDRGP4 G_Voice
CALLV
pop
line 1343
;1343:				}
line 1344
;1344:			} else {
ADDRGP4 $611
JUMPV
LABELV $610
line 1345
;1345:				if (!(who->r.svFlags & SVF_BOT)) {
ADDRLP4 0
INDIRP4
CNSTI4 304
ADDP4
INDIRI4
CNSTI4 8
BANDI4
CNSTI4 0
NEI4 $617
line 1346
;1346:					G_Voice( ent, who, SAY_TELL, VOICECHAT_KILLINSULT, qfalse );	// and I killed them with something else
ADDRFP4 0
INDIRP4
ARGP4
ADDRLP4 0
INDIRP4
ARGP4
CNSTI4 2
ARGI4
ADDRGP4 $619
ARGP4
CNSTI4 0
ARGI4
ADDRGP4 G_Voice
CALLV
pop
line 1347
;1347:				}
LABELV $617
line 1348
;1348:				if (!(ent->r.svFlags & SVF_BOT)) {
ADDRFP4 0
INDIRP4
CNSTI4 304
ADDP4
INDIRI4
CNSTI4 8
BANDI4
CNSTI4 0
NEI4 $620
line 1349
;1349:					G_Voice( ent, ent, SAY_TELL, VOICECHAT_KILLINSULT, qfalse );
ADDRLP4 32
ADDRFP4 0
INDIRP4
ASGNP4
ADDRLP4 32
INDIRP4
ARGP4
ADDRLP4 32
INDIRP4
ARGP4
CNSTI4 2
ARGI4
ADDRGP4 $619
ARGP4
CNSTI4 0
ARGI4
ADDRGP4 G_Voice
CALLV
pop
line 1350
;1350:				}
LABELV $620
line 1351
;1351:			}
LABELV $611
line 1352
;1352:			ent->client->lastkilled_client = -1;
ADDRFP4 0
INDIRP4
CNSTI4 408
ADDP4
INDIRP4
CNSTI4 1676
ADDP4
CNSTI4 -1
ASGNI4
line 1353
;1353:			return;
ADDRGP4 $596
JUMPV
LABELV $608
line 1355
;1354:		}
;1355:	}
LABELV $606
line 1357
;1356:
;1357:	if (g_gametype.integer >= GT_TEAM) {
ADDRGP4 g_gametype+12
INDIRI4
CNSTI4 5
LTI4 $622
line 1359
;1358:		// praise a team mate who just got a reward
;1359:		for(i = 0; i < MAX_CLIENTS; i++) {
ADDRLP4 4
CNSTI4 0
ASGNI4
LABELV $625
line 1360
;1360:			who = g_entities + i;
ADDRLP4 0
CNSTI4 832
ADDRLP4 4
INDIRI4
MULI4
ADDRGP4 g_entities
ADDP4
ASGNP4
line 1361
;1361:			if (who->client && who != ent && who->client->sess.sessionTeam == ent->client->sess.sessionTeam) {
ADDRLP4 36
CNSTI4 408
ASGNI4
ADDRLP4 40
ADDRLP4 0
INDIRP4
ADDRLP4 36
INDIRI4
ADDP4
INDIRP4
ASGNP4
ADDRLP4 40
INDIRP4
CVPU4 4
CNSTU4 0
EQU4 $629
ADDRLP4 44
ADDRFP4 0
INDIRP4
ASGNP4
ADDRLP4 0
INDIRP4
CVPU4 4
ADDRLP4 44
INDIRP4
CVPU4 4
EQU4 $629
ADDRLP4 48
CNSTI4 1536
ASGNI4
ADDRLP4 40
INDIRP4
ADDRLP4 48
INDIRI4
ADDP4
INDIRI4
ADDRLP4 44
INDIRP4
ADDRLP4 36
INDIRI4
ADDP4
INDIRP4
ADDRLP4 48
INDIRI4
ADDP4
INDIRI4
NEI4 $629
line 1362
;1362:				if (who->client->rewardTime > level.time) {
ADDRLP4 0
INDIRP4
CNSTI4 408
ADDP4
INDIRP4
CNSTI4 1700
ADDP4
INDIRI4
ADDRGP4 level+32
INDIRI4
LEI4 $631
line 1363
;1363:					if (!(who->r.svFlags & SVF_BOT)) {
ADDRLP4 0
INDIRP4
CNSTI4 304
ADDP4
INDIRI4
CNSTI4 8
BANDI4
CNSTI4 0
NEI4 $634
line 1364
;1364:						G_Voice( ent, who, SAY_TELL, VOICECHAT_PRAISE, qfalse );
ADDRFP4 0
INDIRP4
ARGP4
ADDRLP4 0
INDIRP4
ARGP4
CNSTI4 2
ARGI4
ADDRGP4 $636
ARGP4
CNSTI4 0
ARGI4
ADDRGP4 G_Voice
CALLV
pop
line 1365
;1365:					}
LABELV $634
line 1366
;1366:					if (!(ent->r.svFlags & SVF_BOT)) {
ADDRFP4 0
INDIRP4
CNSTI4 304
ADDP4
INDIRI4
CNSTI4 8
BANDI4
CNSTI4 0
NEI4 $596
line 1367
;1367:						G_Voice( ent, ent, SAY_TELL, VOICECHAT_PRAISE, qfalse );
ADDRLP4 52
ADDRFP4 0
INDIRP4
ASGNP4
ADDRLP4 52
INDIRP4
ARGP4
ADDRLP4 52
INDIRP4
ARGP4
CNSTI4 2
ARGI4
ADDRGP4 $636
ARGP4
CNSTI4 0
ARGI4
ADDRGP4 G_Voice
CALLV
pop
line 1368
;1368:					}
line 1369
;1369:					return;
ADDRGP4 $596
JUMPV
LABELV $631
line 1371
;1370:				}
;1371:			}
LABELV $629
line 1372
;1372:		}
LABELV $626
line 1359
ADDRLP4 4
ADDRLP4 4
INDIRI4
CNSTI4 1
ADDI4
ASGNI4
ADDRLP4 4
INDIRI4
CNSTI4 32
LTI4 $625
line 1373
;1373:	}
LABELV $622
line 1376
;1374:
;1375:	// just say something
;1376:	G_Voice( ent, NULL, SAY_ALL, VOICECHAT_TAUNT, qfalse );
ADDRFP4 0
INDIRP4
ARGP4
CNSTP4 0
ARGP4
ADDRLP4 32
CNSTI4 0
ASGNI4
ADDRLP4 32
INDIRI4
ARGI4
ADDRGP4 $639
ARGP4
ADDRLP4 32
INDIRI4
ARGI4
ADDRGP4 G_Voice
CALLV
pop
line 1377
;1377:}
LABELV $596
endproc Cmd_VoiceTaunt_f 56 20
data
align 4
LABELV gc_orders
address $640
address $641
address $642
address $643
address $644
address $645
address $646
export Cmd_GameCommand_f
code
proc Cmd_GameCommand_f 1060 16
line 1391
;1378:
;1379:
;1380:
;1381:static char	*gc_orders[] = {
;1382:	"hold your position",
;1383:	"hold this position",
;1384:	"come here",
;1385:	"cover me",
;1386:	"guard location",
;1387:	"search and destroy",
;1388:	"report"
;1389:};
;1390:
;1391:void Cmd_GameCommand_f( gentity_t *ent ) {
line 1396
;1392:	int		player;
;1393:	int		order;
;1394:	char	str[MAX_TOKEN_CHARS];
;1395:
;1396:	trap_Argv( 1, str, sizeof( str ) );
CNSTI4 1
ARGI4
ADDRLP4 0
ARGP4
CNSTI4 1024
ARGI4
ADDRGP4 trap_Argv
CALLV
pop
line 1397
;1397:	player = atoi( str );
ADDRLP4 0
ARGP4
ADDRLP4 1032
ADDRGP4 atoi
CALLI4
ASGNI4
ADDRLP4 1028
ADDRLP4 1032
INDIRI4
ASGNI4
line 1398
;1398:	trap_Argv( 2, str, sizeof( str ) );
CNSTI4 2
ARGI4
ADDRLP4 0
ARGP4
CNSTI4 1024
ARGI4
ADDRGP4 trap_Argv
CALLV
pop
line 1399
;1399:	order = atoi( str );
ADDRLP4 0
ARGP4
ADDRLP4 1036
ADDRGP4 atoi
CALLI4
ASGNI4
ADDRLP4 1024
ADDRLP4 1036
INDIRI4
ASGNI4
line 1401
;1400:
;1401:	if ( player < 0 || player >= MAX_CLIENTS ) {
ADDRLP4 1028
INDIRI4
CNSTI4 0
LTI4 $650
ADDRLP4 1028
INDIRI4
CNSTI4 32
LTI4 $648
LABELV $650
line 1402
;1402:		return;
ADDRGP4 $647
JUMPV
LABELV $648
line 1404
;1403:	}
;1404:	if ( order < 0 || order > sizeof(gc_orders)/sizeof(char *) ) {
ADDRLP4 1024
INDIRI4
CNSTI4 0
LTI4 $653
ADDRLP4 1024
INDIRI4
CVIU4 4
CNSTU4 7
LEU4 $651
LABELV $653
line 1405
;1405:		return;
ADDRGP4 $647
JUMPV
LABELV $651
line 1407
;1406:	}
;1407:	G_Say( ent, &g_entities[player], SAY_TELL, gc_orders[order] );
ADDRFP4 0
INDIRP4
ARGP4
CNSTI4 832
ADDRLP4 1028
INDIRI4
MULI4
ADDRGP4 g_entities
ADDP4
ARGP4
ADDRLP4 1048
CNSTI4 2
ASGNI4
ADDRLP4 1048
INDIRI4
ARGI4
ADDRLP4 1024
INDIRI4
ADDRLP4 1048
INDIRI4
LSHI4
ADDRGP4 gc_orders
ADDP4
INDIRP4
ARGP4
ADDRGP4 G_Say
CALLV
pop
line 1408
;1408:	G_Say( ent, ent, SAY_TELL, gc_orders[order] );
ADDRLP4 1052
ADDRFP4 0
INDIRP4
ASGNP4
ADDRLP4 1052
INDIRP4
ARGP4
ADDRLP4 1052
INDIRP4
ARGP4
ADDRLP4 1056
CNSTI4 2
ASGNI4
ADDRLP4 1056
INDIRI4
ARGI4
ADDRLP4 1024
INDIRI4
ADDRLP4 1056
INDIRI4
LSHI4
ADDRGP4 gc_orders
ADDP4
INDIRP4
ARGP4
ADDRGP4 G_Say
CALLV
pop
line 1409
;1409:}
LABELV $647
endproc Cmd_GameCommand_f 1060 16
export Cmd_Where_f
proc Cmd_Where_f 8 8
line 1416
;1410:
;1411:/*
;1412:==================
;1413:Cmd_Where_f
;1414:==================
;1415:*/
;1416:void Cmd_Where_f( gentity_t *ent ) {
line 1417
;1417:	trap_SendServerCommand( ent-g_entities, va("print \"%s\n\"", vtos( ent->s.origin ) ) );
ADDRFP4 0
INDIRP4
CNSTI4 92
ADDP4
ARGP4
ADDRLP4 0
ADDRGP4 vtos
CALLP4
ASGNP4
ADDRGP4 $115
ARGP4
ADDRLP4 0
INDIRP4
ARGP4
ADDRLP4 4
ADDRGP4 va
CALLP4
ASGNP4
ADDRFP4 0
INDIRP4
CVPU4 4
ADDRGP4 g_entities
CVPU4 4
SUBU4
CVUI4 4
CNSTI4 832
DIVI4
ARGI4
ADDRLP4 4
INDIRP4
ARGP4
ADDRGP4 trap_SendServerCommand
CALLV
pop
line 1418
;1418:}
LABELV $654
endproc Cmd_Where_f 8 8
data
align 4
LABELV gameNames
address $655
address $656
address $657
address $658
address $659
address $660
address $661
address $662
address $663
export G_ClientNumberFromName
code
proc G_ClientNumberFromName 2060 8
line 1440
;1419:
;1420:static const char *gameNames[] = {
;1421:	"Free For All",
;1422:	"Holocron FFA",
;1423:	"Jedi Master",
;1424:	"Duel",
;1425:	"Single Player",
;1426:	"Team FFA",
;1427:	"N/A",
;1428:	"Capture the Flag",
;1429:	"Capture the Ysalamiri"
;1430:};
;1431:
;1432:/*
;1433:==================
;1434:G_ClientNumberFromName
;1435:
;1436:Finds the client number of the client with the given name
;1437:==================
;1438:*/
;1439:int G_ClientNumberFromName ( const char* name )
;1440:{
line 1447
;1441:	char		s2[MAX_STRING_CHARS];
;1442:	char		n2[MAX_STRING_CHARS];
;1443:	int			i;
;1444:	gclient_t*	cl;
;1445:
;1446:	// check for a name match
;1447:	SanitizeString( (char*)name, s2 );
ADDRFP4 0
INDIRP4
ARGP4
ADDRLP4 1032
ARGP4
ADDRGP4 SanitizeString
CALLV
pop
line 1448
;1448:	for ( i=0, cl=level.clients ; i < level.numConnectedClients ; i++, cl++ ) 
ADDRLP4 0
CNSTI4 0
ASGNI4
ADDRLP4 4
ADDRGP4 level
INDIRP4
ASGNP4
ADDRGP4 $668
JUMPV
LABELV $665
line 1449
;1449:	{
line 1450
;1450:		SanitizeString( cl->pers.netname, n2 );
ADDRLP4 4
INDIRP4
CNSTI4 1428
ADDP4
ARGP4
ADDRLP4 8
ARGP4
ADDRGP4 SanitizeString
CALLV
pop
line 1451
;1451:		if ( !strcmp( n2, s2 ) ) 
ADDRLP4 8
ARGP4
ADDRLP4 1032
ARGP4
ADDRLP4 2056
ADDRGP4 strcmp
CALLI4
ASGNI4
ADDRLP4 2056
INDIRI4
CNSTI4 0
NEI4 $670
line 1452
;1452:		{
line 1453
;1453:			return i;
ADDRLP4 0
INDIRI4
RETI4
ADDRGP4 $664
JUMPV
LABELV $670
line 1455
;1454:		}
;1455:	}
LABELV $666
line 1448
ADDRLP4 0
ADDRLP4 0
INDIRI4
CNSTI4 1
ADDI4
ASGNI4
ADDRLP4 4
ADDRLP4 4
INDIRP4
CNSTI4 1812
ADDP4
ASGNP4
LABELV $668
ADDRLP4 0
INDIRI4
ADDRGP4 level+72
INDIRI4
LTI4 $665
line 1457
;1456:
;1457:	return -1;
CNSTI4 -1
RETI4
LABELV $664
endproc G_ClientNumberFromName 2060 8
export SanitizeString2
proc SanitizeString2 12 0
line 1468
;1458:}
;1459:
;1460:/*
;1461:==================
;1462:SanitizeString2
;1463:
;1464:Rich's revised version of SanitizeString
;1465:==================
;1466:*/
;1467:void SanitizeString2( char *in, char *out )
;1468:{
line 1469
;1469:	int i = 0;
ADDRLP4 0
CNSTI4 0
ASGNI4
line 1470
;1470:	int r = 0;
ADDRLP4 4
CNSTI4 0
ASGNI4
ADDRGP4 $674
JUMPV
LABELV $673
line 1473
;1471:
;1472:	while (in[i])
;1473:	{
line 1474
;1474:		if (i >= MAX_NAME_LENGTH-1)
ADDRLP4 0
INDIRI4
CNSTI4 31
LTI4 $676
line 1475
;1475:		{ //the ui truncates the name here..
line 1476
;1476:			break;
ADDRGP4 $675
JUMPV
LABELV $676
line 1479
;1477:		}
;1478:
;1479:		if (in[i] == '^')
ADDRLP4 0
INDIRI4
ADDRFP4 0
INDIRP4
ADDP4
INDIRI1
CVII4 1
CNSTI4 94
NEI4 $678
line 1480
;1480:		{
line 1481
;1481:			if (in[i+1] >= 48 && //'0'
ADDRLP4 8
ADDRLP4 0
INDIRI4
CNSTI4 1
ADDI4
ADDRFP4 0
INDIRP4
ADDP4
INDIRI1
CVII4 1
ASGNI4
ADDRLP4 8
INDIRI4
CNSTI4 48
LTI4 $680
ADDRLP4 8
INDIRI4
CNSTI4 57
GTI4 $680
line 1483
;1482:				in[i+1] <= 57) //'9'
;1483:			{ //only skip it if there's a number after it for the color
line 1484
;1484:				i += 2;
ADDRLP4 0
ADDRLP4 0
INDIRI4
CNSTI4 2
ADDI4
ASGNI4
line 1485
;1485:				continue;
ADDRGP4 $674
JUMPV
LABELV $680
line 1488
;1486:			}
;1487:			else
;1488:			{ //just skip the ^
line 1489
;1489:				i++;
ADDRLP4 0
ADDRLP4 0
INDIRI4
CNSTI4 1
ADDI4
ASGNI4
line 1490
;1490:				continue;
ADDRGP4 $674
JUMPV
LABELV $678
line 1494
;1491:			}
;1492:		}
;1493:
;1494:		if (in[i] < 32)
ADDRLP4 0
INDIRI4
ADDRFP4 0
INDIRP4
ADDP4
INDIRI1
CVII4 1
CNSTI4 32
GEI4 $682
line 1495
;1495:		{
line 1496
;1496:			i++;
ADDRLP4 0
ADDRLP4 0
INDIRI4
CNSTI4 1
ADDI4
ASGNI4
line 1497
;1497:			continue;
ADDRGP4 $674
JUMPV
LABELV $682
line 1500
;1498:		}
;1499:
;1500:		out[r] = in[i];
ADDRLP4 4
INDIRI4
ADDRFP4 4
INDIRP4
ADDP4
ADDRLP4 0
INDIRI4
ADDRFP4 0
INDIRP4
ADDP4
INDIRI1
ASGNI1
line 1501
;1501:		r++;
ADDRLP4 4
ADDRLP4 4
INDIRI4
CNSTI4 1
ADDI4
ASGNI4
line 1502
;1502:		i++;
ADDRLP4 0
ADDRLP4 0
INDIRI4
CNSTI4 1
ADDI4
ASGNI4
line 1503
;1503:	}
LABELV $674
line 1472
ADDRLP4 0
INDIRI4
ADDRFP4 0
INDIRP4
ADDP4
INDIRI1
CVII4 1
CNSTI4 0
NEI4 $673
LABELV $675
line 1504
;1504:	out[r] = 0;
ADDRLP4 4
INDIRI4
ADDRFP4 4
INDIRP4
ADDP4
CNSTI1 0
ASGNI1
line 1505
;1505:}
LABELV $672
endproc SanitizeString2 12 0
export G_ClientNumberFromStrippedName
proc G_ClientNumberFromStrippedName 2060 8
line 1515
;1506:
;1507:/*
;1508:==================
;1509:G_ClientNumberFromStrippedName
;1510:
;1511:Same as above, but strips special characters out of the names before comparing.
;1512:==================
;1513:*/
;1514:int G_ClientNumberFromStrippedName ( const char* name )
;1515:{
line 1522
;1516:	char		s2[MAX_STRING_CHARS];
;1517:	char		n2[MAX_STRING_CHARS];
;1518:	int			i;
;1519:	gclient_t*	cl;
;1520:
;1521:	// check for a name match
;1522:	SanitizeString2( (char*)name, s2 );
ADDRFP4 0
INDIRP4
ARGP4
ADDRLP4 1032
ARGP4
ADDRGP4 SanitizeString2
CALLV
pop
line 1523
;1523:	for ( i=0, cl=level.clients ; i < level.numConnectedClients ; i++, cl++ ) 
ADDRLP4 0
CNSTI4 0
ASGNI4
ADDRLP4 4
ADDRGP4 level
INDIRP4
ASGNP4
ADDRGP4 $688
JUMPV
LABELV $685
line 1524
;1524:	{
line 1525
;1525:		SanitizeString2( cl->pers.netname, n2 );
ADDRLP4 4
INDIRP4
CNSTI4 1428
ADDP4
ARGP4
ADDRLP4 8
ARGP4
ADDRGP4 SanitizeString2
CALLV
pop
line 1526
;1526:		if ( !strcmp( n2, s2 ) ) 
ADDRLP4 8
ARGP4
ADDRLP4 1032
ARGP4
ADDRLP4 2056
ADDRGP4 strcmp
CALLI4
ASGNI4
ADDRLP4 2056
INDIRI4
CNSTI4 0
NEI4 $690
line 1527
;1527:		{
line 1528
;1528:			return i;
ADDRLP4 0
INDIRI4
RETI4
ADDRGP4 $684
JUMPV
LABELV $690
line 1530
;1529:		}
;1530:	}
LABELV $686
line 1523
ADDRLP4 0
ADDRLP4 0
INDIRI4
CNSTI4 1
ADDI4
ASGNI4
ADDRLP4 4
ADDRLP4 4
INDIRP4
CNSTI4 1812
ADDP4
ASGNP4
LABELV $688
ADDRLP4 0
INDIRI4
ADDRGP4 level+72
INDIRI4
LTI4 $685
line 1532
;1531:
;1532:	return -1;
CNSTI4 -1
RETI4
LABELV $684
endproc G_ClientNumberFromStrippedName 2060 8
export Cmd_CallVote_f
proc Cmd_CallVote_f 3160 24
line 1540
;1533:}
;1534:
;1535:/*
;1536:==================
;1537:Cmd_CallVote_f
;1538:==================
;1539:*/
;1540:void Cmd_CallVote_f( gentity_t *ent ) {
line 1545
;1541:	int		i;
;1542:	char	arg1[MAX_STRING_TOKENS];
;1543:	char	arg2[MAX_STRING_TOKENS];
;1544:
;1545:	if ( !g_allowVote.integer ) {
ADDRGP4 g_allowVote+12
INDIRI4
CNSTI4 0
NEI4 $693
line 1546
;1546:		trap_SendServerCommand( ent-g_entities, va("print \"%s\n\"", G_GetStripEdString("SVINGAME", "NOVOTE")) );
ADDRGP4 $116
ARGP4
ADDRGP4 $696
ARGP4
ADDRLP4 2052
ADDRGP4 G_GetStripEdString
CALLP4
ASGNP4
ADDRGP4 $115
ARGP4
ADDRLP4 2052
INDIRP4
ARGP4
ADDRLP4 2056
ADDRGP4 va
CALLP4
ASGNP4
ADDRFP4 0
INDIRP4
CVPU4 4
ADDRGP4 g_entities
CVPU4 4
SUBU4
CVUI4 4
CNSTI4 832
DIVI4
ARGI4
ADDRLP4 2056
INDIRP4
ARGP4
ADDRGP4 trap_SendServerCommand
CALLV
pop
line 1547
;1547:		return;
ADDRGP4 $692
JUMPV
LABELV $693
line 1550
;1548:	}
;1549:
;1550:	if ( level.voteTime ) {
ADDRGP4 level+2276
INDIRI4
CNSTI4 0
EQI4 $697
line 1551
;1551:		trap_SendServerCommand( ent-g_entities, va("print \"%s\n\"", G_GetStripEdString("SVINGAME", "VOTEINPROGRESS")) );
ADDRGP4 $116
ARGP4
ADDRGP4 $700
ARGP4
ADDRLP4 2052
ADDRGP4 G_GetStripEdString
CALLP4
ASGNP4
ADDRGP4 $115
ARGP4
ADDRLP4 2052
INDIRP4
ARGP4
ADDRLP4 2056
ADDRGP4 va
CALLP4
ASGNP4
ADDRFP4 0
INDIRP4
CVPU4 4
ADDRGP4 g_entities
CVPU4 4
SUBU4
CVUI4 4
CNSTI4 832
DIVI4
ARGI4
ADDRLP4 2056
INDIRP4
ARGP4
ADDRGP4 trap_SendServerCommand
CALLV
pop
line 1552
;1552:		return;
ADDRGP4 $692
JUMPV
LABELV $697
line 1554
;1553:	}
;1554:	if ( ent->client->pers.voteCount >= MAX_VOTE_COUNT ) {
ADDRFP4 0
INDIRP4
CNSTI4 408
ADDP4
INDIRP4
CNSTI4 1520
ADDP4
INDIRI4
CNSTI4 3
LTI4 $701
line 1555
;1555:		trap_SendServerCommand( ent-g_entities, va("print \"%s\n\"", G_GetStripEdString("SVINGAME", "MAXVOTES")) );
ADDRGP4 $116
ARGP4
ADDRGP4 $703
ARGP4
ADDRLP4 2052
ADDRGP4 G_GetStripEdString
CALLP4
ASGNP4
ADDRGP4 $115
ARGP4
ADDRLP4 2052
INDIRP4
ARGP4
ADDRLP4 2056
ADDRGP4 va
CALLP4
ASGNP4
ADDRFP4 0
INDIRP4
CVPU4 4
ADDRGP4 g_entities
CVPU4 4
SUBU4
CVUI4 4
CNSTI4 832
DIVI4
ARGI4
ADDRLP4 2056
INDIRP4
ARGP4
ADDRGP4 trap_SendServerCommand
CALLV
pop
line 1556
;1556:		return;
ADDRGP4 $692
JUMPV
LABELV $701
line 1558
;1557:	}
;1558:	if ( ent->client->sess.sessionTeam == TEAM_SPECTATOR ) {
ADDRFP4 0
INDIRP4
CNSTI4 408
ADDP4
INDIRP4
CNSTI4 1536
ADDP4
INDIRI4
CNSTI4 3
NEI4 $704
line 1559
;1559:		trap_SendServerCommand( ent-g_entities, va("print \"%s\n\"", G_GetStripEdString("SVINGAME", "NOSPECVOTE")) );
ADDRGP4 $116
ARGP4
ADDRGP4 $706
ARGP4
ADDRLP4 2052
ADDRGP4 G_GetStripEdString
CALLP4
ASGNP4
ADDRGP4 $115
ARGP4
ADDRLP4 2052
INDIRP4
ARGP4
ADDRLP4 2056
ADDRGP4 va
CALLP4
ASGNP4
ADDRFP4 0
INDIRP4
CVPU4 4
ADDRGP4 g_entities
CVPU4 4
SUBU4
CVUI4 4
CNSTI4 832
DIVI4
ARGI4
ADDRLP4 2056
INDIRP4
ARGP4
ADDRGP4 trap_SendServerCommand
CALLV
pop
line 1560
;1560:		return;
ADDRGP4 $692
JUMPV
LABELV $704
line 1564
;1561:	}
;1562:
;1563:	// make sure it is a valid command to vote on
;1564:	trap_Argv( 1, arg1, sizeof( arg1 ) );
CNSTI4 1
ARGI4
ADDRLP4 4
ARGP4
CNSTI4 1024
ARGI4
ADDRGP4 trap_Argv
CALLV
pop
line 1565
;1565:	trap_Argv( 2, arg2, sizeof( arg2 ) );
CNSTI4 2
ARGI4
ADDRLP4 1028
ARGP4
CNSTI4 1024
ARGI4
ADDRGP4 trap_Argv
CALLV
pop
line 1573
;1566:
;1567:	//JediDog: Removed this for what is below...
;1568:/*	if( strchr( arg1, ';' ) || strchr( arg2, ';' ) ) {
;1569:		trap_SendServerCommand( ent-g_entities, "print \"Invalid vote string.\n\"" );
;1570:		return;
;1571:	}
;1572:*/	//JediDog: Added this instead of what is above for callvote bug
;1573:	if( strchr(arg1,';') || strchr(arg2,';') || strchr(arg1,'\n') || strchr(arg2,'\n') || strchr(arg1,'\r') || strchr(arg2,'\r')) {
ADDRLP4 4
ARGP4
CNSTI4 59
ARGI4
ADDRLP4 2052
ADDRGP4 strchr
CALLP4
ASGNP4
ADDRLP4 2052
INDIRP4
CVPU4 4
CNSTU4 0
NEU4 $713
ADDRLP4 1028
ARGP4
CNSTI4 59
ARGI4
ADDRLP4 2056
ADDRGP4 strchr
CALLP4
ASGNP4
ADDRLP4 2056
INDIRP4
CVPU4 4
CNSTU4 0
NEU4 $713
ADDRLP4 4
ARGP4
CNSTI4 10
ARGI4
ADDRLP4 2060
ADDRGP4 strchr
CALLP4
ASGNP4
ADDRLP4 2060
INDIRP4
CVPU4 4
CNSTU4 0
NEU4 $713
ADDRLP4 1028
ARGP4
CNSTI4 10
ARGI4
ADDRLP4 2064
ADDRGP4 strchr
CALLP4
ASGNP4
ADDRLP4 2064
INDIRP4
CVPU4 4
CNSTU4 0
NEU4 $713
ADDRLP4 4
ARGP4
CNSTI4 13
ARGI4
ADDRLP4 2068
ADDRGP4 strchr
CALLP4
ASGNP4
ADDRLP4 2068
INDIRP4
CVPU4 4
CNSTU4 0
NEU4 $713
ADDRLP4 1028
ARGP4
CNSTI4 13
ARGI4
ADDRLP4 2072
ADDRGP4 strchr
CALLP4
ASGNP4
ADDRLP4 2072
INDIRP4
CVPU4 4
CNSTU4 0
EQU4 $707
LABELV $713
line 1574
;1574:		trap_SendServerCommand(ent-g_entities, "print \"Invalid vote string.\n\"" );
ADDRFP4 0
INDIRP4
CVPU4 4
ADDRGP4 g_entities
CVPU4 4
SUBU4
CVUI4 4
CNSTI4 832
DIVI4
ARGI4
ADDRGP4 $714
ARGP4
ADDRGP4 trap_SendServerCommand
CALLV
pop
line 1575
;1575:		return;
ADDRGP4 $692
JUMPV
LABELV $707
line 1578
;1576:	}
;1577:
;1578:	if ( !Q_stricmp( arg1, "map_restart" ) ) {
ADDRLP4 4
ARGP4
ADDRGP4 $717
ARGP4
ADDRLP4 2076
ADDRGP4 Q_stricmp
CALLI4
ASGNI4
ADDRLP4 2076
INDIRI4
CNSTI4 0
NEI4 $715
line 1579
;1579:	} else if ( !Q_stricmp( arg1, "nextmap" ) ) {
ADDRGP4 $716
JUMPV
LABELV $715
ADDRLP4 4
ARGP4
ADDRGP4 $720
ARGP4
ADDRLP4 2080
ADDRGP4 Q_stricmp
CALLI4
ASGNI4
ADDRLP4 2080
INDIRI4
CNSTI4 0
NEI4 $718
line 1580
;1580:	} else if ( !Q_stricmp( arg1, "map" ) ) {
ADDRGP4 $719
JUMPV
LABELV $718
ADDRLP4 4
ARGP4
ADDRGP4 $723
ARGP4
ADDRLP4 2084
ADDRGP4 Q_stricmp
CALLI4
ASGNI4
ADDRLP4 2084
INDIRI4
CNSTI4 0
NEI4 $721
line 1581
;1581:	} else if ( !Q_stricmp( arg1, "g_gametype" ) ) {
ADDRGP4 $722
JUMPV
LABELV $721
ADDRLP4 4
ARGP4
ADDRGP4 $726
ARGP4
ADDRLP4 2088
ADDRGP4 Q_stricmp
CALLI4
ASGNI4
ADDRLP4 2088
INDIRI4
CNSTI4 0
NEI4 $724
line 1582
;1582:	} else if ( !Q_stricmp( arg1, "kick" ) ) {
ADDRGP4 $725
JUMPV
LABELV $724
ADDRLP4 4
ARGP4
ADDRGP4 $729
ARGP4
ADDRLP4 2092
ADDRGP4 Q_stricmp
CALLI4
ASGNI4
ADDRLP4 2092
INDIRI4
CNSTI4 0
NEI4 $727
line 1583
;1583:	} else if ( !Q_stricmp( arg1, "clientkick" ) ) {
ADDRGP4 $728
JUMPV
LABELV $727
ADDRLP4 4
ARGP4
ADDRGP4 $732
ARGP4
ADDRLP4 2096
ADDRGP4 Q_stricmp
CALLI4
ASGNI4
ADDRLP4 2096
INDIRI4
CNSTI4 0
NEI4 $730
line 1584
;1584:	} else if ( !Q_stricmp( arg1, "g_doWarmup" ) ) {
ADDRGP4 $731
JUMPV
LABELV $730
ADDRLP4 4
ARGP4
ADDRGP4 $735
ARGP4
ADDRLP4 2100
ADDRGP4 Q_stricmp
CALLI4
ASGNI4
ADDRLP4 2100
INDIRI4
CNSTI4 0
NEI4 $733
line 1585
;1585:	} else if ( !Q_stricmp( arg1, "timelimit" ) ) {
ADDRGP4 $734
JUMPV
LABELV $733
ADDRLP4 4
ARGP4
ADDRGP4 $738
ARGP4
ADDRLP4 2104
ADDRGP4 Q_stricmp
CALLI4
ASGNI4
ADDRLP4 2104
INDIRI4
CNSTI4 0
NEI4 $736
line 1586
;1586:	} else if ( !Q_stricmp( arg1, "fraglimit" ) ) {
ADDRGP4 $737
JUMPV
LABELV $736
ADDRLP4 4
ARGP4
ADDRGP4 $741
ARGP4
ADDRLP4 2108
ADDRGP4 Q_stricmp
CALLI4
ASGNI4
ADDRLP4 2108
INDIRI4
CNSTI4 0
NEI4 $739
line 1587
;1587:	} else {
ADDRGP4 $740
JUMPV
LABELV $739
line 1588
;1588:		trap_SendServerCommand( ent-g_entities, "print \"Invalid vote string.\n\"" );
ADDRFP4 0
INDIRP4
CVPU4 4
ADDRGP4 g_entities
CVPU4 4
SUBU4
CVUI4 4
CNSTI4 832
DIVI4
ARGI4
ADDRGP4 $714
ARGP4
ADDRGP4 trap_SendServerCommand
CALLV
pop
line 1589
;1589:		trap_SendServerCommand( ent-g_entities, "print \"Vote commands are: map_restart, nextmap, map <mapname>, g_gametype <n>, kick <player>, clientkick <clientnum>, g_doWarmup, timelimit <time>, fraglimit <frags>.\n\"" );
ADDRFP4 0
INDIRP4
CVPU4 4
ADDRGP4 g_entities
CVPU4 4
SUBU4
CVUI4 4
CNSTI4 832
DIVI4
ARGI4
ADDRGP4 $742
ARGP4
ADDRGP4 trap_SendServerCommand
CALLV
pop
line 1590
;1590:		return;
ADDRGP4 $692
JUMPV
LABELV $740
LABELV $737
LABELV $734
LABELV $731
LABELV $728
LABELV $725
LABELV $722
LABELV $719
LABELV $716
line 1594
;1591:	}
;1592:
;1593:	// if there is still a vote to be executed
;1594:	if ( level.voteExecuteTime ) {
ADDRGP4 level+2280
INDIRI4
CNSTI4 0
EQI4 $743
line 1595
;1595:		level.voteExecuteTime = 0;
ADDRGP4 level+2280
CNSTI4 0
ASGNI4
line 1596
;1596:		trap_SendConsoleCommand( EXEC_APPEND, va("%s\n", level.voteString ) );
ADDRGP4 $747
ARGP4
ADDRGP4 level+228
ARGP4
ADDRLP4 2112
ADDRGP4 va
CALLP4
ASGNP4
CNSTI4 2
ARGI4
ADDRLP4 2112
INDIRP4
ARGP4
ADDRGP4 trap_SendConsoleCommand
CALLV
pop
line 1597
;1597:	}
LABELV $743
line 1600
;1598:
;1599:	// special case for g_gametype, check for bad values
;1600:	if ( !Q_stricmp( arg1, "g_gametype" ) )
ADDRLP4 4
ARGP4
ADDRGP4 $726
ARGP4
ADDRLP4 2112
ADDRGP4 Q_stricmp
CALLI4
ASGNI4
ADDRLP4 2112
INDIRI4
CNSTI4 0
NEI4 $749
line 1601
;1601:	{
line 1602
;1602:		i = atoi( arg2 );
ADDRLP4 1028
ARGP4
ADDRLP4 2116
ADDRGP4 atoi
CALLI4
ASGNI4
ADDRLP4 0
ADDRLP4 2116
INDIRI4
ASGNI4
line 1603
;1603:		if( i == GT_SINGLE_PLAYER || i < GT_FFA || i >= GT_MAX_GAME_TYPE) {
ADDRLP4 0
INDIRI4
CNSTI4 4
EQI4 $754
ADDRLP4 0
INDIRI4
CNSTI4 0
LTI4 $754
ADDRLP4 0
INDIRI4
CNSTI4 9
LTI4 $751
LABELV $754
line 1604
;1604:			trap_SendServerCommand( ent-g_entities, "print \"Invalid gametype.\n\"" );
ADDRFP4 0
INDIRP4
CVPU4 4
ADDRGP4 g_entities
CVPU4 4
SUBU4
CVUI4 4
CNSTI4 832
DIVI4
ARGI4
ADDRGP4 $755
ARGP4
ADDRGP4 trap_SendServerCommand
CALLV
pop
line 1605
;1605:			return;
ADDRGP4 $692
JUMPV
LABELV $751
line 1608
;1606:		}
;1607:
;1608:		level.votingGametype = qtrue;
ADDRGP4 level+2296
CNSTI4 1
ASGNI4
line 1609
;1609:		level.votingGametypeTo = i;
ADDRGP4 level+2300
ADDRLP4 0
INDIRI4
ASGNI4
line 1611
;1610:
;1611:		Com_sprintf( level.voteString, sizeof( level.voteString ), "%s %d", arg1, i );
ADDRGP4 level+228
ARGP4
CNSTI4 1024
ARGI4
ADDRGP4 $760
ARGP4
ADDRLP4 4
ARGP4
ADDRLP4 0
INDIRI4
ARGI4
ADDRGP4 Com_sprintf
CALLV
pop
line 1612
;1612:		Com_sprintf( level.voteDisplayString, sizeof( level.voteDisplayString ), "%s %s", arg1, gameNames[i] );
ADDRGP4 level+1252
ARGP4
CNSTI4 1024
ARGI4
ADDRGP4 $763
ARGP4
ADDRLP4 4
ARGP4
ADDRLP4 0
INDIRI4
CNSTI4 2
LSHI4
ADDRGP4 gameNames
ADDP4
INDIRP4
ARGP4
ADDRGP4 Com_sprintf
CALLV
pop
line 1613
;1613:	}
ADDRGP4 $750
JUMPV
LABELV $749
line 1614
;1614:	else if ( !Q_stricmp( arg1, "map" ) ) 
ADDRLP4 4
ARGP4
ADDRGP4 $723
ARGP4
ADDRLP4 2116
ADDRGP4 Q_stricmp
CALLI4
ASGNI4
ADDRLP4 2116
INDIRI4
CNSTI4 0
NEI4 $764
line 1615
;1615:	{
line 1620
;1616:		// special case for map changes, we want to reset the nextmap setting
;1617:		// this allows a player to change maps, but not upset the map rotation
;1618:		char	s[MAX_STRING_CHARS];
;1619:
;1620:		if (!G_DoesMapSupportGametype(arg2, trap_Cvar_VariableIntegerValue("g_gametype")))
ADDRGP4 $726
ARGP4
ADDRLP4 3144
ADDRGP4 trap_Cvar_VariableIntegerValue
CALLI4
ASGNI4
ADDRLP4 1028
ARGP4
ADDRLP4 3144
INDIRI4
ARGI4
ADDRLP4 3148
ADDRGP4 G_DoesMapSupportGametype
CALLI4
ASGNI4
ADDRLP4 3148
INDIRI4
CNSTI4 0
NEI4 $766
line 1621
;1621:		{
line 1623
;1622:			//trap_SendServerCommand( ent-g_entities, "print \"You can't vote for this map, it isn't supported by the current gametype.\n\"" );
;1623:			trap_SendServerCommand( ent-g_entities, va("print \"%s\n\"", G_GetStripEdString("SVINGAME", "NOVOTE_MAPNOTSUPPORTEDBYGAME")) );
ADDRGP4 $116
ARGP4
ADDRGP4 $768
ARGP4
ADDRLP4 3152
ADDRGP4 G_GetStripEdString
CALLP4
ASGNP4
ADDRGP4 $115
ARGP4
ADDRLP4 3152
INDIRP4
ARGP4
ADDRLP4 3156
ADDRGP4 va
CALLP4
ASGNP4
ADDRFP4 0
INDIRP4
CVPU4 4
ADDRGP4 g_entities
CVPU4 4
SUBU4
CVUI4 4
CNSTI4 832
DIVI4
ARGI4
ADDRLP4 3156
INDIRP4
ARGP4
ADDRGP4 trap_SendServerCommand
CALLV
pop
line 1624
;1624:			return;
ADDRGP4 $692
JUMPV
LABELV $766
line 1627
;1625:		}
;1626:
;1627:		trap_Cvar_VariableStringBuffer( "nextmap", s, sizeof(s) );
ADDRGP4 $720
ARGP4
ADDRLP4 2120
ARGP4
CNSTI4 1024
ARGI4
ADDRGP4 trap_Cvar_VariableStringBuffer
CALLV
pop
line 1628
;1628:		if (*s) {
ADDRLP4 2120
INDIRI1
CVII4 1
CNSTI4 0
EQI4 $769
line 1629
;1629:			Com_sprintf( level.voteString, sizeof( level.voteString ), "%s %s; set nextmap \"%s\"", arg1, arg2, s );
ADDRGP4 level+228
ARGP4
CNSTI4 1024
ARGI4
ADDRGP4 $773
ARGP4
ADDRLP4 4
ARGP4
ADDRLP4 1028
ARGP4
ADDRLP4 2120
ARGP4
ADDRGP4 Com_sprintf
CALLV
pop
line 1630
;1630:		} else {
ADDRGP4 $770
JUMPV
LABELV $769
line 1631
;1631:			Com_sprintf( level.voteString, sizeof( level.voteString ), "%s %s", arg1, arg2 );
ADDRGP4 level+228
ARGP4
CNSTI4 1024
ARGI4
ADDRGP4 $763
ARGP4
ADDRLP4 4
ARGP4
ADDRLP4 1028
ARGP4
ADDRGP4 Com_sprintf
CALLV
pop
line 1632
;1632:		}
LABELV $770
line 1633
;1633:		Com_sprintf( level.voteDisplayString, sizeof( level.voteDisplayString ), "%s", level.voteString );
ADDRGP4 level+1252
ARGP4
CNSTI4 1024
ARGI4
ADDRGP4 $778
ARGP4
ADDRGP4 level+228
ARGP4
ADDRGP4 Com_sprintf
CALLV
pop
line 1634
;1634:	}
ADDRGP4 $765
JUMPV
LABELV $764
line 1635
;1635:	else if ( !Q_stricmp ( arg1, "clientkick" ) )
ADDRLP4 4
ARGP4
ADDRGP4 $732
ARGP4
ADDRLP4 2120
ADDRGP4 Q_stricmp
CALLI4
ASGNI4
ADDRLP4 2120
INDIRI4
CNSTI4 0
NEI4 $780
line 1636
;1636:	{
line 1637
;1637:		int n = atoi ( arg2 );
ADDRLP4 1028
ARGP4
ADDRLP4 2128
ADDRGP4 atoi
CALLI4
ASGNI4
ADDRLP4 2124
ADDRLP4 2128
INDIRI4
ASGNI4
line 1639
;1638:
;1639:		if ( n < 0 || n >= MAX_CLIENTS )
ADDRLP4 2132
ADDRLP4 2124
INDIRI4
ASGNI4
ADDRLP4 2132
INDIRI4
CNSTI4 0
LTI4 $784
ADDRLP4 2132
INDIRI4
CNSTI4 32
LTI4 $782
LABELV $784
line 1640
;1640:		{
line 1641
;1641:			trap_SendServerCommand( ent-g_entities, va("print \"invalid client number %d.\n\"", n ) );
ADDRGP4 $785
ARGP4
ADDRLP4 2124
INDIRI4
ARGI4
ADDRLP4 2136
ADDRGP4 va
CALLP4
ASGNP4
ADDRFP4 0
INDIRP4
CVPU4 4
ADDRGP4 g_entities
CVPU4 4
SUBU4
CVUI4 4
CNSTI4 832
DIVI4
ARGI4
ADDRLP4 2136
INDIRP4
ARGP4
ADDRGP4 trap_SendServerCommand
CALLV
pop
line 1642
;1642:			return;
ADDRGP4 $692
JUMPV
LABELV $782
line 1645
;1643:		}
;1644:
;1645:		if ( g_entities[n].client->pers.connected == CON_DISCONNECTED )
CNSTI4 832
ADDRLP4 2124
INDIRI4
MULI4
ADDRGP4 g_entities+408
ADDP4
INDIRP4
CNSTI4 1380
ADDP4
INDIRI4
CNSTI4 0
NEI4 $786
line 1646
;1646:		{
line 1647
;1647:			trap_SendServerCommand( ent-g_entities, va("print \"there is no client with the client number %d.\n\"", n ) );
ADDRGP4 $789
ARGP4
ADDRLP4 2124
INDIRI4
ARGI4
ADDRLP4 2136
ADDRGP4 va
CALLP4
ASGNP4
ADDRFP4 0
INDIRP4
CVPU4 4
ADDRGP4 g_entities
CVPU4 4
SUBU4
CVUI4 4
CNSTI4 832
DIVI4
ARGI4
ADDRLP4 2136
INDIRP4
ARGP4
ADDRGP4 trap_SendServerCommand
CALLV
pop
line 1648
;1648:			return;
ADDRGP4 $692
JUMPV
LABELV $786
line 1651
;1649:		}
;1650:			
;1651:		Com_sprintf ( level.voteString, sizeof(level.voteString ), "%s %s", arg1, arg2 );
ADDRGP4 level+228
ARGP4
CNSTI4 1024
ARGI4
ADDRGP4 $763
ARGP4
ADDRLP4 4
ARGP4
ADDRLP4 1028
ARGP4
ADDRGP4 Com_sprintf
CALLV
pop
line 1652
;1652:		Com_sprintf ( level.voteDisplayString, sizeof(level.voteDisplayString), "kick %s", g_entities[n].client->pers.netname );
ADDRGP4 level+1252
ARGP4
CNSTI4 1024
ARGI4
ADDRGP4 $794
ARGP4
CNSTI4 832
ADDRLP4 2124
INDIRI4
MULI4
ADDRGP4 g_entities+408
ADDP4
INDIRP4
CNSTI4 1428
ADDP4
ARGP4
ADDRGP4 Com_sprintf
CALLV
pop
line 1653
;1653:	}
ADDRGP4 $781
JUMPV
LABELV $780
line 1654
;1654:	else if ( !Q_stricmp ( arg1, "kick" ) )
ADDRLP4 4
ARGP4
ADDRGP4 $729
ARGP4
ADDRLP4 2124
ADDRGP4 Q_stricmp
CALLI4
ASGNI4
ADDRLP4 2124
INDIRI4
CNSTI4 0
NEI4 $796
line 1655
;1655:	{
line 1656
;1656:		int clientid = G_ClientNumberFromName ( arg2 );
ADDRLP4 1028
ARGP4
ADDRLP4 2132
ADDRGP4 G_ClientNumberFromName
CALLI4
ASGNI4
ADDRLP4 2128
ADDRLP4 2132
INDIRI4
ASGNI4
line 1658
;1657:
;1658:		if ( clientid == -1 )
ADDRLP4 2128
INDIRI4
CNSTI4 -1
NEI4 $798
line 1659
;1659:		{
line 1660
;1660:			clientid = G_ClientNumberFromStrippedName(arg2);
ADDRLP4 1028
ARGP4
ADDRLP4 2136
ADDRGP4 G_ClientNumberFromStrippedName
CALLI4
ASGNI4
ADDRLP4 2128
ADDRLP4 2136
INDIRI4
ASGNI4
line 1662
;1661:
;1662:			if (clientid == -1)
ADDRLP4 2128
INDIRI4
CNSTI4 -1
NEI4 $800
line 1663
;1663:			{
line 1664
;1664:				trap_SendServerCommand( ent-g_entities, va("print \"there is no client named '%s' currently on the server.\n\"", arg2 ) );
ADDRGP4 $802
ARGP4
ADDRLP4 1028
ARGP4
ADDRLP4 2140
ADDRGP4 va
CALLP4
ASGNP4
ADDRFP4 0
INDIRP4
CVPU4 4
ADDRGP4 g_entities
CVPU4 4
SUBU4
CVUI4 4
CNSTI4 832
DIVI4
ARGI4
ADDRLP4 2140
INDIRP4
ARGP4
ADDRGP4 trap_SendServerCommand
CALLV
pop
line 1665
;1665:				return;
ADDRGP4 $692
JUMPV
LABELV $800
line 1667
;1666:			}
;1667:		}
LABELV $798
line 1669
;1668:
;1669:		Com_sprintf ( level.voteString, sizeof(level.voteString ), "clientkick %d", clientid );
ADDRGP4 level+228
ARGP4
CNSTI4 1024
ARGI4
ADDRGP4 $805
ARGP4
ADDRLP4 2128
INDIRI4
ARGI4
ADDRGP4 Com_sprintf
CALLV
pop
line 1670
;1670:		Com_sprintf ( level.voteDisplayString, sizeof(level.voteDisplayString), "kick %s", g_entities[clientid].client->pers.netname );
ADDRGP4 level+1252
ARGP4
CNSTI4 1024
ARGI4
ADDRGP4 $794
ARGP4
CNSTI4 832
ADDRLP4 2128
INDIRI4
MULI4
ADDRGP4 g_entities+408
ADDP4
INDIRP4
CNSTI4 1428
ADDP4
ARGP4
ADDRGP4 Com_sprintf
CALLV
pop
line 1671
;1671:	}
ADDRGP4 $797
JUMPV
LABELV $796
line 1672
;1672:	else if ( !Q_stricmp( arg1, "nextmap" ) ) 
ADDRLP4 4
ARGP4
ADDRGP4 $720
ARGP4
ADDRLP4 2128
ADDRGP4 Q_stricmp
CALLI4
ASGNI4
ADDRLP4 2128
INDIRI4
CNSTI4 0
NEI4 $809
line 1673
;1673:	{
line 1676
;1674:		char	s[MAX_STRING_CHARS];
;1675:
;1676:		trap_Cvar_VariableStringBuffer( "nextmap", s, sizeof(s) );
ADDRGP4 $720
ARGP4
ADDRLP4 2132
ARGP4
CNSTI4 1024
ARGI4
ADDRGP4 trap_Cvar_VariableStringBuffer
CALLV
pop
line 1677
;1677:		if (!*s) {
ADDRLP4 2132
INDIRI1
CVII4 1
CNSTI4 0
NEI4 $811
line 1678
;1678:			trap_SendServerCommand( ent-g_entities, "print \"nextmap not set.\n\"" );
ADDRFP4 0
INDIRP4
CVPU4 4
ADDRGP4 g_entities
CVPU4 4
SUBU4
CVUI4 4
CNSTI4 832
DIVI4
ARGI4
ADDRGP4 $813
ARGP4
ADDRGP4 trap_SendServerCommand
CALLV
pop
line 1679
;1679:			return;
ADDRGP4 $692
JUMPV
LABELV $811
line 1681
;1680:		}
;1681:		Com_sprintf( level.voteString, sizeof( level.voteString ), "vstr nextmap");
ADDRGP4 level+228
ARGP4
CNSTI4 1024
ARGI4
ADDRGP4 $816
ARGP4
ADDRGP4 Com_sprintf
CALLV
pop
line 1682
;1682:		Com_sprintf( level.voteDisplayString, sizeof( level.voteDisplayString ), "%s", level.voteString );
ADDRGP4 level+1252
ARGP4
CNSTI4 1024
ARGI4
ADDRGP4 $778
ARGP4
ADDRGP4 level+228
ARGP4
ADDRGP4 Com_sprintf
CALLV
pop
line 1683
;1683:	} 
ADDRGP4 $810
JUMPV
LABELV $809
line 1685
;1684:	else
;1685:	{
line 1686
;1686:		Com_sprintf( level.voteString, sizeof( level.voteString ), "%s \"%s\"", arg1, arg2 );
ADDRGP4 level+228
ARGP4
CNSTI4 1024
ARGI4
ADDRGP4 $822
ARGP4
ADDRLP4 4
ARGP4
ADDRLP4 1028
ARGP4
ADDRGP4 Com_sprintf
CALLV
pop
line 1687
;1687:		Com_sprintf( level.voteDisplayString, sizeof( level.voteDisplayString ), "%s", level.voteString );
ADDRGP4 level+1252
ARGP4
CNSTI4 1024
ARGI4
ADDRGP4 $778
ARGP4
ADDRGP4 level+228
ARGP4
ADDRGP4 Com_sprintf
CALLV
pop
line 1688
;1688:	}
LABELV $810
LABELV $797
LABELV $781
LABELV $765
LABELV $750
line 1690
;1689:
;1690:	trap_SendServerCommand( -1, va("print \"%s %s\n\"", ent->client->pers.netname, G_GetStripEdString("SVINGAME", "PLCALLEDVOTE") ) );
ADDRGP4 $116
ARGP4
ADDRGP4 $827
ARGP4
ADDRLP4 2132
ADDRGP4 G_GetStripEdString
CALLP4
ASGNP4
ADDRGP4 $826
ARGP4
ADDRFP4 0
INDIRP4
CNSTI4 408
ADDP4
INDIRP4
CNSTI4 1428
ADDP4
ARGP4
ADDRLP4 2132
INDIRP4
ARGP4
ADDRLP4 2136
ADDRGP4 va
CALLP4
ASGNP4
CNSTI4 -1
ARGI4
ADDRLP4 2136
INDIRP4
ARGP4
ADDRGP4 trap_SendServerCommand
CALLV
pop
line 1693
;1691:
;1692:	// start the voting, the caller autoamtically votes yes
;1693:	level.voteTime = level.time;
ADDRGP4 level+2276
ADDRGP4 level+32
INDIRI4
ASGNI4
line 1694
;1694:	level.voteYes = 1;
ADDRGP4 level+2284
CNSTI4 1
ASGNI4
line 1695
;1695:	level.voteNo = 0;
ADDRGP4 level+2288
CNSTI4 0
ASGNI4
line 1697
;1696:
;1697:	for ( i = 0 ; i < level.maxclients ; i++ ) {
ADDRLP4 0
CNSTI4 0
ASGNI4
ADDRGP4 $835
JUMPV
LABELV $832
line 1698
;1698:		level.clients[i].ps.eFlags &= ~EF_VOTED;
ADDRLP4 2140
CNSTI4 1812
ADDRLP4 0
INDIRI4
MULI4
ADDRGP4 level
INDIRP4
ADDP4
CNSTI4 108
ADDP4
ASGNP4
ADDRLP4 2140
INDIRP4
ADDRLP4 2140
INDIRP4
INDIRI4
CNSTI4 -16385
BANDI4
ASGNI4
line 1699
;1699:	}
LABELV $833
line 1697
ADDRLP4 0
ADDRLP4 0
INDIRI4
CNSTI4 1
ADDI4
ASGNI4
LABELV $835
ADDRLP4 0
INDIRI4
ADDRGP4 level+24
INDIRI4
LTI4 $832
line 1700
;1700:	ent->client->ps.eFlags |= EF_VOTED;
ADDRLP4 2140
ADDRFP4 0
INDIRP4
CNSTI4 408
ADDP4
INDIRP4
CNSTI4 108
ADDP4
ASGNP4
ADDRLP4 2140
INDIRP4
ADDRLP4 2140
INDIRP4
INDIRI4
CNSTI4 16384
BORI4
ASGNI4
line 1702
;1701:
;1702:	trap_SetConfigstring( CS_VOTE_TIME, va("%i", level.voteTime ) );
ADDRGP4 $837
ARGP4
ADDRGP4 level+2276
INDIRI4
ARGI4
ADDRLP4 2144
ADDRGP4 va
CALLP4
ASGNP4
CNSTI4 8
ARGI4
ADDRLP4 2144
INDIRP4
ARGP4
ADDRGP4 trap_SetConfigstring
CALLV
pop
line 1703
;1703:	trap_SetConfigstring( CS_VOTE_STRING, level.voteDisplayString );	
CNSTI4 9
ARGI4
ADDRGP4 level+1252
ARGP4
ADDRGP4 trap_SetConfigstring
CALLV
pop
line 1704
;1704:	trap_SetConfigstring( CS_VOTE_YES, va("%i", level.voteYes ) );
ADDRGP4 $837
ARGP4
ADDRGP4 level+2284
INDIRI4
ARGI4
ADDRLP4 2148
ADDRGP4 va
CALLP4
ASGNP4
CNSTI4 10
ARGI4
ADDRLP4 2148
INDIRP4
ARGP4
ADDRGP4 trap_SetConfigstring
CALLV
pop
line 1705
;1705:	trap_SetConfigstring( CS_VOTE_NO, va("%i", level.voteNo ) );	
ADDRGP4 $837
ARGP4
ADDRGP4 level+2288
INDIRI4
ARGI4
ADDRLP4 2152
ADDRGP4 va
CALLP4
ASGNP4
CNSTI4 11
ARGI4
ADDRLP4 2152
INDIRP4
ARGP4
ADDRGP4 trap_SetConfigstring
CALLV
pop
line 1706
;1706:}
LABELV $692
endproc Cmd_CallVote_f 3160 24
export Cmd_Vote_f
proc Cmd_Vote_f 84 12
line 1713
;1707:
;1708:/*
;1709:==================
;1710:Cmd_Vote_f
;1711:==================
;1712:*/
;1713:void Cmd_Vote_f( gentity_t *ent ) {
line 1716
;1714:	char		msg[64];
;1715:
;1716:	if ( !level.voteTime ) {
ADDRGP4 level+2276
INDIRI4
CNSTI4 0
NEI4 $843
line 1717
;1717:		trap_SendServerCommand( ent-g_entities, va("print \"%s\n\"", G_GetStripEdString("SVINGAME", "NOVOTEINPROG")) );
ADDRGP4 $116
ARGP4
ADDRGP4 $846
ARGP4
ADDRLP4 64
ADDRGP4 G_GetStripEdString
CALLP4
ASGNP4
ADDRGP4 $115
ARGP4
ADDRLP4 64
INDIRP4
ARGP4
ADDRLP4 68
ADDRGP4 va
CALLP4
ASGNP4
ADDRFP4 0
INDIRP4
CVPU4 4
ADDRGP4 g_entities
CVPU4 4
SUBU4
CVUI4 4
CNSTI4 832
DIVI4
ARGI4
ADDRLP4 68
INDIRP4
ARGP4
ADDRGP4 trap_SendServerCommand
CALLV
pop
line 1718
;1718:		return;
ADDRGP4 $842
JUMPV
LABELV $843
line 1720
;1719:	}
;1720:	if ( ent->client->ps.eFlags & EF_VOTED ) {
ADDRFP4 0
INDIRP4
CNSTI4 408
ADDP4
INDIRP4
CNSTI4 108
ADDP4
INDIRI4
CNSTI4 16384
BANDI4
CNSTI4 0
EQI4 $847
line 1721
;1721:		trap_SendServerCommand( ent-g_entities, va("print \"%s\n\"", G_GetStripEdString("SVINGAME", "VOTEALREADY")) );
ADDRGP4 $116
ARGP4
ADDRGP4 $849
ARGP4
ADDRLP4 64
ADDRGP4 G_GetStripEdString
CALLP4
ASGNP4
ADDRGP4 $115
ARGP4
ADDRLP4 64
INDIRP4
ARGP4
ADDRLP4 68
ADDRGP4 va
CALLP4
ASGNP4
ADDRFP4 0
INDIRP4
CVPU4 4
ADDRGP4 g_entities
CVPU4 4
SUBU4
CVUI4 4
CNSTI4 832
DIVI4
ARGI4
ADDRLP4 68
INDIRP4
ARGP4
ADDRGP4 trap_SendServerCommand
CALLV
pop
line 1722
;1722:		return;
ADDRGP4 $842
JUMPV
LABELV $847
line 1724
;1723:	}
;1724:	if ( ent->client->sess.sessionTeam == TEAM_SPECTATOR ) {
ADDRFP4 0
INDIRP4
CNSTI4 408
ADDP4
INDIRP4
CNSTI4 1536
ADDP4
INDIRI4
CNSTI4 3
NEI4 $850
line 1725
;1725:		trap_SendServerCommand( ent-g_entities, va("print \"%s\n\"", G_GetStripEdString("SVINGAME", "NOVOTEASSPEC")) );
ADDRGP4 $116
ARGP4
ADDRGP4 $852
ARGP4
ADDRLP4 64
ADDRGP4 G_GetStripEdString
CALLP4
ASGNP4
ADDRGP4 $115
ARGP4
ADDRLP4 64
INDIRP4
ARGP4
ADDRLP4 68
ADDRGP4 va
CALLP4
ASGNP4
ADDRFP4 0
INDIRP4
CVPU4 4
ADDRGP4 g_entities
CVPU4 4
SUBU4
CVUI4 4
CNSTI4 832
DIVI4
ARGI4
ADDRLP4 68
INDIRP4
ARGP4
ADDRGP4 trap_SendServerCommand
CALLV
pop
line 1726
;1726:		return;
ADDRGP4 $842
JUMPV
LABELV $850
line 1729
;1727:	}
;1728:
;1729:	trap_SendServerCommand( ent-g_entities, va("print \"%s\n\"", G_GetStripEdString("SVINGAME", "PLVOTECAST")) );
ADDRGP4 $116
ARGP4
ADDRGP4 $853
ARGP4
ADDRLP4 64
ADDRGP4 G_GetStripEdString
CALLP4
ASGNP4
ADDRGP4 $115
ARGP4
ADDRLP4 64
INDIRP4
ARGP4
ADDRLP4 68
ADDRGP4 va
CALLP4
ASGNP4
ADDRFP4 0
INDIRP4
CVPU4 4
ADDRGP4 g_entities
CVPU4 4
SUBU4
CVUI4 4
CNSTI4 832
DIVI4
ARGI4
ADDRLP4 68
INDIRP4
ARGP4
ADDRGP4 trap_SendServerCommand
CALLV
pop
line 1731
;1730:
;1731:	ent->client->ps.eFlags |= EF_VOTED;
ADDRLP4 72
ADDRFP4 0
INDIRP4
CNSTI4 408
ADDP4
INDIRP4
CNSTI4 108
ADDP4
ASGNP4
ADDRLP4 72
INDIRP4
ADDRLP4 72
INDIRP4
INDIRI4
CNSTI4 16384
BORI4
ASGNI4
line 1733
;1732:
;1733:	trap_Argv( 1, msg, sizeof( msg ) );
CNSTI4 1
ARGI4
ADDRLP4 0
ARGP4
CNSTI4 64
ARGI4
ADDRGP4 trap_Argv
CALLV
pop
line 1735
;1734:
;1735:	if ( msg[0] == 'y' || msg[1] == 'Y' || msg[1] == '1' ) {
ADDRLP4 0
INDIRI1
CVII4 1
CNSTI4 121
EQI4 $859
ADDRLP4 0+1
INDIRI1
CVII4 1
CNSTI4 89
EQI4 $859
ADDRLP4 0+1
INDIRI1
CVII4 1
CNSTI4 49
NEI4 $854
LABELV $859
line 1736
;1736:		level.voteYes++;
ADDRLP4 76
ADDRGP4 level+2284
ASGNP4
ADDRLP4 76
INDIRP4
ADDRLP4 76
INDIRP4
INDIRI4
CNSTI4 1
ADDI4
ASGNI4
line 1737
;1737:		trap_SetConfigstring( CS_VOTE_YES, va("%i", level.voteYes ) );
ADDRGP4 $837
ARGP4
ADDRGP4 level+2284
INDIRI4
ARGI4
ADDRLP4 80
ADDRGP4 va
CALLP4
ASGNP4
CNSTI4 10
ARGI4
ADDRLP4 80
INDIRP4
ARGP4
ADDRGP4 trap_SetConfigstring
CALLV
pop
line 1738
;1738:	} else {
ADDRGP4 $855
JUMPV
LABELV $854
line 1739
;1739:		level.voteNo++;
ADDRLP4 76
ADDRGP4 level+2288
ASGNP4
ADDRLP4 76
INDIRP4
ADDRLP4 76
INDIRP4
INDIRI4
CNSTI4 1
ADDI4
ASGNI4
line 1740
;1740:		trap_SetConfigstring( CS_VOTE_NO, va("%i", level.voteNo ) );	
ADDRGP4 $837
ARGP4
ADDRGP4 level+2288
INDIRI4
ARGI4
ADDRLP4 80
ADDRGP4 va
CALLP4
ASGNP4
CNSTI4 11
ARGI4
ADDRLP4 80
INDIRP4
ARGP4
ADDRGP4 trap_SetConfigstring
CALLV
pop
line 1741
;1741:	}
LABELV $855
line 1745
;1742:
;1743:	// a majority will be determined in CheckVote, which will also account
;1744:	// for players entering or leaving
;1745:}
LABELV $842
endproc Cmd_Vote_f 84 12
export Cmd_CallTeamVote_f
proc Cmd_CallTeamVote_f 2180 20
line 1752
;1746:
;1747:/*
;1748:==================
;1749:Cmd_CallTeamVote_f
;1750:==================
;1751:*/
;1752:void Cmd_CallTeamVote_f( gentity_t *ent ) {
line 1757
;1753:	int		i, team, cs_offset;
;1754:	char	arg1[MAX_STRING_TOKENS];
;1755:	char	arg2[MAX_STRING_TOKENS];
;1756:
;1757:	team = ent->client->sess.sessionTeam;
ADDRLP4 1028
ADDRFP4 0
INDIRP4
CNSTI4 408
ADDP4
INDIRP4
CNSTI4 1536
ADDP4
INDIRI4
ASGNI4
line 1758
;1758:	if ( team == TEAM_RED )
ADDRLP4 1028
INDIRI4
CNSTI4 1
NEI4 $865
line 1759
;1759:		cs_offset = 0;
ADDRLP4 1032
CNSTI4 0
ASGNI4
ADDRGP4 $866
JUMPV
LABELV $865
line 1760
;1760:	else if ( team == TEAM_BLUE )
ADDRLP4 1028
INDIRI4
CNSTI4 2
NEI4 $864
line 1761
;1761:		cs_offset = 1;
ADDRLP4 1032
CNSTI4 1
ASGNI4
line 1763
;1762:	else
;1763:		return;
LABELV $868
LABELV $866
line 1765
;1764:
;1765:	if ( !g_allowVote.integer ) {
ADDRGP4 g_allowVote+12
INDIRI4
CNSTI4 0
NEI4 $869
line 1766
;1766:		trap_SendServerCommand( ent-g_entities, va("print \"%s\n\"", G_GetStripEdString("SVINGAME", "NOVOTE")) );
ADDRGP4 $116
ARGP4
ADDRGP4 $696
ARGP4
ADDRLP4 2060
ADDRGP4 G_GetStripEdString
CALLP4
ASGNP4
ADDRGP4 $115
ARGP4
ADDRLP4 2060
INDIRP4
ARGP4
ADDRLP4 2064
ADDRGP4 va
CALLP4
ASGNP4
ADDRFP4 0
INDIRP4
CVPU4 4
ADDRGP4 g_entities
CVPU4 4
SUBU4
CVUI4 4
CNSTI4 832
DIVI4
ARGI4
ADDRLP4 2064
INDIRP4
ARGP4
ADDRGP4 trap_SendServerCommand
CALLV
pop
line 1767
;1767:		return;
ADDRGP4 $864
JUMPV
LABELV $869
line 1770
;1768:	}
;1769:
;1770:	if ( level.teamVoteTime[cs_offset] ) {
ADDRLP4 1032
INDIRI4
CNSTI4 2
LSHI4
ADDRGP4 level+4352
ADDP4
INDIRI4
CNSTI4 0
EQI4 $872
line 1771
;1771:		trap_SendServerCommand( ent-g_entities, va("print \"%s\n\"", G_GetStripEdString("SVINGAME", "TEAMVOTEALREADY")) );
ADDRGP4 $116
ARGP4
ADDRGP4 $875
ARGP4
ADDRLP4 2060
ADDRGP4 G_GetStripEdString
CALLP4
ASGNP4
ADDRGP4 $115
ARGP4
ADDRLP4 2060
INDIRP4
ARGP4
ADDRLP4 2064
ADDRGP4 va
CALLP4
ASGNP4
ADDRFP4 0
INDIRP4
CVPU4 4
ADDRGP4 g_entities
CVPU4 4
SUBU4
CVUI4 4
CNSTI4 832
DIVI4
ARGI4
ADDRLP4 2064
INDIRP4
ARGP4
ADDRGP4 trap_SendServerCommand
CALLV
pop
line 1772
;1772:		return;
ADDRGP4 $864
JUMPV
LABELV $872
line 1774
;1773:	}
;1774:	if ( ent->client->pers.teamVoteCount >= MAX_VOTE_COUNT ) {
ADDRFP4 0
INDIRP4
CNSTI4 408
ADDP4
INDIRP4
CNSTI4 1524
ADDP4
INDIRI4
CNSTI4 3
LTI4 $876
line 1775
;1775:		trap_SendServerCommand( ent-g_entities, va("print \"%s\n\"", G_GetStripEdString("SVINGAME", "MAXTEAMVOTES")) );
ADDRGP4 $116
ARGP4
ADDRGP4 $878
ARGP4
ADDRLP4 2060
ADDRGP4 G_GetStripEdString
CALLP4
ASGNP4
ADDRGP4 $115
ARGP4
ADDRLP4 2060
INDIRP4
ARGP4
ADDRLP4 2064
ADDRGP4 va
CALLP4
ASGNP4
ADDRFP4 0
INDIRP4
CVPU4 4
ADDRGP4 g_entities
CVPU4 4
SUBU4
CVUI4 4
CNSTI4 832
DIVI4
ARGI4
ADDRLP4 2064
INDIRP4
ARGP4
ADDRGP4 trap_SendServerCommand
CALLV
pop
line 1776
;1776:		return;
ADDRGP4 $864
JUMPV
LABELV $876
line 1778
;1777:	}
;1778:	if ( ent->client->sess.sessionTeam == TEAM_SPECTATOR ) {
ADDRFP4 0
INDIRP4
CNSTI4 408
ADDP4
INDIRP4
CNSTI4 1536
ADDP4
INDIRI4
CNSTI4 3
NEI4 $879
line 1779
;1779:		trap_SendServerCommand( ent-g_entities, va("print \"%s\n\"", G_GetStripEdString("SVINGAME", "NOSPECVOTE")) );
ADDRGP4 $116
ARGP4
ADDRGP4 $706
ARGP4
ADDRLP4 2060
ADDRGP4 G_GetStripEdString
CALLP4
ASGNP4
ADDRGP4 $115
ARGP4
ADDRLP4 2060
INDIRP4
ARGP4
ADDRLP4 2064
ADDRGP4 va
CALLP4
ASGNP4
ADDRFP4 0
INDIRP4
CVPU4 4
ADDRGP4 g_entities
CVPU4 4
SUBU4
CVUI4 4
CNSTI4 832
DIVI4
ARGI4
ADDRLP4 2064
INDIRP4
ARGP4
ADDRGP4 trap_SendServerCommand
CALLV
pop
line 1780
;1780:		return;
ADDRGP4 $864
JUMPV
LABELV $879
line 1784
;1781:	}
;1782:
;1783:	// make sure it is a valid command to vote on
;1784:	trap_Argv( 1, arg1, sizeof( arg1 ) );
CNSTI4 1
ARGI4
ADDRLP4 1036
ARGP4
CNSTI4 1024
ARGI4
ADDRGP4 trap_Argv
CALLV
pop
line 1785
;1785:	arg2[0] = '\0';
ADDRLP4 4
CNSTI1 0
ASGNI1
line 1786
;1786:	for ( i = 2; i < trap_Argc(); i++ ) {
ADDRLP4 0
CNSTI4 2
ASGNI4
ADDRGP4 $884
JUMPV
LABELV $881
line 1787
;1787:		if (i > 2)
ADDRLP4 0
INDIRI4
CNSTI4 2
LEI4 $885
line 1788
;1788:			strcat(arg2, " ");
ADDRLP4 4
ARGP4
ADDRGP4 $887
ARGP4
ADDRGP4 strcat
CALLP4
pop
LABELV $885
line 1789
;1789:		trap_Argv( i, &arg2[strlen(arg2)], sizeof( arg2 ) - strlen(arg2) );
ADDRLP4 4
ARGP4
ADDRLP4 2060
ADDRGP4 strlen
CALLI4
ASGNI4
ADDRLP4 4
ARGP4
ADDRLP4 2064
ADDRGP4 strlen
CALLI4
ASGNI4
ADDRLP4 0
INDIRI4
ARGI4
ADDRLP4 2060
INDIRI4
ADDRLP4 4
ADDP4
ARGP4
CNSTU4 1024
ADDRLP4 2064
INDIRI4
CVIU4 4
SUBU4
CVUI4 4
ARGI4
ADDRGP4 trap_Argv
CALLV
pop
line 1790
;1790:	}
LABELV $882
line 1786
ADDRLP4 0
ADDRLP4 0
INDIRI4
CNSTI4 1
ADDI4
ASGNI4
LABELV $884
ADDRLP4 2060
ADDRGP4 trap_Argc
CALLI4
ASGNI4
ADDRLP4 0
INDIRI4
ADDRLP4 2060
INDIRI4
LTI4 $881
line 1798
;1791:
;1792:	//JediDog: removed this for what is below
;1793:/*	if( strchr( arg1, ';' ) || strchr( arg2, ';' ) ) {
;1794:		trap_SendServerCommand( ent-g_entities, "print \"Invalid vote string.\n\"" );
;1795:		return;
;1796:	}
;1797:*/	//JediDog: Added this instead of what is above for callvote bug
;1798:	if( strchr(arg1,';') || strchr(arg2,';') || strchr(arg1,'\n') || strchr(arg2,'\n') || strchr(arg1,'\r') || strchr(arg2,'\r')) {
ADDRLP4 1036
ARGP4
CNSTI4 59
ARGI4
ADDRLP4 2064
ADDRGP4 strchr
CALLP4
ASGNP4
ADDRLP4 2064
INDIRP4
CVPU4 4
CNSTU4 0
NEU4 $894
ADDRLP4 4
ARGP4
CNSTI4 59
ARGI4
ADDRLP4 2068
ADDRGP4 strchr
CALLP4
ASGNP4
ADDRLP4 2068
INDIRP4
CVPU4 4
CNSTU4 0
NEU4 $894
ADDRLP4 1036
ARGP4
CNSTI4 10
ARGI4
ADDRLP4 2072
ADDRGP4 strchr
CALLP4
ASGNP4
ADDRLP4 2072
INDIRP4
CVPU4 4
CNSTU4 0
NEU4 $894
ADDRLP4 4
ARGP4
CNSTI4 10
ARGI4
ADDRLP4 2076
ADDRGP4 strchr
CALLP4
ASGNP4
ADDRLP4 2076
INDIRP4
CVPU4 4
CNSTU4 0
NEU4 $894
ADDRLP4 1036
ARGP4
CNSTI4 13
ARGI4
ADDRLP4 2080
ADDRGP4 strchr
CALLP4
ASGNP4
ADDRLP4 2080
INDIRP4
CVPU4 4
CNSTU4 0
NEU4 $894
ADDRLP4 4
ARGP4
CNSTI4 13
ARGI4
ADDRLP4 2084
ADDRGP4 strchr
CALLP4
ASGNP4
ADDRLP4 2084
INDIRP4
CVPU4 4
CNSTU4 0
EQU4 $888
LABELV $894
line 1799
;1799:		trap_SendServerCommand(ent-g_entities, "print \"Invalid vote string.\n\"" );
ADDRFP4 0
INDIRP4
CVPU4 4
ADDRGP4 g_entities
CVPU4 4
SUBU4
CVUI4 4
CNSTI4 832
DIVI4
ARGI4
ADDRGP4 $714
ARGP4
ADDRGP4 trap_SendServerCommand
CALLV
pop
line 1800
;1800:		return;
ADDRGP4 $864
JUMPV
LABELV $888
line 1804
;1801:	}
;1802:	//End.
;1803:
;1804:	if ( !Q_stricmp( arg1, "leader" ) ) {
ADDRLP4 1036
ARGP4
ADDRGP4 $897
ARGP4
ADDRLP4 2088
ADDRGP4 Q_stricmp
CALLI4
ASGNI4
ADDRLP4 2088
INDIRI4
CNSTI4 0
NEI4 $895
line 1807
;1805:		char netname[MAX_NETNAME], leader[MAX_NETNAME];
;1806:
;1807:		if ( !arg2[0] ) {
ADDRLP4 4
INDIRI1
CVII4 1
CNSTI4 0
NEI4 $898
line 1808
;1808:			i = ent->client->ps.clientNum;
ADDRLP4 0
ADDRFP4 0
INDIRP4
CNSTI4 408
ADDP4
INDIRP4
CNSTI4 144
ADDP4
INDIRI4
ASGNI4
line 1809
;1809:		}
ADDRGP4 $899
JUMPV
LABELV $898
line 1810
;1810:		else {
line 1812
;1811:			// numeric values are just slot numbers
;1812:			for (i = 0; i < 3; i++) {
ADDRLP4 0
CNSTI4 0
ASGNI4
LABELV $900
line 1813
;1813:				if ( !arg2[i] || arg2[i] < '0' || arg2[i] > '9' )
ADDRLP4 2164
ADDRLP4 0
INDIRI4
ADDRLP4 4
ADDP4
INDIRI1
CVII4 1
ASGNI4
ADDRLP4 2164
INDIRI4
CNSTI4 0
EQI4 $907
ADDRLP4 2164
INDIRI4
CNSTI4 48
LTI4 $907
ADDRLP4 2164
INDIRI4
CNSTI4 57
LEI4 $904
LABELV $907
line 1814
;1814:					break;
ADDRGP4 $902
JUMPV
LABELV $904
line 1815
;1815:			}
LABELV $901
line 1812
ADDRLP4 0
ADDRLP4 0
INDIRI4
CNSTI4 1
ADDI4
ASGNI4
ADDRLP4 0
INDIRI4
CNSTI4 3
LTI4 $900
LABELV $902
line 1816
;1816:			if ( i >= 3 || !arg2[i]) {
ADDRLP4 0
INDIRI4
CNSTI4 3
GEI4 $910
ADDRLP4 0
INDIRI4
ADDRLP4 4
ADDP4
INDIRI1
CVII4 1
CNSTI4 0
NEI4 $908
LABELV $910
line 1817
;1817:				i = atoi( arg2 );
ADDRLP4 4
ARGP4
ADDRLP4 2168
ADDRGP4 atoi
CALLI4
ASGNI4
ADDRLP4 0
ADDRLP4 2168
INDIRI4
ASGNI4
line 1818
;1818:				if ( i < 0 || i >= level.maxclients ) {
ADDRLP4 0
INDIRI4
CNSTI4 0
LTI4 $914
ADDRLP4 0
INDIRI4
ADDRGP4 level+24
INDIRI4
LTI4 $911
LABELV $914
line 1819
;1819:					trap_SendServerCommand( ent-g_entities, va("print \"Bad client slot: %i\n\"", i) );
ADDRGP4 $146
ARGP4
ADDRLP4 0
INDIRI4
ARGI4
ADDRLP4 2176
ADDRGP4 va
CALLP4
ASGNP4
ADDRFP4 0
INDIRP4
CVPU4 4
ADDRGP4 g_entities
CVPU4 4
SUBU4
CVUI4 4
CNSTI4 832
DIVI4
ARGI4
ADDRLP4 2176
INDIRP4
ARGP4
ADDRGP4 trap_SendServerCommand
CALLV
pop
line 1820
;1820:					return;
ADDRGP4 $864
JUMPV
LABELV $911
line 1823
;1821:				}
;1822:
;1823:				if ( !g_entities[i].inuse ) {
CNSTI4 832
ADDRLP4 0
INDIRI4
MULI4
ADDRGP4 g_entities+412
ADDP4
INDIRI4
CNSTI4 0
NEI4 $909
line 1824
;1824:					trap_SendServerCommand( ent-g_entities, va("print \"Client %i is not active\n\"", i) );
ADDRGP4 $149
ARGP4
ADDRLP4 0
INDIRI4
ARGI4
ADDRLP4 2176
ADDRGP4 va
CALLP4
ASGNP4
ADDRFP4 0
INDIRP4
CVPU4 4
ADDRGP4 g_entities
CVPU4 4
SUBU4
CVUI4 4
CNSTI4 832
DIVI4
ARGI4
ADDRLP4 2176
INDIRP4
ARGP4
ADDRGP4 trap_SendServerCommand
CALLV
pop
line 1825
;1825:					return;
ADDRGP4 $864
JUMPV
line 1827
;1826:				}
;1827:			}
LABELV $908
line 1828
;1828:			else {
line 1829
;1829:				Q_strncpyz(leader, arg2, sizeof(leader));
ADDRLP4 2128
ARGP4
ADDRLP4 4
ARGP4
CNSTI4 36
ARGI4
ADDRGP4 Q_strncpyz
CALLV
pop
line 1830
;1830:				Q_CleanStr(leader);
ADDRLP4 2128
ARGP4
ADDRGP4 Q_CleanStr
CALLP4
pop
line 1831
;1831:				for ( i = 0 ; i < level.maxclients ; i++ ) {
ADDRLP4 0
CNSTI4 0
ASGNI4
ADDRGP4 $921
JUMPV
LABELV $918
line 1832
;1832:					if ( level.clients[i].pers.connected == CON_DISCONNECTED )
CNSTI4 1812
ADDRLP4 0
INDIRI4
MULI4
ADDRGP4 level
INDIRP4
ADDP4
CNSTI4 1380
ADDP4
INDIRI4
CNSTI4 0
NEI4 $923
line 1833
;1833:						continue;
ADDRGP4 $919
JUMPV
LABELV $923
line 1834
;1834:					if (level.clients[i].sess.sessionTeam != team)
CNSTI4 1812
ADDRLP4 0
INDIRI4
MULI4
ADDRGP4 level
INDIRP4
ADDP4
CNSTI4 1536
ADDP4
INDIRI4
ADDRLP4 1028
INDIRI4
EQI4 $925
line 1835
;1835:						continue;
ADDRGP4 $919
JUMPV
LABELV $925
line 1836
;1836:					Q_strncpyz(netname, level.clients[i].pers.netname, sizeof(netname));
ADDRLP4 2092
ARGP4
CNSTI4 1812
ADDRLP4 0
INDIRI4
MULI4
ADDRGP4 level
INDIRP4
ADDP4
CNSTI4 1428
ADDP4
ARGP4
CNSTI4 36
ARGI4
ADDRGP4 Q_strncpyz
CALLV
pop
line 1837
;1837:					Q_CleanStr(netname);
ADDRLP4 2092
ARGP4
ADDRGP4 Q_CleanStr
CALLP4
pop
line 1838
;1838:					if ( !Q_stricmp(netname, leader) ) {
ADDRLP4 2092
ARGP4
ADDRLP4 2128
ARGP4
ADDRLP4 2168
ADDRGP4 Q_stricmp
CALLI4
ASGNI4
ADDRLP4 2168
INDIRI4
CNSTI4 0
NEI4 $927
line 1839
;1839:						break;
ADDRGP4 $920
JUMPV
LABELV $927
line 1841
;1840:					}
;1841:				}
LABELV $919
line 1831
ADDRLP4 0
ADDRLP4 0
INDIRI4
CNSTI4 1
ADDI4
ASGNI4
LABELV $921
ADDRLP4 0
INDIRI4
ADDRGP4 level+24
INDIRI4
LTI4 $918
LABELV $920
line 1842
;1842:				if ( i >= level.maxclients ) {
ADDRLP4 0
INDIRI4
ADDRGP4 level+24
INDIRI4
LTI4 $929
line 1843
;1843:					trap_SendServerCommand( ent-g_entities, va("print \"%s is not a valid player on your team.\n\"", arg2) );
ADDRGP4 $932
ARGP4
ADDRLP4 4
ARGP4
ADDRLP4 2168
ADDRGP4 va
CALLP4
ASGNP4
ADDRFP4 0
INDIRP4
CVPU4 4
ADDRGP4 g_entities
CVPU4 4
SUBU4
CVUI4 4
CNSTI4 832
DIVI4
ARGI4
ADDRLP4 2168
INDIRP4
ARGP4
ADDRGP4 trap_SendServerCommand
CALLV
pop
line 1844
;1844:					return;
ADDRGP4 $864
JUMPV
LABELV $929
line 1846
;1845:				}
;1846:			}
LABELV $909
line 1847
;1847:		}
LABELV $899
line 1848
;1848:		Com_sprintf(arg2, sizeof(arg2), "%d", i);
ADDRLP4 4
ARGP4
CNSTI4 1024
ARGI4
ADDRGP4 $268
ARGP4
ADDRLP4 0
INDIRI4
ARGI4
ADDRGP4 Com_sprintf
CALLV
pop
line 1849
;1849:	} else {
ADDRGP4 $896
JUMPV
LABELV $895
line 1850
;1850:		trap_SendServerCommand( ent-g_entities, "print \"Invalid vote string.\n\"" );
ADDRFP4 0
INDIRP4
CVPU4 4
ADDRGP4 g_entities
CVPU4 4
SUBU4
CVUI4 4
CNSTI4 832
DIVI4
ARGI4
ADDRGP4 $714
ARGP4
ADDRGP4 trap_SendServerCommand
CALLV
pop
line 1851
;1851:		trap_SendServerCommand( ent-g_entities, "print \"Team vote commands are: leader <player>.\n\"" );
ADDRFP4 0
INDIRP4
CVPU4 4
ADDRGP4 g_entities
CVPU4 4
SUBU4
CVUI4 4
CNSTI4 832
DIVI4
ARGI4
ADDRGP4 $933
ARGP4
ADDRGP4 trap_SendServerCommand
CALLV
pop
line 1852
;1852:		return;
ADDRGP4 $864
JUMPV
LABELV $896
line 1855
;1853:	}
;1854:
;1855:	Com_sprintf( level.teamVoteString[cs_offset], sizeof( level.teamVoteString[cs_offset] ), "%s %s", arg1, arg2 );
ADDRLP4 1032
INDIRI4
CNSTI4 10
LSHI4
ADDRGP4 level+2304
ADDP4
ARGP4
CNSTI4 1024
ARGI4
ADDRGP4 $763
ARGP4
ADDRLP4 1036
ARGP4
ADDRLP4 4
ARGP4
ADDRGP4 Com_sprintf
CALLV
pop
line 1857
;1856:
;1857:	for ( i = 0 ; i < level.maxclients ; i++ ) {
ADDRLP4 0
CNSTI4 0
ASGNI4
ADDRGP4 $939
JUMPV
LABELV $936
line 1858
;1858:		if ( level.clients[i].pers.connected == CON_DISCONNECTED )
CNSTI4 1812
ADDRLP4 0
INDIRI4
MULI4
ADDRGP4 level
INDIRP4
ADDP4
CNSTI4 1380
ADDP4
INDIRI4
CNSTI4 0
NEI4 $941
line 1859
;1859:			continue;
ADDRGP4 $937
JUMPV
LABELV $941
line 1860
;1860:		if (level.clients[i].sess.sessionTeam == team)
CNSTI4 1812
ADDRLP4 0
INDIRI4
MULI4
ADDRGP4 level
INDIRP4
ADDP4
CNSTI4 1536
ADDP4
INDIRI4
ADDRLP4 1028
INDIRI4
NEI4 $943
line 1861
;1861:			trap_SendServerCommand( i, va("print \"%s called a team vote.\n\"", ent->client->pers.netname ) );
ADDRGP4 $945
ARGP4
ADDRFP4 0
INDIRP4
CNSTI4 408
ADDP4
INDIRP4
CNSTI4 1428
ADDP4
ARGP4
ADDRLP4 2092
ADDRGP4 va
CALLP4
ASGNP4
ADDRLP4 0
INDIRI4
ARGI4
ADDRLP4 2092
INDIRP4
ARGP4
ADDRGP4 trap_SendServerCommand
CALLV
pop
LABELV $943
line 1862
;1862:	}
LABELV $937
line 1857
ADDRLP4 0
ADDRLP4 0
INDIRI4
CNSTI4 1
ADDI4
ASGNI4
LABELV $939
ADDRLP4 0
INDIRI4
ADDRGP4 level+24
INDIRI4
LTI4 $936
line 1865
;1863:
;1864:	// start the voting, the caller autoamtically votes yes
;1865:	level.teamVoteTime[cs_offset] = level.time;
ADDRLP4 1032
INDIRI4
CNSTI4 2
LSHI4
ADDRGP4 level+4352
ADDP4
ADDRGP4 level+32
INDIRI4
ASGNI4
line 1866
;1866:	level.teamVoteYes[cs_offset] = 1;
ADDRLP4 1032
INDIRI4
CNSTI4 2
LSHI4
ADDRGP4 level+4360
ADDP4
CNSTI4 1
ASGNI4
line 1867
;1867:	level.teamVoteNo[cs_offset] = 0;
ADDRLP4 1032
INDIRI4
CNSTI4 2
LSHI4
ADDRGP4 level+4368
ADDP4
CNSTI4 0
ASGNI4
line 1869
;1868:
;1869:	for ( i = 0 ; i < level.maxclients ; i++ ) {
ADDRLP4 0
CNSTI4 0
ASGNI4
ADDRGP4 $953
JUMPV
LABELV $950
line 1870
;1870:		if (level.clients[i].sess.sessionTeam == team)
CNSTI4 1812
ADDRLP4 0
INDIRI4
MULI4
ADDRGP4 level
INDIRP4
ADDP4
CNSTI4 1536
ADDP4
INDIRI4
ADDRLP4 1028
INDIRI4
NEI4 $955
line 1871
;1871:			level.clients[i].ps.eFlags &= ~EF_TEAMVOTED;
ADDRLP4 2092
CNSTI4 1812
ADDRLP4 0
INDIRI4
MULI4
ADDRGP4 level
INDIRP4
ADDP4
CNSTI4 108
ADDP4
ASGNP4
ADDRLP4 2092
INDIRP4
ADDRLP4 2092
INDIRP4
INDIRI4
CNSTI4 -524289
BANDI4
ASGNI4
LABELV $955
line 1872
;1872:	}
LABELV $951
line 1869
ADDRLP4 0
ADDRLP4 0
INDIRI4
CNSTI4 1
ADDI4
ASGNI4
LABELV $953
ADDRLP4 0
INDIRI4
ADDRGP4 level+24
INDIRI4
LTI4 $950
line 1873
;1873:	ent->client->ps.eFlags |= EF_TEAMVOTED;
ADDRLP4 2092
ADDRFP4 0
INDIRP4
CNSTI4 408
ADDP4
INDIRP4
CNSTI4 108
ADDP4
ASGNP4
ADDRLP4 2092
INDIRP4
ADDRLP4 2092
INDIRP4
INDIRI4
CNSTI4 524288
BORI4
ASGNI4
line 1875
;1874:
;1875:	trap_SetConfigstring( CS_TEAMVOTE_TIME + cs_offset, va("%i", level.teamVoteTime[cs_offset] ) );
ADDRGP4 $837
ARGP4
ADDRLP4 1032
INDIRI4
CNSTI4 2
LSHI4
ADDRGP4 level+4352
ADDP4
INDIRI4
ARGI4
ADDRLP4 2096
ADDRGP4 va
CALLP4
ASGNP4
ADDRLP4 1032
INDIRI4
CNSTI4 12
ADDI4
ARGI4
ADDRLP4 2096
INDIRP4
ARGP4
ADDRGP4 trap_SetConfigstring
CALLV
pop
line 1876
;1876:	trap_SetConfigstring( CS_TEAMVOTE_STRING + cs_offset, level.teamVoteString[cs_offset] );
ADDRLP4 1032
INDIRI4
CNSTI4 14
ADDI4
ARGI4
ADDRLP4 1032
INDIRI4
CNSTI4 10
LSHI4
ADDRGP4 level+2304
ADDP4
ARGP4
ADDRGP4 trap_SetConfigstring
CALLV
pop
line 1877
;1877:	trap_SetConfigstring( CS_TEAMVOTE_YES + cs_offset, va("%i", level.teamVoteYes[cs_offset] ) );
ADDRGP4 $837
ARGP4
ADDRLP4 1032
INDIRI4
CNSTI4 2
LSHI4
ADDRGP4 level+4360
ADDP4
INDIRI4
ARGI4
ADDRLP4 2104
ADDRGP4 va
CALLP4
ASGNP4
ADDRLP4 1032
INDIRI4
CNSTI4 16
ADDI4
ARGI4
ADDRLP4 2104
INDIRP4
ARGP4
ADDRGP4 trap_SetConfigstring
CALLV
pop
line 1878
;1878:	trap_SetConfigstring( CS_TEAMVOTE_NO + cs_offset, va("%i", level.teamVoteNo[cs_offset] ) );
ADDRGP4 $837
ARGP4
ADDRLP4 1032
INDIRI4
CNSTI4 2
LSHI4
ADDRGP4 level+4368
ADDP4
INDIRI4
ARGI4
ADDRLP4 2108
ADDRGP4 va
CALLP4
ASGNP4
ADDRLP4 1032
INDIRI4
CNSTI4 18
ADDI4
ARGI4
ADDRLP4 2108
INDIRP4
ARGP4
ADDRGP4 trap_SetConfigstring
CALLV
pop
line 1879
;1879:}
LABELV $864
endproc Cmd_CallTeamVote_f 2180 20
export Cmd_TeamVote_f
proc Cmd_TeamVote_f 92 12
line 1886
;1880:
;1881:/*
;1882:==================
;1883:Cmd_TeamVote_f
;1884:==================
;1885:*/
;1886:void Cmd_TeamVote_f( gentity_t *ent ) {
line 1890
;1887:	int			team, cs_offset;
;1888:	char		msg[64];
;1889:
;1890:	team = ent->client->sess.sessionTeam;
ADDRLP4 68
ADDRFP4 0
INDIRP4
CNSTI4 408
ADDP4
INDIRP4
CNSTI4 1536
ADDP4
INDIRI4
ASGNI4
line 1891
;1891:	if ( team == TEAM_RED )
ADDRLP4 68
INDIRI4
CNSTI4 1
NEI4 $962
line 1892
;1892:		cs_offset = 0;
ADDRLP4 64
CNSTI4 0
ASGNI4
ADDRGP4 $963
JUMPV
LABELV $962
line 1893
;1893:	else if ( team == TEAM_BLUE )
ADDRLP4 68
INDIRI4
CNSTI4 2
NEI4 $961
line 1894
;1894:		cs_offset = 1;
ADDRLP4 64
CNSTI4 1
ASGNI4
line 1896
;1895:	else
;1896:		return;
LABELV $965
LABELV $963
line 1898
;1897:
;1898:	if ( !level.teamVoteTime[cs_offset] ) {
ADDRLP4 64
INDIRI4
CNSTI4 2
LSHI4
ADDRGP4 level+4352
ADDP4
INDIRI4
CNSTI4 0
NEI4 $966
line 1899
;1899:		trap_SendServerCommand( ent-g_entities, va("print \"%s\n\"", G_GetStripEdString("SVINGAME", "NOTEAMVOTEINPROG")) );
ADDRGP4 $116
ARGP4
ADDRGP4 $969
ARGP4
ADDRLP4 72
ADDRGP4 G_GetStripEdString
CALLP4
ASGNP4
ADDRGP4 $115
ARGP4
ADDRLP4 72
INDIRP4
ARGP4
ADDRLP4 76
ADDRGP4 va
CALLP4
ASGNP4
ADDRFP4 0
INDIRP4
CVPU4 4
ADDRGP4 g_entities
CVPU4 4
SUBU4
CVUI4 4
CNSTI4 832
DIVI4
ARGI4
ADDRLP4 76
INDIRP4
ARGP4
ADDRGP4 trap_SendServerCommand
CALLV
pop
line 1900
;1900:		return;
ADDRGP4 $961
JUMPV
LABELV $966
line 1902
;1901:	}
;1902:	if ( ent->client->ps.eFlags & EF_TEAMVOTED ) {
ADDRFP4 0
INDIRP4
CNSTI4 408
ADDP4
INDIRP4
CNSTI4 108
ADDP4
INDIRI4
CNSTI4 524288
BANDI4
CNSTI4 0
EQI4 $970
line 1903
;1903:		trap_SendServerCommand( ent-g_entities, va("print \"%s\n\"", G_GetStripEdString("SVINGAME", "TEAMVOTEALREADYCAST")) );
ADDRGP4 $116
ARGP4
ADDRGP4 $972
ARGP4
ADDRLP4 72
ADDRGP4 G_GetStripEdString
CALLP4
ASGNP4
ADDRGP4 $115
ARGP4
ADDRLP4 72
INDIRP4
ARGP4
ADDRLP4 76
ADDRGP4 va
CALLP4
ASGNP4
ADDRFP4 0
INDIRP4
CVPU4 4
ADDRGP4 g_entities
CVPU4 4
SUBU4
CVUI4 4
CNSTI4 832
DIVI4
ARGI4
ADDRLP4 76
INDIRP4
ARGP4
ADDRGP4 trap_SendServerCommand
CALLV
pop
line 1904
;1904:		return;
ADDRGP4 $961
JUMPV
LABELV $970
line 1906
;1905:	}
;1906:	if ( ent->client->sess.sessionTeam == TEAM_SPECTATOR ) {
ADDRFP4 0
INDIRP4
CNSTI4 408
ADDP4
INDIRP4
CNSTI4 1536
ADDP4
INDIRI4
CNSTI4 3
NEI4 $973
line 1907
;1907:		trap_SendServerCommand( ent-g_entities, va("print \"%s\n\"", G_GetStripEdString("SVINGAME", "NOVOTEASSPEC")) );
ADDRGP4 $116
ARGP4
ADDRGP4 $852
ARGP4
ADDRLP4 72
ADDRGP4 G_GetStripEdString
CALLP4
ASGNP4
ADDRGP4 $115
ARGP4
ADDRLP4 72
INDIRP4
ARGP4
ADDRLP4 76
ADDRGP4 va
CALLP4
ASGNP4
ADDRFP4 0
INDIRP4
CVPU4 4
ADDRGP4 g_entities
CVPU4 4
SUBU4
CVUI4 4
CNSTI4 832
DIVI4
ARGI4
ADDRLP4 76
INDIRP4
ARGP4
ADDRGP4 trap_SendServerCommand
CALLV
pop
line 1908
;1908:		return;
ADDRGP4 $961
JUMPV
LABELV $973
line 1911
;1909:	}
;1910:
;1911:	trap_SendServerCommand( ent-g_entities, va("print \"%s\n\"", G_GetStripEdString("SVINGAME", "PLTEAMVOTECAST")) );
ADDRGP4 $116
ARGP4
ADDRGP4 $975
ARGP4
ADDRLP4 72
ADDRGP4 G_GetStripEdString
CALLP4
ASGNP4
ADDRGP4 $115
ARGP4
ADDRLP4 72
INDIRP4
ARGP4
ADDRLP4 76
ADDRGP4 va
CALLP4
ASGNP4
ADDRFP4 0
INDIRP4
CVPU4 4
ADDRGP4 g_entities
CVPU4 4
SUBU4
CVUI4 4
CNSTI4 832
DIVI4
ARGI4
ADDRLP4 76
INDIRP4
ARGP4
ADDRGP4 trap_SendServerCommand
CALLV
pop
line 1913
;1912:
;1913:	ent->client->ps.eFlags |= EF_TEAMVOTED;
ADDRLP4 80
ADDRFP4 0
INDIRP4
CNSTI4 408
ADDP4
INDIRP4
CNSTI4 108
ADDP4
ASGNP4
ADDRLP4 80
INDIRP4
ADDRLP4 80
INDIRP4
INDIRI4
CNSTI4 524288
BORI4
ASGNI4
line 1915
;1914:
;1915:	trap_Argv( 1, msg, sizeof( msg ) );
CNSTI4 1
ARGI4
ADDRLP4 0
ARGP4
CNSTI4 64
ARGI4
ADDRGP4 trap_Argv
CALLV
pop
line 1917
;1916:
;1917:	if ( msg[0] == 'y' || msg[1] == 'Y' || msg[1] == '1' ) {
ADDRLP4 0
INDIRI1
CVII4 1
CNSTI4 121
EQI4 $981
ADDRLP4 0+1
INDIRI1
CVII4 1
CNSTI4 89
EQI4 $981
ADDRLP4 0+1
INDIRI1
CVII4 1
CNSTI4 49
NEI4 $976
LABELV $981
line 1918
;1918:		level.teamVoteYes[cs_offset]++;
ADDRLP4 84
ADDRLP4 64
INDIRI4
CNSTI4 2
LSHI4
ADDRGP4 level+4360
ADDP4
ASGNP4
ADDRLP4 84
INDIRP4
ADDRLP4 84
INDIRP4
INDIRI4
CNSTI4 1
ADDI4
ASGNI4
line 1919
;1919:		trap_SetConfigstring( CS_TEAMVOTE_YES + cs_offset, va("%i", level.teamVoteYes[cs_offset] ) );
ADDRGP4 $837
ARGP4
ADDRLP4 64
INDIRI4
CNSTI4 2
LSHI4
ADDRGP4 level+4360
ADDP4
INDIRI4
ARGI4
ADDRLP4 88
ADDRGP4 va
CALLP4
ASGNP4
ADDRLP4 64
INDIRI4
CNSTI4 16
ADDI4
ARGI4
ADDRLP4 88
INDIRP4
ARGP4
ADDRGP4 trap_SetConfigstring
CALLV
pop
line 1920
;1920:	} else {
ADDRGP4 $977
JUMPV
LABELV $976
line 1921
;1921:		level.teamVoteNo[cs_offset]++;
ADDRLP4 84
ADDRLP4 64
INDIRI4
CNSTI4 2
LSHI4
ADDRGP4 level+4368
ADDP4
ASGNP4
ADDRLP4 84
INDIRP4
ADDRLP4 84
INDIRP4
INDIRI4
CNSTI4 1
ADDI4
ASGNI4
line 1922
;1922:		trap_SetConfigstring( CS_TEAMVOTE_NO + cs_offset, va("%i", level.teamVoteNo[cs_offset] ) );	
ADDRGP4 $837
ARGP4
ADDRLP4 64
INDIRI4
CNSTI4 2
LSHI4
ADDRGP4 level+4368
ADDP4
INDIRI4
ARGI4
ADDRLP4 88
ADDRGP4 va
CALLP4
ASGNP4
ADDRLP4 64
INDIRI4
CNSTI4 18
ADDI4
ARGI4
ADDRLP4 88
INDIRP4
ARGP4
ADDRGP4 trap_SetConfigstring
CALLV
pop
line 1923
;1923:	}
LABELV $977
line 1927
;1924:
;1925:	// a majority will be determined in TeamCheckVote, which will also account
;1926:	// for players entering or leaving
;1927:}
LABELV $961
endproc Cmd_TeamVote_f 92 12
export Cmd_SetViewpos_f
proc Cmd_SetViewpos_f 1064 12
line 1935
;1928:
;1929:
;1930:/*
;1931:=================
;1932:Cmd_SetViewpos_f
;1933:=================
;1934:*/
;1935:void Cmd_SetViewpos_f( gentity_t *ent ) {
line 1940
;1936:	vec3_t		origin, angles;
;1937:	char		buffer[MAX_TOKEN_CHARS];
;1938:	int			i;
;1939:
;1940:	if ( !g_cheats.integer ) {
ADDRGP4 g_cheats+12
INDIRI4
CNSTI4 0
NEI4 $987
line 1941
;1941:		trap_SendServerCommand( ent-g_entities, va("print \"%s\n\"", G_GetStripEdString("SVINGAME", "NOCHEATS")));
ADDRGP4 $116
ARGP4
ADDRGP4 $117
ARGP4
ADDRLP4 1052
ADDRGP4 G_GetStripEdString
CALLP4
ASGNP4
ADDRGP4 $115
ARGP4
ADDRLP4 1052
INDIRP4
ARGP4
ADDRLP4 1056
ADDRGP4 va
CALLP4
ASGNP4
ADDRFP4 0
INDIRP4
CVPU4 4
ADDRGP4 g_entities
CVPU4 4
SUBU4
CVUI4 4
CNSTI4 832
DIVI4
ARGI4
ADDRLP4 1056
INDIRP4
ARGP4
ADDRGP4 trap_SendServerCommand
CALLV
pop
line 1942
;1942:		return;
ADDRGP4 $986
JUMPV
LABELV $987
line 1944
;1943:	}
;1944:	if ( trap_Argc() != 5 ) {
ADDRLP4 1052
ADDRGP4 trap_Argc
CALLI4
ASGNI4
ADDRLP4 1052
INDIRI4
CNSTI4 5
EQI4 $990
line 1945
;1945:		trap_SendServerCommand( ent-g_entities, va("print \"usage: setviewpos x y z yaw\n\""));
ADDRGP4 $992
ARGP4
ADDRLP4 1056
ADDRGP4 va
CALLP4
ASGNP4
ADDRFP4 0
INDIRP4
CVPU4 4
ADDRGP4 g_entities
CVPU4 4
SUBU4
CVUI4 4
CNSTI4 832
DIVI4
ARGI4
ADDRLP4 1056
INDIRP4
ARGP4
ADDRGP4 trap_SendServerCommand
CALLV
pop
line 1946
;1946:		return;
ADDRGP4 $986
JUMPV
LABELV $990
line 1949
;1947:	}
;1948:
;1949:	VectorClear( angles );
ADDRLP4 1056
CNSTF4 0
ASGNF4
ADDRLP4 1040+8
ADDRLP4 1056
INDIRF4
ASGNF4
ADDRLP4 1040+4
ADDRLP4 1056
INDIRF4
ASGNF4
ADDRLP4 1040
ADDRLP4 1056
INDIRF4
ASGNF4
line 1950
;1950:	for ( i = 0 ; i < 3 ; i++ ) {
ADDRLP4 0
CNSTI4 0
ASGNI4
LABELV $995
line 1951
;1951:		trap_Argv( i + 1, buffer, sizeof( buffer ) );
ADDRLP4 0
INDIRI4
CNSTI4 1
ADDI4
ARGI4
ADDRLP4 4
ARGP4
CNSTI4 1024
ARGI4
ADDRGP4 trap_Argv
CALLV
pop
line 1952
;1952:		origin[i] = atof( buffer );
ADDRLP4 4
ARGP4
ADDRLP4 1060
ADDRGP4 atof
CALLF4
ASGNF4
ADDRLP4 0
INDIRI4
CNSTI4 2
LSHI4
ADDRLP4 1028
ADDP4
ADDRLP4 1060
INDIRF4
ASGNF4
line 1953
;1953:	}
LABELV $996
line 1950
ADDRLP4 0
ADDRLP4 0
INDIRI4
CNSTI4 1
ADDI4
ASGNI4
ADDRLP4 0
INDIRI4
CNSTI4 3
LTI4 $995
line 1955
;1954:
;1955:	trap_Argv( 4, buffer, sizeof( buffer ) );
CNSTI4 4
ARGI4
ADDRLP4 4
ARGP4
CNSTI4 1024
ARGI4
ADDRGP4 trap_Argv
CALLV
pop
line 1956
;1956:	angles[YAW] = atof( buffer );
ADDRLP4 4
ARGP4
ADDRLP4 1060
ADDRGP4 atof
CALLF4
ASGNF4
ADDRLP4 1040+4
ADDRLP4 1060
INDIRF4
ASGNF4
line 1958
;1957:
;1958:	TeleportPlayer( ent, origin, angles );
ADDRFP4 0
INDIRP4
ARGP4
ADDRLP4 1028
ARGP4
ADDRLP4 1040
ARGP4
ADDRGP4 TeleportPlayer
CALLV
pop
line 1959
;1959:}
LABELV $986
endproc Cmd_SetViewpos_f 1064 12
export Cmd_Stats_f
proc Cmd_Stats_f 0 0
line 1968
;1960:
;1961:
;1962:
;1963:/*
;1964:=================
;1965:Cmd_Stats_f
;1966:=================
;1967:*/
;1968:void Cmd_Stats_f( gentity_t *ent ) {
line 1983
;1969:/*
;1970:	int max, n, i;
;1971:
;1972:	max = trap_AAS_PointReachabilityAreaIndex( NULL );
;1973:
;1974:	n = 0;
;1975:	for ( i = 0; i < max; i++ ) {
;1976:		if ( ent->client->areabits[i >> 3] & (1 << (i & 7)) )
;1977:			n++;
;1978:	}
;1979:
;1980:	//trap_SendServerCommand( ent-g_entities, va("print \"visited %d of %d areas\n\"", n, max));
;1981:	trap_SendServerCommand( ent-g_entities, va("print \"%d%% level coverage\n\"", n * 100 / max));
;1982:*/
;1983:}
LABELV $1000
endproc Cmd_Stats_f 0 0
export G_ItemUsable
proc G_ItemUsable 1228 28
line 1986
;1984:
;1985:int G_ItemUsable(playerState_t *ps, int forcedUse)
;1986:{
line 1993
;1987:	vec3_t fwd, fwdorg, dest, pos;
;1988:	vec3_t yawonly;
;1989:	vec3_t mins, maxs;
;1990:	vec3_t trtest;
;1991:	trace_t tr;
;1992:
;1993:	if (ps->usingATST)
ADDRFP4 0
INDIRP4
CNSTI4 1316
ADDP4
INDIRI4
CNSTI4 0
EQI4 $1002
line 1994
;1994:	{
line 1995
;1995:		return 0;
CNSTI4 0
RETI4
ADDRGP4 $1001
JUMPV
LABELV $1002
line 1998
;1996:	}
;1997:	
;1998:	if (ps->pm_flags & PMF_USE_ITEM_HELD)
ADDRFP4 0
INDIRP4
CNSTI4 12
ADDP4
INDIRI4
CNSTI4 1024
BANDI4
CNSTI4 0
EQI4 $1004
line 1999
;1999:	{ //force to let go first
line 2000
;2000:		return 0;
CNSTI4 0
RETI4
ADDRGP4 $1001
JUMPV
LABELV $1004
line 2003
;2001:	}
;2002:
;2003:	if (!forcedUse)
ADDRFP4 4
INDIRI4
CNSTI4 0
NEI4 $1006
line 2004
;2004:	{
line 2005
;2005:		forcedUse = bg_itemlist[ps->stats[STAT_HOLDABLE_ITEM]].giTag;
ADDRFP4 4
CNSTI4 52
ADDRFP4 0
INDIRP4
CNSTI4 220
ADDP4
INDIRI4
MULI4
ADDRGP4 bg_itemlist+40
ADDP4
INDIRI4
ASGNI4
line 2006
;2006:	}
LABELV $1006
line 2008
;2007:
;2008:	switch (forcedUse)
ADDRLP4 1176
ADDRFP4 4
INDIRI4
ASGNI4
ADDRLP4 1176
INDIRI4
CNSTI4 1
LTI4 $1009
ADDRLP4 1176
INDIRI4
CNSTI4 6
GTI4 $1009
ADDRLP4 1176
INDIRI4
CNSTI4 2
LSHI4
ADDRGP4 $1068-4
ADDP4
INDIRP4
JUMPV
lit
align 4
LABELV $1068
address $1016
address $1046
address $1011
address $1009
address $1009
address $1019
code
line 2009
;2009:	{
LABELV $1011
line 2011
;2010:	case HI_MEDPAC:
;2011:		if (ps->stats[STAT_HEALTH] >= ps->stats[STAT_MAX_HEALTH])
ADDRLP4 1180
ADDRFP4 0
INDIRP4
ASGNP4
ADDRLP4 1180
INDIRP4
CNSTI4 216
ADDP4
INDIRI4
ADDRLP4 1180
INDIRP4
CNSTI4 248
ADDP4
INDIRI4
LTI4 $1012
line 2012
;2012:		{
line 2013
;2013:			return 0;
CNSTI4 0
RETI4
ADDRGP4 $1001
JUMPV
LABELV $1012
line 2016
;2014:		}
;2015:
;2016:		if (ps->stats[STAT_HEALTH] <= 0)
ADDRFP4 0
INDIRP4
CNSTI4 216
ADDP4
INDIRI4
CNSTI4 0
GTI4 $1014
line 2017
;2017:		{
line 2018
;2018:			return 0;
CNSTI4 0
RETI4
ADDRGP4 $1001
JUMPV
LABELV $1014
line 2021
;2019:		}
;2020:
;2021:		return 1;
CNSTI4 1
RETI4
ADDRGP4 $1001
JUMPV
LABELV $1016
line 2023
;2022:	case HI_SEEKER:
;2023:		if (ps->eFlags & EF_SEEKERDRONE)
ADDRFP4 0
INDIRP4
CNSTI4 108
ADDP4
INDIRI4
CNSTI4 1048576
BANDI4
CNSTI4 0
EQI4 $1017
line 2024
;2024:		{
line 2025
;2025:			G_AddEvent(&g_entities[ps->clientNum], EV_ITEMUSEFAIL, SEEKER_ALREADYDEPLOYED);
CNSTI4 832
ADDRFP4 0
INDIRP4
CNSTI4 144
ADDP4
INDIRI4
MULI4
ADDRGP4 g_entities
ADDP4
ARGP4
CNSTI4 56
ARGI4
CNSTI4 4
ARGI4
ADDRGP4 G_AddEvent
CALLV
pop
line 2026
;2026:			return 0;
CNSTI4 0
RETI4
ADDRGP4 $1001
JUMPV
LABELV $1017
line 2029
;2027:		}
;2028:
;2029:		return 1;
CNSTI4 1
RETI4
ADDRGP4 $1001
JUMPV
LABELV $1019
line 2031
;2030:	case HI_SENTRY_GUN:
;2031:		if (ps->fd.sentryDeployed)
ADDRFP4 0
INDIRP4
CNSTI4 1224
ADDP4
INDIRI4
CNSTI4 0
EQI4 $1020
line 2032
;2032:		{
line 2033
;2033:			G_AddEvent(&g_entities[ps->clientNum], EV_ITEMUSEFAIL, SENTRY_ALREADYPLACED);
CNSTI4 832
ADDRFP4 0
INDIRP4
CNSTI4 144
ADDP4
INDIRI4
MULI4
ADDRGP4 g_entities
ADDP4
ARGP4
CNSTI4 56
ARGI4
CNSTI4 2
ARGI4
ADDRGP4 G_AddEvent
CALLV
pop
line 2034
;2034:			return 0;
CNSTI4 0
RETI4
ADDRGP4 $1001
JUMPV
LABELV $1020
line 2037
;2035:		}
;2036:
;2037:		yawonly[ROLL] = 0;
ADDRLP4 1140+8
CNSTF4 0
ASGNF4
line 2038
;2038:		yawonly[PITCH] = 0;
ADDRLP4 1140
CNSTF4 0
ASGNF4
line 2039
;2039:		yawonly[YAW] = ps->viewangles[YAW];
ADDRLP4 1140+4
ADDRFP4 0
INDIRP4
CNSTI4 160
ADDP4
INDIRF4
ASGNF4
line 2041
;2040:
;2041:		VectorSet( mins, -8, -8, 0 );
ADDRLP4 1184
CNSTF4 3238002688
ASGNF4
ADDRLP4 1092
ADDRLP4 1184
INDIRF4
ASGNF4
ADDRLP4 1092+4
ADDRLP4 1184
INDIRF4
ASGNF4
ADDRLP4 1092+8
CNSTF4 0
ASGNF4
line 2042
;2042:		VectorSet( maxs, 8, 8, 24 );
ADDRLP4 1188
CNSTF4 1090519040
ASGNF4
ADDRLP4 1104
ADDRLP4 1188
INDIRF4
ASGNF4
ADDRLP4 1104+4
ADDRLP4 1188
INDIRF4
ASGNF4
ADDRLP4 1104+8
CNSTF4 1103101952
ASGNF4
line 2044
;2043:
;2044:		AngleVectors(yawonly, fwd, NULL, NULL);
ADDRLP4 1140
ARGP4
ADDRLP4 0
ARGP4
ADDRLP4 1192
CNSTP4 0
ASGNP4
ADDRLP4 1192
INDIRP4
ARGP4
ADDRLP4 1192
INDIRP4
ARGP4
ADDRGP4 AngleVectors
CALLV
pop
line 2046
;2045:
;2046:		fwdorg[0] = ps->origin[0] + fwd[0]*64;
ADDRLP4 1116
ADDRFP4 0
INDIRP4
CNSTI4 20
ADDP4
INDIRF4
CNSTF4 1115684864
ADDRLP4 0
INDIRF4
MULF4
ADDF4
ASGNF4
line 2047
;2047:		fwdorg[1] = ps->origin[1] + fwd[1]*64;
ADDRLP4 1116+4
ADDRFP4 0
INDIRP4
CNSTI4 24
ADDP4
INDIRF4
CNSTF4 1115684864
ADDRLP4 0+4
INDIRF4
MULF4
ADDF4
ASGNF4
line 2048
;2048:		fwdorg[2] = ps->origin[2] + fwd[2]*64;
ADDRLP4 1116+8
ADDRFP4 0
INDIRP4
CNSTI4 28
ADDP4
INDIRF4
CNSTF4 1115684864
ADDRLP4 0+8
INDIRF4
MULF4
ADDF4
ASGNF4
line 2050
;2049:
;2050:		trtest[0] = fwdorg[0] + fwd[0]*16;
ADDRLP4 1152
ADDRLP4 1116
INDIRF4
CNSTF4 1098907648
ADDRLP4 0
INDIRF4
MULF4
ADDF4
ASGNF4
line 2051
;2051:		trtest[1] = fwdorg[1] + fwd[1]*16;
ADDRLP4 1152+4
ADDRLP4 1116+4
INDIRF4
CNSTF4 1098907648
ADDRLP4 0+4
INDIRF4
MULF4
ADDF4
ASGNF4
line 2052
;2052:		trtest[2] = fwdorg[2] + fwd[2]*16;
ADDRLP4 1152+8
ADDRLP4 1116+8
INDIRF4
CNSTF4 1098907648
ADDRLP4 0+8
INDIRF4
MULF4
ADDF4
ASGNF4
line 2054
;2053:
;2054:		trap_Trace(&tr, ps->origin, mins, maxs, trtest, ps->clientNum, MASK_PLAYERSOLID);
ADDRLP4 12
ARGP4
ADDRLP4 1196
ADDRFP4 0
INDIRP4
ASGNP4
ADDRLP4 1196
INDIRP4
CNSTI4 20
ADDP4
ARGP4
ADDRLP4 1092
ARGP4
ADDRLP4 1104
ARGP4
ADDRLP4 1152
ARGP4
ADDRLP4 1196
INDIRP4
CNSTI4 144
ADDP4
INDIRI4
ARGI4
CNSTI4 273
ARGI4
ADDRGP4 trap_Trace
CALLV
pop
line 2056
;2055:
;2056:		if ((tr.fraction != 1 && tr.entityNum != ps->clientNum) || tr.startsolid || tr.allsolid)
ADDRLP4 12+8
INDIRF4
CNSTF4 1065353216
EQF4 $1044
ADDRLP4 12+52
INDIRI4
ADDRFP4 0
INDIRP4
CNSTI4 144
ADDP4
INDIRI4
NEI4 $1045
LABELV $1044
ADDRLP4 1200
CNSTI4 0
ASGNI4
ADDRLP4 12+4
INDIRI4
ADDRLP4 1200
INDIRI4
NEI4 $1045
ADDRLP4 12
INDIRI4
ADDRLP4 1200
INDIRI4
EQI4 $1038
LABELV $1045
line 2057
;2057:		{
line 2058
;2058:			G_AddEvent(&g_entities[ps->clientNum], EV_ITEMUSEFAIL, SENTRY_NOROOM);
CNSTI4 832
ADDRFP4 0
INDIRP4
CNSTI4 144
ADDP4
INDIRI4
MULI4
ADDRGP4 g_entities
ADDP4
ARGP4
CNSTI4 56
ARGI4
CNSTI4 1
ARGI4
ADDRGP4 G_AddEvent
CALLV
pop
line 2059
;2059:			return 0;
CNSTI4 0
RETI4
ADDRGP4 $1001
JUMPV
LABELV $1038
line 2062
;2060:		}
;2061:
;2062:		return 1;
CNSTI4 1
RETI4
ADDRGP4 $1001
JUMPV
LABELV $1046
line 2064
;2063:	case HI_SHIELD:
;2064:		mins[0] = -8;
ADDRLP4 1092
CNSTF4 3238002688
ASGNF4
line 2065
;2065:		mins[1] = -8;
ADDRLP4 1092+4
CNSTF4 3238002688
ASGNF4
line 2066
;2066:		mins[2] = 0;
ADDRLP4 1092+8
CNSTF4 0
ASGNF4
line 2068
;2067:
;2068:		maxs[0] = 8;
ADDRLP4 1104
CNSTF4 1090519040
ASGNF4
line 2069
;2069:		maxs[1] = 8;
ADDRLP4 1104+4
CNSTF4 1090519040
ASGNF4
line 2070
;2070:		maxs[2] = 8;
ADDRLP4 1104+8
CNSTF4 1090519040
ASGNF4
line 2072
;2071:
;2072:		AngleVectors (ps->viewangles, fwd, NULL, NULL);
ADDRFP4 0
INDIRP4
CNSTI4 156
ADDP4
ARGP4
ADDRLP4 0
ARGP4
ADDRLP4 1204
CNSTP4 0
ASGNP4
ADDRLP4 1204
INDIRP4
ARGP4
ADDRLP4 1204
INDIRP4
ARGP4
ADDRGP4 AngleVectors
CALLV
pop
line 2073
;2073:		fwd[2] = 0;
ADDRLP4 0+8
CNSTF4 0
ASGNF4
line 2074
;2074:		VectorMA(ps->origin, 64, fwd, dest);
ADDRLP4 1208
ADDRFP4 0
INDIRP4
ASGNP4
ADDRLP4 1212
CNSTF4 1115684864
ASGNF4
ADDRLP4 1128
ADDRLP4 1208
INDIRP4
CNSTI4 20
ADDP4
INDIRF4
ADDRLP4 1212
INDIRF4
ADDRLP4 0
INDIRF4
MULF4
ADDF4
ASGNF4
ADDRLP4 1128+4
ADDRLP4 1208
INDIRP4
CNSTI4 24
ADDP4
INDIRF4
ADDRLP4 1212
INDIRF4
ADDRLP4 0+4
INDIRF4
MULF4
ADDF4
ASGNF4
ADDRLP4 1128+8
ADDRFP4 0
INDIRP4
CNSTI4 28
ADDP4
INDIRF4
CNSTF4 1115684864
ADDRLP4 0+8
INDIRF4
MULF4
ADDF4
ASGNF4
line 2075
;2075:		trap_Trace(&tr, ps->origin, mins, maxs, dest, ps->clientNum, MASK_SHOT );
ADDRLP4 12
ARGP4
ADDRLP4 1216
ADDRFP4 0
INDIRP4
ASGNP4
ADDRLP4 1216
INDIRP4
CNSTI4 20
ADDP4
ARGP4
ADDRLP4 1092
ARGP4
ADDRLP4 1104
ARGP4
ADDRLP4 1128
ARGP4
ADDRLP4 1216
INDIRP4
CNSTI4 144
ADDP4
INDIRI4
ARGI4
CNSTI4 769
ARGI4
ADDRGP4 trap_Trace
CALLV
pop
line 2076
;2076:		if (tr.fraction > 0.9 && !tr.startsolid && !tr.allsolid)
ADDRLP4 12+8
INDIRF4
CNSTF4 1063675494
LEF4 $1056
ADDRLP4 1220
CNSTI4 0
ASGNI4
ADDRLP4 12+4
INDIRI4
ADDRLP4 1220
INDIRI4
NEI4 $1056
ADDRLP4 12
INDIRI4
ADDRLP4 1220
INDIRI4
NEI4 $1056
line 2077
;2077:		{
line 2078
;2078:			VectorCopy(tr.endpos, pos);
ADDRLP4 1164
ADDRLP4 12+12
INDIRB
ASGNB 12
line 2079
;2079:			VectorSet( dest, pos[0], pos[1], pos[2] - 4096 );
ADDRLP4 1128
ADDRLP4 1164
INDIRF4
ASGNF4
ADDRLP4 1128+4
ADDRLP4 1164+4
INDIRF4
ASGNF4
ADDRLP4 1128+8
ADDRLP4 1164+8
INDIRF4
CNSTF4 1166016512
SUBF4
ASGNF4
line 2080
;2080:			trap_Trace( &tr, pos, mins, maxs, dest, ps->clientNum, MASK_SOLID );
ADDRLP4 12
ARGP4
ADDRLP4 1164
ARGP4
ADDRLP4 1092
ARGP4
ADDRLP4 1104
ARGP4
ADDRLP4 1128
ARGP4
ADDRFP4 0
INDIRP4
CNSTI4 144
ADDP4
INDIRI4
ARGI4
CNSTI4 1
ARGI4
ADDRGP4 trap_Trace
CALLV
pop
line 2081
;2081:			if ( !tr.startsolid && !tr.allsolid )
ADDRLP4 1224
CNSTI4 0
ASGNI4
ADDRLP4 12+4
INDIRI4
ADDRLP4 1224
INDIRI4
NEI4 $1065
ADDRLP4 12
INDIRI4
ADDRLP4 1224
INDIRI4
NEI4 $1065
line 2082
;2082:			{
line 2083
;2083:				return 1;
CNSTI4 1
RETI4
ADDRGP4 $1001
JUMPV
LABELV $1065
line 2085
;2084:			}
;2085:		}
LABELV $1056
line 2086
;2086:		G_AddEvent(&g_entities[ps->clientNum], EV_ITEMUSEFAIL, SHIELD_NOROOM);
CNSTI4 832
ADDRFP4 0
INDIRP4
CNSTI4 144
ADDP4
INDIRI4
MULI4
ADDRGP4 g_entities
ADDP4
ARGP4
CNSTI4 56
ARGI4
CNSTI4 3
ARGI4
ADDRGP4 G_AddEvent
CALLV
pop
line 2087
;2087:		return 0;
CNSTI4 0
RETI4
ADDRGP4 $1001
JUMPV
LABELV $1009
line 2089
;2088:	default:
;2089:		return 1;
CNSTI4 1
RETI4
LABELV $1001
endproc G_ItemUsable 1228 28
export Cmd_ToggleSaber_f
proc Cmd_ToggleSaber_f 12 12
line 2097
;2090:	}
;2091:}
;2092:
;2093:extern int saberOffSound;
;2094:extern int saberOnSound;
;2095:
;2096:void Cmd_ToggleSaber_f(gentity_t *ent)
;2097:{
line 2098
;2098:	if (!saberOffSound || !saberOnSound)
ADDRLP4 0
CNSTI4 0
ASGNI4
ADDRGP4 saberOffSound
INDIRI4
ADDRLP4 0
INDIRI4
EQI4 $1073
ADDRGP4 saberOnSound
INDIRI4
ADDRLP4 0
INDIRI4
NEI4 $1071
LABELV $1073
line 2099
;2099:	{
line 2100
;2100:		saberOffSound = G_SoundIndex("sound/weapons/saber/saberoffquick.wav");
ADDRGP4 $1074
ARGP4
ADDRLP4 4
ADDRGP4 G_SoundIndex
CALLI4
ASGNI4
ADDRGP4 saberOffSound
ADDRLP4 4
INDIRI4
ASGNI4
line 2101
;2101:		saberOnSound = G_SoundIndex("sound/weapons/saber/saberon.wav");
ADDRGP4 $1075
ARGP4
ADDRLP4 8
ADDRGP4 G_SoundIndex
CALLI4
ASGNI4
ADDRGP4 saberOnSound
ADDRLP4 8
INDIRI4
ASGNI4
line 2102
;2102:	}
LABELV $1071
line 2104
;2103:
;2104:	if (ent->client->ps.saberInFlight)
ADDRFP4 0
INDIRP4
CNSTI4 408
ADDP4
INDIRP4
CNSTI4 504
ADDP4
INDIRI4
CNSTI4 0
EQI4 $1076
line 2105
;2105:	{
line 2106
;2106:		return;
ADDRGP4 $1070
JUMPV
LABELV $1076
line 2109
;2107:	}
;2108:
;2109:	if (ent->client->ps.forceHandExtend != HANDEXTEND_NONE)
ADDRFP4 0
INDIRP4
CNSTI4 408
ADDP4
INDIRP4
CNSTI4 1248
ADDP4
INDIRI4
CNSTI4 0
EQI4 $1078
line 2110
;2110:	{
line 2111
;2111:		return;
ADDRGP4 $1070
JUMPV
LABELV $1078
line 2114
;2112:	}
;2113:
;2114:	if (ent->client->ps.weapon != WP_SABER)
ADDRFP4 0
INDIRP4
CNSTI4 408
ADDP4
INDIRP4
CNSTI4 148
ADDP4
INDIRI4
CNSTI4 2
EQI4 $1080
line 2115
;2115:	{
line 2116
;2116:		return;
ADDRGP4 $1070
JUMPV
LABELV $1080
line 2124
;2117:	}
;2118:
;2119://	if (ent->client->ps.duelInProgress && !ent->client->ps.saberHolstered)
;2120://	{
;2121://		return;
;2122://	}
;2123:
;2124:	if (ent->client->ps.duelTime >= level.time)
ADDRFP4 0
INDIRP4
CNSTI4 408
ADDP4
INDIRP4
CNSTI4 1300
ADDP4
INDIRI4
ADDRGP4 level+32
INDIRI4
LTI4 $1082
line 2125
;2125:	{
line 2126
;2126:		return;
ADDRGP4 $1070
JUMPV
LABELV $1082
line 2129
;2127:	}
;2128:
;2129:	if (ent->client->ps.saberLockTime >= level.time)
ADDRFP4 0
INDIRP4
CNSTI4 408
ADDP4
INDIRP4
CNSTI4 524
ADDP4
INDIRI4
ADDRGP4 level+32
INDIRI4
LTI4 $1085
line 2130
;2130:	{
line 2131
;2131:		return;
ADDRGP4 $1070
JUMPV
LABELV $1085
line 2134
;2132:	}
;2133:
;2134:	if (ent->client && ent->client->ps.weaponTime < 1)
ADDRLP4 4
ADDRFP4 0
INDIRP4
CNSTI4 408
ADDP4
INDIRP4
ASGNP4
ADDRLP4 4
INDIRP4
CVPU4 4
CNSTU4 0
EQU4 $1088
ADDRLP4 4
INDIRP4
CNSTI4 44
ADDP4
INDIRI4
CNSTI4 1
GEI4 $1088
line 2135
;2135:	{
line 2136
;2136:		if (ent->client->ps.saberHolstered)
ADDRFP4 0
INDIRP4
CNSTI4 408
ADDP4
INDIRP4
CNSTI4 1312
ADDP4
INDIRI4
CNSTI4 0
EQI4 $1090
line 2137
;2137:		{
line 2138
;2138:			ent->client->ps.saberHolstered = qfalse;
ADDRFP4 0
INDIRP4
CNSTI4 408
ADDP4
INDIRP4
CNSTI4 1312
ADDP4
CNSTI4 0
ASGNI4
line 2139
;2139:			G_Sound(ent, CHAN_AUTO, saberOnSound);
ADDRFP4 0
INDIRP4
ARGP4
CNSTI4 0
ARGI4
ADDRGP4 saberOnSound
INDIRI4
ARGI4
ADDRGP4 G_Sound
CALLV
pop
line 2140
;2140:		}
ADDRGP4 $1091
JUMPV
LABELV $1090
line 2142
;2141:		else
;2142:		{
line 2143
;2143:			ent->client->ps.saberHolstered = qtrue;
ADDRFP4 0
INDIRP4
CNSTI4 408
ADDP4
INDIRP4
CNSTI4 1312
ADDP4
CNSTI4 1
ASGNI4
line 2144
;2144:			G_Sound(ent, CHAN_AUTO, saberOffSound);
ADDRFP4 0
INDIRP4
ARGP4
CNSTI4 0
ARGI4
ADDRGP4 saberOffSound
INDIRI4
ARGI4
ADDRGP4 G_Sound
CALLV
pop
line 2147
;2145:
;2146:			//prevent anything from being done for 400ms after holster
;2147:			ent->client->ps.weaponTime = 400;
ADDRFP4 0
INDIRP4
CNSTI4 408
ADDP4
INDIRP4
CNSTI4 44
ADDP4
CNSTI4 400
ASGNI4
line 2148
;2148:		}
LABELV $1091
line 2149
;2149:	}
LABELV $1088
line 2150
;2150:}
LABELV $1070
endproc Cmd_ToggleSaber_f 12 12
export Cmd_SaberAttackCycle_f
proc Cmd_SaberAttackCycle_f 12 0
line 2153
;2151:
;2152:void Cmd_SaberAttackCycle_f(gentity_t *ent)
;2153:{
line 2154
;2154:	int selectLevel = 0;
ADDRLP4 0
CNSTI4 0
ASGNI4
line 2156
;2155:
;2156:	if ( !ent || !ent->client )
ADDRLP4 4
ADDRFP4 0
INDIRP4
ASGNP4
ADDRLP4 8
CNSTU4 0
ASGNU4
ADDRLP4 4
INDIRP4
CVPU4 4
ADDRLP4 8
INDIRU4
EQU4 $1095
ADDRLP4 4
INDIRP4
CNSTI4 408
ADDP4
INDIRP4
CVPU4 4
ADDRLP4 8
INDIRU4
NEU4 $1093
LABELV $1095
line 2157
;2157:	{
line 2158
;2158:		return;
ADDRGP4 $1092
JUMPV
LABELV $1093
line 2167
;2159:	}
;2160:	/*
;2161:	if (ent->client->ps.weaponTime > 0)
;2162:	{ //no switching attack level when busy
;2163:		return;
;2164:	}
;2165:	*/
;2166:
;2167:	if (ent->client->saberCycleQueue)
ADDRFP4 0
INDIRP4
CNSTI4 408
ADDP4
INDIRP4
CNSTI4 1584
ADDP4
INDIRI4
CNSTI4 0
EQI4 $1096
line 2168
;2168:	{ //resume off of the queue if we haven't gotten a chance to update it yet
line 2169
;2169:		selectLevel = ent->client->saberCycleQueue;
ADDRLP4 0
ADDRFP4 0
INDIRP4
CNSTI4 408
ADDP4
INDIRP4
CNSTI4 1584
ADDP4
INDIRI4
ASGNI4
line 2170
;2170:	}
ADDRGP4 $1097
JUMPV
LABELV $1096
line 2172
;2171:	else
;2172:	{
line 2173
;2173:		selectLevel = ent->client->ps.fd.saberAnimLevel;
ADDRLP4 0
ADDRFP4 0
INDIRP4
CNSTI4 408
ADDP4
INDIRP4
CNSTI4 1228
ADDP4
INDIRI4
ASGNI4
line 2174
;2174:	}
LABELV $1097
line 2176
;2175:
;2176:	selectLevel++;
ADDRLP4 0
ADDRLP4 0
INDIRI4
CNSTI4 1
ADDI4
ASGNI4
line 2177
;2177:	if ( selectLevel > ent->client->ps.fd.forcePowerLevel[FP_SABERATTACK] )
ADDRLP4 0
INDIRI4
ADDRFP4 0
INDIRP4
CNSTI4 408
ADDP4
INDIRP4
CNSTI4 1004
ADDP4
INDIRI4
LEI4 $1098
line 2178
;2178:	{
line 2179
;2179:		selectLevel = FORCE_LEVEL_1;
ADDRLP4 0
CNSTI4 1
ASGNI4
line 2180
;2180:	}
LABELV $1098
line 2197
;2181:/*
;2182:#ifndef FINAL_BUILD
;2183:	switch ( selectLevel )
;2184:	{
;2185:	case FORCE_LEVEL_1:
;2186:		trap_SendServerCommand( ent-g_entities, va("print \"Lightsaber Combat Style: %sfast\n\"", S_COLOR_BLUE) );
;2187:		break;
;2188:	case FORCE_LEVEL_2:
;2189:		trap_SendServerCommand( ent-g_entities, va("print \"Lightsaber Combat Style: %smedium\n\"", S_COLOR_YELLOW) );
;2190:		break;
;2191:	case FORCE_LEVEL_3:
;2192:		trap_SendServerCommand( ent-g_entities, va("print \"Lightsaber Combat Style: %sstrong\n\"", S_COLOR_RED) );
;2193:		break;
;2194:	}
;2195:#endif
;2196:*/
;2197:	if (ent->client->ps.weaponTime <= 0)
ADDRFP4 0
INDIRP4
CNSTI4 408
ADDP4
INDIRP4
CNSTI4 44
ADDP4
INDIRI4
CNSTI4 0
GTI4 $1100
line 2198
;2198:	{ //not busy, set it now
line 2199
;2199:		ent->client->ps.fd.saberAnimLevel = selectLevel;
ADDRFP4 0
INDIRP4
CNSTI4 408
ADDP4
INDIRP4
CNSTI4 1228
ADDP4
ADDRLP4 0
INDIRI4
ASGNI4
line 2200
;2200:	}
ADDRGP4 $1101
JUMPV
LABELV $1100
line 2202
;2201:	else
;2202:	{ //can't set it now or we might cause unexpected chaining, so queue it
line 2203
;2203:		ent->client->saberCycleQueue = selectLevel;
ADDRFP4 0
INDIRP4
CNSTI4 408
ADDP4
INDIRP4
CNSTI4 1584
ADDP4
ADDRLP4 0
INDIRI4
ASGNI4
line 2204
;2204:	}
LABELV $1101
line 2205
;2205:}
LABELV $1092
endproc Cmd_SaberAttackCycle_f 12 0
export G_OtherPlayersDueling
proc G_OtherPlayersDueling 24 0
line 2208
;2206:
;2207:qboolean G_OtherPlayersDueling(void)
;2208:{
line 2209
;2209:	int i = 0;
ADDRLP4 4
CNSTI4 0
ASGNI4
ADDRGP4 $1104
JUMPV
LABELV $1103
line 2213
;2210:	gentity_t *ent;
;2211:
;2212:	while (i < MAX_CLIENTS)
;2213:	{
line 2214
;2214:		ent = &g_entities[i];
ADDRLP4 0
CNSTI4 832
ADDRLP4 4
INDIRI4
MULI4
ADDRGP4 g_entities
ADDP4
ASGNP4
line 2216
;2215:
;2216:		if (ent && ent->inuse && ent->client && ent->client->ps.duelInProgress)
ADDRLP4 12
CNSTU4 0
ASGNU4
ADDRLP4 0
INDIRP4
CVPU4 4
ADDRLP4 12
INDIRU4
EQU4 $1106
ADDRLP4 16
CNSTI4 0
ASGNI4
ADDRLP4 0
INDIRP4
CNSTI4 412
ADDP4
INDIRI4
ADDRLP4 16
INDIRI4
EQI4 $1106
ADDRLP4 20
ADDRLP4 0
INDIRP4
CNSTI4 408
ADDP4
INDIRP4
ASGNP4
ADDRLP4 20
INDIRP4
CVPU4 4
ADDRLP4 12
INDIRU4
EQU4 $1106
ADDRLP4 20
INDIRP4
CNSTI4 1304
ADDP4
INDIRI4
ADDRLP4 16
INDIRI4
EQI4 $1106
line 2217
;2217:		{
line 2218
;2218:			return qtrue;
CNSTI4 1
RETI4
ADDRGP4 $1102
JUMPV
LABELV $1106
line 2220
;2219:		}
;2220:		i++;
ADDRLP4 4
ADDRLP4 4
INDIRI4
CNSTI4 1
ADDI4
ASGNI4
line 2221
;2221:	}
LABELV $1104
line 2212
ADDRLP4 4
INDIRI4
CNSTI4 32
LTI4 $1103
line 2223
;2222:
;2223:	return qfalse;
CNSTI4 0
RETI4
LABELV $1102
endproc G_OtherPlayersDueling 24 0
export Cmd_EngageDuel_f
proc Cmd_EngageDuel_f 1176 28
line 2227
;2224:}
;2225:
;2226:void Cmd_EngageDuel_f(gentity_t *ent)
;2227:{
line 2231
;2228:	trace_t tr;
;2229:	vec3_t forward, fwdOrg;
;2230:
;2231:	if (!g_privateDuel.integer)
ADDRGP4 g_privateDuel+12
INDIRI4
CNSTI4 0
NEI4 $1109
line 2232
;2232:	{
line 2233
;2233:		return;
ADDRGP4 $1108
JUMPV
LABELV $1109
line 2236
;2234:	}
;2235:
;2236:	if (g_gametype.integer == GT_TOURNAMENT)
ADDRGP4 g_gametype+12
INDIRI4
CNSTI4 3
NEI4 $1112
line 2237
;2237:	{ //rather pointless in this mode..
line 2238
;2238:		trap_SendServerCommand( ent-g_entities, va("print \"%s\n\"", G_GetStripEdString("SVINGAME", "NODUEL_GAMETYPE")) );
ADDRGP4 $116
ARGP4
ADDRGP4 $1115
ARGP4
ADDRLP4 1104
ADDRGP4 G_GetStripEdString
CALLP4
ASGNP4
ADDRGP4 $115
ARGP4
ADDRLP4 1104
INDIRP4
ARGP4
ADDRLP4 1108
ADDRGP4 va
CALLP4
ASGNP4
ADDRFP4 0
INDIRP4
CVPU4 4
ADDRGP4 g_entities
CVPU4 4
SUBU4
CVUI4 4
CNSTI4 832
DIVI4
ARGI4
ADDRLP4 1108
INDIRP4
ARGP4
ADDRGP4 trap_SendServerCommand
CALLV
pop
line 2239
;2239:		return;
ADDRGP4 $1108
JUMPV
LABELV $1112
line 2242
;2240:	}
;2241:
;2242:	if (g_gametype.integer >= GT_TEAM)
ADDRGP4 g_gametype+12
INDIRI4
CNSTI4 5
LTI4 $1116
line 2243
;2243:	{ //no private dueling in team modes
line 2244
;2244:		trap_SendServerCommand( ent-g_entities, va("print \"%s\n\"", G_GetStripEdString("SVINGAME", "NODUEL_GAMETYPE")) );
ADDRGP4 $116
ARGP4
ADDRGP4 $1115
ARGP4
ADDRLP4 1104
ADDRGP4 G_GetStripEdString
CALLP4
ASGNP4
ADDRGP4 $115
ARGP4
ADDRLP4 1104
INDIRP4
ARGP4
ADDRLP4 1108
ADDRGP4 va
CALLP4
ASGNP4
ADDRFP4 0
INDIRP4
CVPU4 4
ADDRGP4 g_entities
CVPU4 4
SUBU4
CVUI4 4
CNSTI4 832
DIVI4
ARGI4
ADDRLP4 1108
INDIRP4
ARGP4
ADDRGP4 trap_SendServerCommand
CALLV
pop
line 2245
;2245:		return;
ADDRGP4 $1108
JUMPV
LABELV $1116
line 2248
;2246:	}
;2247:
;2248:	if (ent->client->ps.duelTime >= level.time)
ADDRFP4 0
INDIRP4
CNSTI4 408
ADDP4
INDIRP4
CNSTI4 1300
ADDP4
INDIRI4
ADDRGP4 level+32
INDIRI4
LTI4 $1119
line 2249
;2249:	{
line 2250
;2250:		return;
ADDRGP4 $1108
JUMPV
LABELV $1119
line 2253
;2251:	}
;2252:
;2253:	if (ent->client->ps.weapon != WP_SABER)
ADDRFP4 0
INDIRP4
CNSTI4 408
ADDP4
INDIRP4
CNSTI4 148
ADDP4
INDIRI4
CNSTI4 2
EQI4 $1122
line 2254
;2254:	{
line 2255
;2255:		return;
ADDRGP4 $1108
JUMPV
LABELV $1122
line 2266
;2256:	}
;2257:
;2258:	/*
;2259:	if (!ent->client->ps.saberHolstered)
;2260:	{ //must have saber holstered at the start of the duel
;2261:		return;
;2262:	}
;2263:	*/
;2264:	//NOTE: No longer doing this..
;2265:
;2266:	if (ent->client->ps.saberInFlight)
ADDRFP4 0
INDIRP4
CNSTI4 408
ADDP4
INDIRP4
CNSTI4 504
ADDP4
INDIRI4
CNSTI4 0
EQI4 $1124
line 2267
;2267:	{
line 2268
;2268:		return;
ADDRGP4 $1108
JUMPV
LABELV $1124
line 2271
;2269:	}
;2270:
;2271:	if (ent->client->ps.duelInProgress)
ADDRFP4 0
INDIRP4
CNSTI4 408
ADDP4
INDIRP4
CNSTI4 1304
ADDP4
INDIRI4
CNSTI4 0
EQI4 $1126
line 2272
;2272:	{
line 2273
;2273:		return;
ADDRGP4 $1108
JUMPV
LABELV $1126
line 2277
;2274:	}
;2275:
;2276:	//JediDog: Sleeping clients cannot duel challenge
;2277:	if (ent->client->pers.Sleep == qtrue)
ADDRFP4 0
INDIRP4
CNSTI4 408
ADDP4
INDIRP4
CNSTI4 1532
ADDP4
INDIRI4
CNSTI4 1
NEI4 $1128
line 2278
;2278:	{
line 2279
;2279:		return;
ADDRGP4 $1108
JUMPV
LABELV $1128
line 2282
;2280:	}
;2281:	//JediDog: duel bug fix
;2282:	if (!ent->client->ps.forceHandExtend == HANDEXTEND_NONE)
ADDRFP4 0
INDIRP4
CNSTI4 408
ADDP4
INDIRP4
CNSTI4 1248
ADDP4
INDIRI4
CNSTI4 0
NEI4 $1133
ADDRLP4 1104
CNSTI4 1
ASGNI4
ADDRGP4 $1134
JUMPV
LABELV $1133
ADDRLP4 1104
CNSTI4 0
ASGNI4
LABELV $1134
ADDRLP4 1104
INDIRI4
CNSTI4 0
NEI4 $1130
line 2283
;2283:	{
line 2284
;2284:		return;
ADDRGP4 $1108
JUMPV
LABELV $1130
line 2288
;2285:	}
;2286:
;2287:	//New: Don't let a player duel if he just did and hasn't waited 10 seconds yet (note: If someone challenges him, his duel timer will reset so he can accept)
;2288:	if (ent->client->ps.fd.privateDuelTime > level.time)
ADDRFP4 0
INDIRP4
CNSTI4 408
ADDP4
INDIRP4
CNSTI4 1240
ADDP4
INDIRI4
ADDRGP4 level+32
INDIRI4
LEI4 $1135
line 2289
;2289:	{
line 2290
;2290:		trap_SendServerCommand( ent-g_entities, va("print \"%s\n\"", G_GetStripEdString("SVINGAME", "CANTDUEL_JUSTDID")) );
ADDRGP4 $116
ARGP4
ADDRGP4 $1138
ARGP4
ADDRLP4 1108
ADDRGP4 G_GetStripEdString
CALLP4
ASGNP4
ADDRGP4 $115
ARGP4
ADDRLP4 1108
INDIRP4
ARGP4
ADDRLP4 1112
ADDRGP4 va
CALLP4
ASGNP4
ADDRFP4 0
INDIRP4
CVPU4 4
ADDRGP4 g_entities
CVPU4 4
SUBU4
CVUI4 4
CNSTI4 832
DIVI4
ARGI4
ADDRLP4 1112
INDIRP4
ARGP4
ADDRGP4 trap_SendServerCommand
CALLV
pop
line 2291
;2291:		return;
ADDRGP4 $1108
JUMPV
LABELV $1135
line 2294
;2292:	}
;2293:
;2294:	if (G_OtherPlayersDueling())
ADDRLP4 1108
ADDRGP4 G_OtherPlayersDueling
CALLI4
ASGNI4
ADDRLP4 1108
INDIRI4
CNSTI4 0
EQI4 $1139
line 2295
;2295:	{
line 2296
;2296:		trap_SendServerCommand( ent-g_entities, va("print \"%s\n\"", G_GetStripEdString("SVINGAME", "CANTDUEL_BUSY")) );
ADDRGP4 $116
ARGP4
ADDRGP4 $1141
ARGP4
ADDRLP4 1112
ADDRGP4 G_GetStripEdString
CALLP4
ASGNP4
ADDRGP4 $115
ARGP4
ADDRLP4 1112
INDIRP4
ARGP4
ADDRLP4 1116
ADDRGP4 va
CALLP4
ASGNP4
ADDRFP4 0
INDIRP4
CVPU4 4
ADDRGP4 g_entities
CVPU4 4
SUBU4
CVUI4 4
CNSTI4 832
DIVI4
ARGI4
ADDRLP4 1116
INDIRP4
ARGP4
ADDRGP4 trap_SendServerCommand
CALLV
pop
line 2297
;2297:		return;
ADDRGP4 $1108
JUMPV
LABELV $1139
line 2300
;2298:	}
;2299:
;2300:	AngleVectors( ent->client->ps.viewangles, forward, NULL, NULL );
ADDRFP4 0
INDIRP4
CNSTI4 408
ADDP4
INDIRP4
CNSTI4 156
ADDP4
ARGP4
ADDRLP4 0
ARGP4
ADDRLP4 1112
CNSTP4 0
ASGNP4
ADDRLP4 1112
INDIRP4
ARGP4
ADDRLP4 1112
INDIRP4
ARGP4
ADDRGP4 AngleVectors
CALLV
pop
line 2302
;2301:
;2302:	fwdOrg[0] = ent->client->ps.origin[0] + forward[0]*256;
ADDRLP4 12
ADDRFP4 0
INDIRP4
CNSTI4 408
ADDP4
INDIRP4
CNSTI4 20
ADDP4
INDIRF4
CNSTF4 1132462080
ADDRLP4 0
INDIRF4
MULF4
ADDF4
ASGNF4
line 2303
;2303:	fwdOrg[1] = ent->client->ps.origin[1] + forward[1]*256;
ADDRLP4 12+4
ADDRFP4 0
INDIRP4
CNSTI4 408
ADDP4
INDIRP4
CNSTI4 24
ADDP4
INDIRF4
CNSTF4 1132462080
ADDRLP4 0+4
INDIRF4
MULF4
ADDF4
ASGNF4
line 2304
;2304:	fwdOrg[2] = (ent->client->ps.origin[2]+ent->client->ps.viewheight) + forward[2]*256;
ADDRLP4 1116
ADDRFP4 0
INDIRP4
CNSTI4 408
ADDP4
INDIRP4
ASGNP4
ADDRLP4 12+8
ADDRLP4 1116
INDIRP4
CNSTI4 28
ADDP4
INDIRF4
ADDRLP4 1116
INDIRP4
CNSTI4 168
ADDP4
INDIRI4
CVIF4 4
ADDF4
CNSTF4 1132462080
ADDRLP4 0+8
INDIRF4
MULF4
ADDF4
ASGNF4
line 2306
;2305:
;2306:	trap_Trace(&tr, ent->client->ps.origin, NULL, NULL, fwdOrg, ent->s.number, MASK_PLAYERSOLID);
ADDRLP4 24
ARGP4
ADDRLP4 1120
ADDRFP4 0
INDIRP4
ASGNP4
ADDRLP4 1120
INDIRP4
CNSTI4 408
ADDP4
INDIRP4
CNSTI4 20
ADDP4
ARGP4
ADDRLP4 1124
CNSTP4 0
ASGNP4
ADDRLP4 1124
INDIRP4
ARGP4
ADDRLP4 1124
INDIRP4
ARGP4
ADDRLP4 12
ARGP4
ADDRLP4 1120
INDIRP4
INDIRI4
ARGI4
CNSTI4 273
ARGI4
ADDRGP4 trap_Trace
CALLV
pop
line 2308
;2307:
;2308:	if (tr.fraction != 1 && tr.entityNum < MAX_CLIENTS)
ADDRLP4 24+8
INDIRF4
CNSTF4 1065353216
EQF4 $1146
ADDRLP4 24+52
INDIRI4
CNSTI4 32
GEI4 $1146
line 2309
;2309:	{
line 2310
;2310:		gentity_t *challenged = &g_entities[tr.entityNum];
ADDRLP4 1128
CNSTI4 832
ADDRLP4 24+52
INDIRI4
MULI4
ADDRGP4 g_entities
ADDP4
ASGNP4
line 2312
;2311:
;2312:		if (!challenged || !challenged->client || !challenged->inuse ||
ADDRLP4 1136
CNSTU4 0
ASGNU4
ADDRLP4 1128
INDIRP4
CVPU4 4
ADDRLP4 1136
INDIRU4
EQU4 $1159
ADDRLP4 1140
ADDRLP4 1128
INDIRP4
CNSTI4 408
ADDP4
INDIRP4
ASGNP4
ADDRLP4 1140
INDIRP4
CVPU4 4
ADDRLP4 1136
INDIRU4
EQU4 $1159
ADDRLP4 1144
CNSTI4 0
ASGNI4
ADDRLP4 1128
INDIRP4
CNSTI4 412
ADDP4
INDIRI4
ADDRLP4 1144
INDIRI4
EQI4 $1159
ADDRLP4 1148
CNSTI4 1
ASGNI4
ADDRLP4 1128
INDIRP4
CNSTI4 676
ADDP4
INDIRI4
ADDRLP4 1148
INDIRI4
LTI4 $1159
ADDRLP4 1140
INDIRP4
CNSTI4 216
ADDP4
INDIRI4
ADDRLP4 1148
INDIRI4
LTI4 $1159
ADDRLP4 1140
INDIRP4
CNSTI4 148
ADDP4
INDIRI4
CNSTI4 2
NEI4 $1159
ADDRLP4 1140
INDIRP4
CNSTI4 1304
ADDP4
INDIRI4
ADDRLP4 1144
INDIRI4
NEI4 $1159
ADDRLP4 1140
INDIRP4
CNSTI4 504
ADDP4
INDIRI4
ADDRLP4 1144
INDIRI4
EQI4 $1151
LABELV $1159
line 2316
;2313:			challenged->health < 1 || challenged->client->ps.stats[STAT_HEALTH] < 1 ||
;2314:			challenged->client->ps.weapon != WP_SABER || challenged->client->ps.duelInProgress ||
;2315:			challenged->client->ps.saberInFlight)
;2316:		{
line 2317
;2317:			return;
ADDRGP4 $1108
JUMPV
LABELV $1151
line 2320
;2318:		}
;2319:
;2320:		if (g_gametype.integer >= GT_TEAM && OnSameTeam(ent, challenged))
ADDRGP4 g_gametype+12
INDIRI4
CNSTI4 5
LTI4 $1160
ADDRFP4 0
INDIRP4
ARGP4
ADDRLP4 1128
INDIRP4
ARGP4
ADDRLP4 1152
ADDRGP4 OnSameTeam
CALLI4
ASGNI4
ADDRLP4 1152
INDIRI4
CNSTI4 0
EQI4 $1160
line 2321
;2321:		{
line 2322
;2322:			return;
ADDRGP4 $1108
JUMPV
LABELV $1160
line 2325
;2323:		}
;2324:
;2325:		if (challenged->client->ps.duelIndex == ent->s.number && challenged->client->ps.duelTime >= level.time)
ADDRLP4 1156
ADDRLP4 1128
INDIRP4
CNSTI4 408
ADDP4
INDIRP4
ASGNP4
ADDRLP4 1156
INDIRP4
CNSTI4 1296
ADDP4
INDIRI4
ADDRFP4 0
INDIRP4
INDIRI4
NEI4 $1163
ADDRLP4 1156
INDIRP4
CNSTI4 1300
ADDP4
INDIRI4
ADDRGP4 level+32
INDIRI4
LTI4 $1163
line 2326
;2326:		{
line 2327
;2327:			trap_SendServerCommand( /*challenged-g_entities*/-1, va("print \"%s %s %s!\n\"", challenged->client->pers.netname, G_GetStripEdString("SVINGAME", "PLDUELACCEPT"), ent->client->pers.netname) );
ADDRGP4 $116
ARGP4
ADDRGP4 $1167
ARGP4
ADDRLP4 1160
ADDRGP4 G_GetStripEdString
CALLP4
ASGNP4
ADDRGP4 $1166
ARGP4
ADDRLP4 1164
CNSTI4 408
ASGNI4
ADDRLP4 1168
CNSTI4 1428
ASGNI4
ADDRLP4 1128
INDIRP4
ADDRLP4 1164
INDIRI4
ADDP4
INDIRP4
ADDRLP4 1168
INDIRI4
ADDP4
ARGP4
ADDRLP4 1160
INDIRP4
ARGP4
ADDRFP4 0
INDIRP4
ADDRLP4 1164
INDIRI4
ADDP4
INDIRP4
ADDRLP4 1168
INDIRI4
ADDP4
ARGP4
ADDRLP4 1172
ADDRGP4 va
CALLP4
ASGNP4
CNSTI4 -1
ARGI4
ADDRLP4 1172
INDIRP4
ARGP4
ADDRGP4 trap_SendServerCommand
CALLV
pop
line 2329
;2328:
;2329:			ent->client->ps.duelInProgress = qtrue;
ADDRFP4 0
INDIRP4
CNSTI4 408
ADDP4
INDIRP4
CNSTI4 1304
ADDP4
CNSTI4 1
ASGNI4
line 2330
;2330:			challenged->client->ps.duelInProgress = qtrue;
ADDRLP4 1128
INDIRP4
CNSTI4 408
ADDP4
INDIRP4
CNSTI4 1304
ADDP4
CNSTI4 1
ASGNI4
line 2332
;2331:
;2332:			ent->client->ps.duelTime = level.time + 2000;
ADDRFP4 0
INDIRP4
CNSTI4 408
ADDP4
INDIRP4
CNSTI4 1300
ADDP4
ADDRGP4 level+32
INDIRI4
CNSTI4 2000
ADDI4
ASGNI4
line 2333
;2333:			challenged->client->ps.duelTime = level.time + 2000;
ADDRLP4 1128
INDIRP4
CNSTI4 408
ADDP4
INDIRP4
CNSTI4 1300
ADDP4
ADDRGP4 level+32
INDIRI4
CNSTI4 2000
ADDI4
ASGNI4
line 2335
;2334:
;2335:			G_AddEvent(ent, EV_PRIVATE_DUEL, 1);
ADDRFP4 0
INDIRP4
ARGP4
CNSTI4 13
ARGI4
CNSTI4 1
ARGI4
ADDRGP4 G_AddEvent
CALLV
pop
line 2336
;2336:			G_AddEvent(challenged, EV_PRIVATE_DUEL, 1);
ADDRLP4 1128
INDIRP4
ARGP4
CNSTI4 13
ARGI4
CNSTI4 1
ARGI4
ADDRGP4 G_AddEvent
CALLV
pop
line 2340
;2337:
;2338:			//Holster their sabers now, until the duel starts (then they'll get auto-turned on to look cool)
;2339:
;2340:			if (!ent->client->ps.saberHolstered)
ADDRFP4 0
INDIRP4
CNSTI4 408
ADDP4
INDIRP4
CNSTI4 1312
ADDP4
INDIRI4
CNSTI4 0
NEI4 $1170
line 2341
;2341:			{
line 2342
;2342:				G_Sound(ent, CHAN_AUTO, saberOffSound);
ADDRFP4 0
INDIRP4
ARGP4
CNSTI4 0
ARGI4
ADDRGP4 saberOffSound
INDIRI4
ARGI4
ADDRGP4 G_Sound
CALLV
pop
line 2343
;2343:				ent->client->ps.weaponTime = 400;
ADDRFP4 0
INDIRP4
CNSTI4 408
ADDP4
INDIRP4
CNSTI4 44
ADDP4
CNSTI4 400
ASGNI4
line 2344
;2344:				ent->client->ps.saberHolstered = qtrue;
ADDRFP4 0
INDIRP4
CNSTI4 408
ADDP4
INDIRP4
CNSTI4 1312
ADDP4
CNSTI4 1
ASGNI4
line 2345
;2345:			}
LABELV $1170
line 2346
;2346:			if (!challenged->client->ps.saberHolstered)
ADDRLP4 1128
INDIRP4
CNSTI4 408
ADDP4
INDIRP4
CNSTI4 1312
ADDP4
INDIRI4
CNSTI4 0
NEI4 $1164
line 2347
;2347:			{
line 2348
;2348:				G_Sound(challenged, CHAN_AUTO, saberOffSound);
ADDRLP4 1128
INDIRP4
ARGP4
CNSTI4 0
ARGI4
ADDRGP4 saberOffSound
INDIRI4
ARGI4
ADDRGP4 G_Sound
CALLV
pop
line 2349
;2349:				challenged->client->ps.weaponTime = 400;
ADDRLP4 1128
INDIRP4
CNSTI4 408
ADDP4
INDIRP4
CNSTI4 44
ADDP4
CNSTI4 400
ASGNI4
line 2350
;2350:				challenged->client->ps.saberHolstered = qtrue;
ADDRLP4 1128
INDIRP4
CNSTI4 408
ADDP4
INDIRP4
CNSTI4 1312
ADDP4
CNSTI4 1
ASGNI4
line 2351
;2351:			}
line 2352
;2352:		}
ADDRGP4 $1164
JUMPV
LABELV $1163
line 2354
;2353:		else
;2354:		{
line 2356
;2355:			//Print the message that a player has been challenged in private, only announce the actual duel initiation in private
;2356:			trap_SendServerCommand( challenged-g_entities, va("cp \"%s %s\n\"", ent->client->pers.netname, G_GetStripEdString("SVINGAME", "PLDUELCHALLENGE")) );
ADDRGP4 $116
ARGP4
ADDRGP4 $1175
ARGP4
ADDRLP4 1160
ADDRGP4 G_GetStripEdString
CALLP4
ASGNP4
ADDRGP4 $1174
ARGP4
ADDRFP4 0
INDIRP4
CNSTI4 408
ADDP4
INDIRP4
CNSTI4 1428
ADDP4
ARGP4
ADDRLP4 1160
INDIRP4
ARGP4
ADDRLP4 1164
ADDRGP4 va
CALLP4
ASGNP4
ADDRLP4 1128
INDIRP4
CVPU4 4
ADDRGP4 g_entities
CVPU4 4
SUBU4
CVUI4 4
CNSTI4 832
DIVI4
ARGI4
ADDRLP4 1164
INDIRP4
ARGP4
ADDRGP4 trap_SendServerCommand
CALLV
pop
line 2357
;2357:			trap_SendServerCommand( ent-g_entities, va("cp \"%s %s\n\"", G_GetStripEdString("SVINGAME", "PLDUELCHALLENGED"), challenged->client->pers.netname) );
ADDRGP4 $116
ARGP4
ADDRGP4 $1176
ARGP4
ADDRLP4 1168
ADDRGP4 G_GetStripEdString
CALLP4
ASGNP4
ADDRGP4 $1174
ARGP4
ADDRLP4 1168
INDIRP4
ARGP4
ADDRLP4 1128
INDIRP4
CNSTI4 408
ADDP4
INDIRP4
CNSTI4 1428
ADDP4
ARGP4
ADDRLP4 1172
ADDRGP4 va
CALLP4
ASGNP4
ADDRFP4 0
INDIRP4
CVPU4 4
ADDRGP4 g_entities
CVPU4 4
SUBU4
CVUI4 4
CNSTI4 832
DIVI4
ARGI4
ADDRLP4 1172
INDIRP4
ARGP4
ADDRGP4 trap_SendServerCommand
CALLV
pop
line 2358
;2358:		}
LABELV $1164
line 2360
;2359:
;2360:		challenged->client->ps.fd.privateDuelTime = 0; //reset the timer in case this player just got out of a duel. He should still be able to accept the challenge.
ADDRLP4 1128
INDIRP4
CNSTI4 408
ADDP4
INDIRP4
CNSTI4 1240
ADDP4
CNSTI4 0
ASGNI4
line 2362
;2361:		
;2362:		ent->client->ps.forceHandExtend = HANDEXTEND_DUELCHALLENGE;
ADDRFP4 0
INDIRP4
CNSTI4 408
ADDP4
INDIRP4
CNSTI4 1248
ADDP4
CNSTI4 9
ASGNI4
line 2363
;2363:		ent->client->ps.forceHandExtendTime = level.time + 1000;
ADDRFP4 0
INDIRP4
CNSTI4 408
ADDP4
INDIRP4
CNSTI4 1252
ADDP4
ADDRGP4 level+32
INDIRI4
CNSTI4 1000
ADDI4
ASGNI4
line 2365
;2364:
;2365:		ent->client->ps.duelIndex = challenged->s.number;
ADDRFP4 0
INDIRP4
CNSTI4 408
ADDP4
INDIRP4
CNSTI4 1296
ADDP4
ADDRLP4 1128
INDIRP4
INDIRI4
ASGNI4
line 2366
;2366:		ent->client->ps.duelTime = level.time + 5000;
ADDRFP4 0
INDIRP4
CNSTI4 408
ADDP4
INDIRP4
CNSTI4 1300
ADDP4
ADDRGP4 level+32
INDIRI4
CNSTI4 5000
ADDI4
ASGNI4
line 2367
;2367:	}
LABELV $1146
line 2368
;2368:}
LABELV $1108
endproc Cmd_EngageDuel_f 1176 28
export StandardSetBodyAnim
proc StandardSetBodyAnim 380 16
line 2453
;2369:
;2370:void PM_SetAnim(int setAnimParts,int anim,int setAnimFlags, int blendTime);
;2371:
;2372:#ifdef _DEBUG
;2373:extern stringID_table_t animTable[MAX_ANIMATIONS+1];
;2374:
;2375:void Cmd_DebugSetSaberMove_f(gentity_t *self)
;2376:{
;2377:	int argNum = trap_Argc();
;2378:	char arg[MAX_STRING_CHARS];
;2379:
;2380:	if (argNum < 2)
;2381:	{
;2382:		return;
;2383:	}
;2384:
;2385:	trap_Argv( 1, arg, sizeof( arg ) );
;2386:
;2387:	if (!arg[0])
;2388:	{
;2389:		return;
;2390:	}
;2391:
;2392:	self->client->ps.saberMove = atoi(arg);
;2393:	self->client->ps.saberBlocked = BLOCKED_BOUNCE_MOVE;
;2394:
;2395:	if (self->client->ps.saberMove >= LS_MOVE_MAX)
;2396:	{
;2397:		self->client->ps.saberMove = LS_MOVE_MAX-1;
;2398:	}
;2399:
;2400:	Com_Printf("Anim for move: %s\n", animTable[saberMoveData[self->client->ps.saberMove].animToUse].name);
;2401:}
;2402:
;2403:void Cmd_DebugSetBodyAnim_f(gentity_t *self, int flags)
;2404:{
;2405:	int argNum = trap_Argc();
;2406:	char arg[MAX_STRING_CHARS];
;2407:	int i = 0;
;2408:	pmove_t pmv;
;2409:
;2410:	if (argNum < 2)
;2411:	{
;2412:		return;
;2413:	}
;2414:
;2415:	trap_Argv( 1, arg, sizeof( arg ) );
;2416:
;2417:	if (!arg[0])
;2418:	{
;2419:		return;
;2420:	}
;2421:
;2422:	while (i < MAX_ANIMATIONS)
;2423:	{
;2424:		if (!Q_stricmp(arg, animTable[i].name))
;2425:		{
;2426:			break;
;2427:		}
;2428:		i++;
;2429:	}
;2430:
;2431:	if (i == MAX_ANIMATIONS)
;2432:	{
;2433:		Com_Printf("Animation '%s' does not exist\n", arg);
;2434:		return;
;2435:	}
;2436:
;2437:	memset (&pmv, 0, sizeof(pmv));
;2438:	pmv.ps = &self->client->ps;
;2439:	pmv.animations = bgGlobalAnimations;
;2440:	pmv.cmd = self->client->pers.cmd;
;2441:	pmv.trace = trap_Trace;
;2442:	pmv.pointcontents = trap_PointContents;
;2443:	pmv.gametype = g_gametype.integer;
;2444:
;2445:	pm = &pmv;
;2446:	PM_SetAnim(SETANIM_BOTH, i, flags, 0);
;2447:
;2448:	Com_Printf("Set body anim to %s\n", arg);
;2449:}
;2450:#endif
;2451:
;2452:void StandardSetBodyAnim(gentity_t *self, int anim, int flags)
;2453:{
line 2456
;2454:	pmove_t pmv;
;2455:
;2456:	memset (&pmv, 0, sizeof(pmv));
ADDRLP4 0
ARGP4
CNSTI4 0
ARGI4
CNSTI4 380
ARGI4
ADDRGP4 memset
CALLP4
pop
line 2457
;2457:	pmv.ps = &self->client->ps;
ADDRLP4 0
ADDRFP4 0
INDIRP4
CNSTI4 408
ADDP4
INDIRP4
ASGNP4
line 2458
;2458:	pmv.animations = bgGlobalAnimations;
ADDRLP4 0+224
ADDRGP4 bgGlobalAnimations
ASGNP4
line 2459
;2459:	pmv.cmd = self->client->pers.cmd;
ADDRLP4 0+4
ADDRFP4 0
INDIRP4
CNSTI4 408
ADDP4
INDIRP4
CNSTI4 1384
ADDP4
INDIRB
ASGNB 28
line 2460
;2460:	pmv.trace = trap_Trace;
ADDRLP4 0+240
ADDRGP4 trap_Trace
ASGNP4
line 2461
;2461:	pmv.pointcontents = trap_PointContents;
ADDRLP4 0+244
ADDRGP4 trap_PointContents
ASGNP4
line 2462
;2462:	pmv.gametype = g_gametype.integer;
ADDRLP4 0+220
ADDRGP4 g_gametype+12
INDIRI4
ASGNI4
line 2464
;2463:
;2464:	pm = &pmv;
ADDRGP4 pm
ADDRLP4 0
ASGNP4
line 2465
;2465:	PM_SetAnim(SETANIM_BOTH, anim, flags, 0);
CNSTI4 3
ARGI4
ADDRFP4 4
INDIRI4
ARGI4
ADDRFP4 8
INDIRI4
ARGI4
CNSTI4 0
ARGI4
ADDRGP4 PM_SetAnim
CALLV
pop
line 2466
;2466:}
LABELV $1179
endproc StandardSetBodyAnim 380 16
export ClientCommand
proc ClientCommand 1208 20
line 2479
;2467:
;2468:void DismembermentTest(gentity_t *self);
;2469:
;2470:#ifdef _DEBUG
;2471:void DismembermentByNum(gentity_t *self, int num);
;2472:#endif
;2473:
;2474:/*
;2475:=================
;2476:ClientCommand
;2477:=================
;2478:*/
;2479:void ClientCommand( int clientNum ) {
line 2483
;2480:	gentity_t *ent;
;2481:	char	cmd[MAX_TOKEN_CHARS];
;2482:
;2483:	ent = g_entities + clientNum;
ADDRLP4 1024
CNSTI4 832
ADDRFP4 0
INDIRI4
MULI4
ADDRGP4 g_entities
ADDP4
ASGNP4
line 2484
;2484:	if ( !ent->client ) {
ADDRLP4 1024
INDIRP4
CNSTI4 408
ADDP4
INDIRP4
CVPU4 4
CNSTU4 0
NEU4 $1187
line 2485
;2485:		return;		// not fully in game yet
ADDRGP4 $1186
JUMPV
LABELV $1187
line 2489
;2486:	}
;2487:
;2488:
;2489:	trap_Argv( 0, cmd, sizeof( cmd ) );
CNSTI4 0
ARGI4
ADDRLP4 0
ARGP4
CNSTI4 1024
ARGI4
ADDRGP4 trap_Argv
CALLV
pop
line 2492
;2490:
;2491:	//rww - redirect bot commands
;2492:	if (strstr(cmd, "bot_") && AcceptBotCommand(cmd, ent))
ADDRLP4 0
ARGP4
ADDRGP4 $1191
ARGP4
ADDRLP4 1028
ADDRGP4 strstr
CALLP4
ASGNP4
ADDRLP4 1028
INDIRP4
CVPU4 4
CNSTU4 0
EQU4 $1189
ADDRLP4 0
ARGP4
ADDRLP4 1024
INDIRP4
ARGP4
ADDRLP4 1032
ADDRGP4 AcceptBotCommand
CALLI4
ASGNI4
ADDRLP4 1032
INDIRI4
CNSTI4 0
EQI4 $1189
line 2493
;2493:	{
line 2494
;2494:		return;
ADDRGP4 $1186
JUMPV
LABELV $1189
line 2498
;2495:	}
;2496:	//end rww
;2497:
;2498:	if (Q_stricmp (cmd, "say") == 0) {
ADDRLP4 0
ARGP4
ADDRGP4 $1194
ARGP4
ADDRLP4 1036
ADDRGP4 Q_stricmp
CALLI4
ASGNI4
ADDRLP4 1036
INDIRI4
CNSTI4 0
NEI4 $1192
line 2499
;2499:		Cmd_Say_f (ent, SAY_ALL, qfalse);
ADDRLP4 1024
INDIRP4
ARGP4
ADDRLP4 1040
CNSTI4 0
ASGNI4
ADDRLP4 1040
INDIRI4
ARGI4
ADDRLP4 1040
INDIRI4
ARGI4
ADDRGP4 Cmd_Say_f
CALLV
pop
line 2500
;2500:		return;
ADDRGP4 $1186
JUMPV
LABELV $1192
line 2502
;2501:	}
;2502:	if (Q_stricmp (cmd, "say_team") == 0) {
ADDRLP4 0
ARGP4
ADDRGP4 $1197
ARGP4
ADDRLP4 1040
ADDRGP4 Q_stricmp
CALLI4
ASGNI4
ADDRLP4 1040
INDIRI4
CNSTI4 0
NEI4 $1195
line 2503
;2503:		Cmd_Say_f (ent, SAY_TEAM, qfalse);
ADDRLP4 1024
INDIRP4
ARGP4
CNSTI4 1
ARGI4
CNSTI4 0
ARGI4
ADDRGP4 Cmd_Say_f
CALLV
pop
line 2504
;2504:		return;
ADDRGP4 $1186
JUMPV
LABELV $1195
line 2506
;2505:	}
;2506:	if (Q_stricmp (cmd, "tell") == 0) {
ADDRLP4 0
ARGP4
ADDRGP4 $1200
ARGP4
ADDRLP4 1044
ADDRGP4 Q_stricmp
CALLI4
ASGNI4
ADDRLP4 1044
INDIRI4
CNSTI4 0
NEI4 $1198
line 2507
;2507:		Cmd_Tell_f ( ent );
ADDRLP4 1024
INDIRP4
ARGP4
ADDRGP4 Cmd_Tell_f
CALLV
pop
line 2508
;2508:		return;
ADDRGP4 $1186
JUMPV
LABELV $1198
line 2510
;2509:	}
;2510:	if (Q_stricmp (cmd, "vsay") == 0) {
ADDRLP4 0
ARGP4
ADDRGP4 $1203
ARGP4
ADDRLP4 1048
ADDRGP4 Q_stricmp
CALLI4
ASGNI4
ADDRLP4 1048
INDIRI4
CNSTI4 0
NEI4 $1201
line 2511
;2511:		Cmd_Voice_f (ent, SAY_ALL, qfalse, qfalse);
ADDRLP4 1024
INDIRP4
ARGP4
ADDRLP4 1052
CNSTI4 0
ASGNI4
ADDRLP4 1052
INDIRI4
ARGI4
ADDRLP4 1052
INDIRI4
ARGI4
ADDRLP4 1052
INDIRI4
ARGI4
ADDRGP4 Cmd_Voice_f
CALLV
pop
line 2512
;2512:		return;
ADDRGP4 $1186
JUMPV
LABELV $1201
line 2514
;2513:	}
;2514:	if (Q_stricmp (cmd, "vsay_team") == 0) {
ADDRLP4 0
ARGP4
ADDRGP4 $1206
ARGP4
ADDRLP4 1052
ADDRGP4 Q_stricmp
CALLI4
ASGNI4
ADDRLP4 1052
INDIRI4
CNSTI4 0
NEI4 $1204
line 2515
;2515:		Cmd_Voice_f (ent, SAY_TEAM, qfalse, qfalse);
ADDRLP4 1024
INDIRP4
ARGP4
CNSTI4 1
ARGI4
ADDRLP4 1056
CNSTI4 0
ASGNI4
ADDRLP4 1056
INDIRI4
ARGI4
ADDRLP4 1056
INDIRI4
ARGI4
ADDRGP4 Cmd_Voice_f
CALLV
pop
line 2516
;2516:		return;
ADDRGP4 $1186
JUMPV
LABELV $1204
line 2518
;2517:	}
;2518:	if (Q_stricmp (cmd, "vtell") == 0) {
ADDRLP4 0
ARGP4
ADDRGP4 $559
ARGP4
ADDRLP4 1056
ADDRGP4 Q_stricmp
CALLI4
ASGNI4
ADDRLP4 1056
INDIRI4
CNSTI4 0
NEI4 $1207
line 2519
;2519:		Cmd_VoiceTell_f ( ent, qfalse );
ADDRLP4 1024
INDIRP4
ARGP4
CNSTI4 0
ARGI4
ADDRGP4 Cmd_VoiceTell_f
CALLV
pop
line 2520
;2520:		return;
ADDRGP4 $1186
JUMPV
LABELV $1207
line 2522
;2521:	}
;2522:	if (Q_stricmp (cmd, "vosay") == 0) {
ADDRLP4 0
ARGP4
ADDRGP4 $1211
ARGP4
ADDRLP4 1060
ADDRGP4 Q_stricmp
CALLI4
ASGNI4
ADDRLP4 1060
INDIRI4
CNSTI4 0
NEI4 $1209
line 2523
;2523:		Cmd_Voice_f (ent, SAY_ALL, qfalse, qtrue);
ADDRLP4 1024
INDIRP4
ARGP4
ADDRLP4 1064
CNSTI4 0
ASGNI4
ADDRLP4 1064
INDIRI4
ARGI4
ADDRLP4 1064
INDIRI4
ARGI4
CNSTI4 1
ARGI4
ADDRGP4 Cmd_Voice_f
CALLV
pop
line 2524
;2524:		return;
ADDRGP4 $1186
JUMPV
LABELV $1209
line 2526
;2525:	}
;2526:	if (Q_stricmp (cmd, "vosay_team") == 0) {
ADDRLP4 0
ARGP4
ADDRGP4 $1214
ARGP4
ADDRLP4 1064
ADDRGP4 Q_stricmp
CALLI4
ASGNI4
ADDRLP4 1064
INDIRI4
CNSTI4 0
NEI4 $1212
line 2527
;2527:		Cmd_Voice_f (ent, SAY_TEAM, qfalse, qtrue);
ADDRLP4 1024
INDIRP4
ARGP4
ADDRLP4 1068
CNSTI4 1
ASGNI4
ADDRLP4 1068
INDIRI4
ARGI4
CNSTI4 0
ARGI4
ADDRLP4 1068
INDIRI4
ARGI4
ADDRGP4 Cmd_Voice_f
CALLV
pop
line 2528
;2528:		return;
ADDRGP4 $1186
JUMPV
LABELV $1212
line 2530
;2529:	}
;2530:	if (Q_stricmp (cmd, "votell") == 0) {
ADDRLP4 0
ARGP4
ADDRGP4 $1217
ARGP4
ADDRLP4 1068
ADDRGP4 Q_stricmp
CALLI4
ASGNI4
ADDRLP4 1068
INDIRI4
CNSTI4 0
NEI4 $1215
line 2531
;2531:		Cmd_VoiceTell_f ( ent, qtrue );
ADDRLP4 1024
INDIRP4
ARGP4
CNSTI4 1
ARGI4
ADDRGP4 Cmd_VoiceTell_f
CALLV
pop
line 2532
;2532:		return;
ADDRGP4 $1186
JUMPV
LABELV $1215
line 2534
;2533:	}
;2534:	if (Q_stricmp (cmd, "vtaunt") == 0) {
ADDRLP4 0
ARGP4
ADDRGP4 $1220
ARGP4
ADDRLP4 1072
ADDRGP4 Q_stricmp
CALLI4
ASGNI4
ADDRLP4 1072
INDIRI4
CNSTI4 0
NEI4 $1218
line 2535
;2535:		Cmd_VoiceTaunt_f ( ent );
ADDRLP4 1024
INDIRP4
ARGP4
ADDRGP4 Cmd_VoiceTaunt_f
CALLV
pop
line 2536
;2536:		return;
ADDRGP4 $1186
JUMPV
LABELV $1218
line 2538
;2537:	}
;2538:	if (Q_stricmp (cmd, "score") == 0) {
ADDRLP4 0
ARGP4
ADDRGP4 $315
ARGP4
ADDRLP4 1076
ADDRGP4 Q_stricmp
CALLI4
ASGNI4
ADDRLP4 1076
INDIRI4
CNSTI4 0
NEI4 $1221
line 2539
;2539:		Cmd_Score_f (ent);
ADDRLP4 1024
INDIRP4
ARGP4
ADDRGP4 Cmd_Score_f
CALLV
pop
line 2540
;2540:		return;
ADDRGP4 $1186
JUMPV
LABELV $1221
line 2544
;2541:	}
;2542:
;2543:	// ignore all other commands when at intermission
;2544:	if (level.intermissiontime)
ADDRGP4 level+9008
INDIRI4
CNSTI4 0
EQI4 $1223
line 2545
;2545:	{
line 2546
;2546:		qboolean giveError = qfalse;
ADDRLP4 1080
CNSTI4 0
ASGNI4
line 2548
;2547:
;2548:		if (!Q_stricmp(cmd, "give"))
ADDRLP4 0
ARGP4
ADDRGP4 $1228
ARGP4
ADDRLP4 1084
ADDRGP4 Q_stricmp
CALLI4
ASGNI4
ADDRLP4 1084
INDIRI4
CNSTI4 0
NEI4 $1226
line 2549
;2549:		{
line 2550
;2550:			giveError = qtrue;
ADDRLP4 1080
CNSTI4 1
ASGNI4
line 2551
;2551:		}
ADDRGP4 $1227
JUMPV
LABELV $1226
line 2552
;2552:		else if (!Q_stricmp(cmd, "god"))
ADDRLP4 0
ARGP4
ADDRGP4 $1231
ARGP4
ADDRLP4 1088
ADDRGP4 Q_stricmp
CALLI4
ASGNI4
ADDRLP4 1088
INDIRI4
CNSTI4 0
NEI4 $1229
line 2553
;2553:		{
line 2554
;2554:			giveError = qtrue;
ADDRLP4 1080
CNSTI4 1
ASGNI4
line 2555
;2555:		}
ADDRGP4 $1230
JUMPV
LABELV $1229
line 2556
;2556:		else if (!Q_stricmp(cmd, "notarget"))
ADDRLP4 0
ARGP4
ADDRGP4 $1234
ARGP4
ADDRLP4 1092
ADDRGP4 Q_stricmp
CALLI4
ASGNI4
ADDRLP4 1092
INDIRI4
CNSTI4 0
NEI4 $1232
line 2557
;2557:		{
line 2558
;2558:			giveError = qtrue;
ADDRLP4 1080
CNSTI4 1
ASGNI4
line 2559
;2559:		}
ADDRGP4 $1233
JUMPV
LABELV $1232
line 2560
;2560:		else if (!Q_stricmp(cmd, "noclip"))
ADDRLP4 0
ARGP4
ADDRGP4 $1237
ARGP4
ADDRLP4 1096
ADDRGP4 Q_stricmp
CALLI4
ASGNI4
ADDRLP4 1096
INDIRI4
CNSTI4 0
NEI4 $1235
line 2561
;2561:		{
line 2562
;2562:			giveError = qtrue;
ADDRLP4 1080
CNSTI4 1
ASGNI4
line 2563
;2563:		}
ADDRGP4 $1236
JUMPV
LABELV $1235
line 2564
;2564:		else if (!Q_stricmp(cmd, "kill"))
ADDRLP4 0
ARGP4
ADDRGP4 $1240
ARGP4
ADDRLP4 1100
ADDRGP4 Q_stricmp
CALLI4
ASGNI4
ADDRLP4 1100
INDIRI4
CNSTI4 0
NEI4 $1238
line 2565
;2565:		{
line 2566
;2566:			giveError = qtrue;
ADDRLP4 1080
CNSTI4 1
ASGNI4
line 2567
;2567:		}
ADDRGP4 $1239
JUMPV
LABELV $1238
line 2568
;2568:		else if (!Q_stricmp(cmd, "teamtask"))
ADDRLP4 0
ARGP4
ADDRGP4 $267
ARGP4
ADDRLP4 1104
ADDRGP4 Q_stricmp
CALLI4
ASGNI4
ADDRLP4 1104
INDIRI4
CNSTI4 0
NEI4 $1241
line 2569
;2569:		{
line 2570
;2570:			giveError = qtrue;
ADDRLP4 1080
CNSTI4 1
ASGNI4
line 2571
;2571:		}
ADDRGP4 $1242
JUMPV
LABELV $1241
line 2572
;2572:		else if (!Q_stricmp(cmd, "levelshot"))
ADDRLP4 0
ARGP4
ADDRGP4 $1245
ARGP4
ADDRLP4 1108
ADDRGP4 Q_stricmp
CALLI4
ASGNI4
ADDRLP4 1108
INDIRI4
CNSTI4 0
NEI4 $1243
line 2573
;2573:		{
line 2574
;2574:			giveError = qtrue;
ADDRLP4 1080
CNSTI4 1
ASGNI4
line 2575
;2575:		}
ADDRGP4 $1244
JUMPV
LABELV $1243
line 2576
;2576:		else if (!Q_stricmp(cmd, "follow"))
ADDRLP4 0
ARGP4
ADDRGP4 $1248
ARGP4
ADDRLP4 1112
ADDRGP4 Q_stricmp
CALLI4
ASGNI4
ADDRLP4 1112
INDIRI4
CNSTI4 0
NEI4 $1246
line 2577
;2577:		{
line 2578
;2578:			giveError = qtrue;
ADDRLP4 1080
CNSTI4 1
ASGNI4
line 2579
;2579:		}
ADDRGP4 $1247
JUMPV
LABELV $1246
line 2580
;2580:		else if (!Q_stricmp(cmd, "follownext"))
ADDRLP4 0
ARGP4
ADDRGP4 $1251
ARGP4
ADDRLP4 1116
ADDRGP4 Q_stricmp
CALLI4
ASGNI4
ADDRLP4 1116
INDIRI4
CNSTI4 0
NEI4 $1249
line 2581
;2581:		{
line 2582
;2582:			giveError = qtrue;
ADDRLP4 1080
CNSTI4 1
ASGNI4
line 2583
;2583:		}
ADDRGP4 $1250
JUMPV
LABELV $1249
line 2584
;2584:		else if (!Q_stricmp(cmd, "followprev"))
ADDRLP4 0
ARGP4
ADDRGP4 $1254
ARGP4
ADDRLP4 1120
ADDRGP4 Q_stricmp
CALLI4
ASGNI4
ADDRLP4 1120
INDIRI4
CNSTI4 0
NEI4 $1252
line 2585
;2585:		{
line 2586
;2586:			giveError = qtrue;
ADDRLP4 1080
CNSTI4 1
ASGNI4
line 2587
;2587:		}
ADDRGP4 $1253
JUMPV
LABELV $1252
line 2588
;2588:		else if (!Q_stricmp(cmd, "team"))
ADDRLP4 0
ARGP4
ADDRGP4 $1257
ARGP4
ADDRLP4 1124
ADDRGP4 Q_stricmp
CALLI4
ASGNI4
ADDRLP4 1124
INDIRI4
CNSTI4 0
NEI4 $1255
line 2589
;2589:		{
line 2590
;2590:			giveError = qtrue;
ADDRLP4 1080
CNSTI4 1
ASGNI4
line 2591
;2591:		}
ADDRGP4 $1256
JUMPV
LABELV $1255
line 2592
;2592:		else if (!Q_stricmp(cmd, "forcechanged"))
ADDRLP4 0
ARGP4
ADDRGP4 $1260
ARGP4
ADDRLP4 1128
ADDRGP4 Q_stricmp
CALLI4
ASGNI4
ADDRLP4 1128
INDIRI4
CNSTI4 0
NEI4 $1258
line 2593
;2593:		{ //special case: still update force change
line 2594
;2594:			Cmd_ForceChanged_f (ent);
ADDRLP4 1024
INDIRP4
ARGP4
ADDRGP4 Cmd_ForceChanged_f
CALLV
pop
line 2595
;2595:			return;
ADDRGP4 $1186
JUMPV
LABELV $1258
line 2597
;2596:		}
;2597:		else if (!Q_stricmp(cmd, "where"))
ADDRLP4 0
ARGP4
ADDRGP4 $1263
ARGP4
ADDRLP4 1132
ADDRGP4 Q_stricmp
CALLI4
ASGNI4
ADDRLP4 1132
INDIRI4
CNSTI4 0
NEI4 $1261
line 2598
;2598:		{
line 2599
;2599:			giveError = qtrue;
ADDRLP4 1080
CNSTI4 1
ASGNI4
line 2600
;2600:		}
ADDRGP4 $1262
JUMPV
LABELV $1261
line 2601
;2601:		else if (!Q_stricmp(cmd, "callvote"))
ADDRLP4 0
ARGP4
ADDRGP4 $1266
ARGP4
ADDRLP4 1136
ADDRGP4 Q_stricmp
CALLI4
ASGNI4
ADDRLP4 1136
INDIRI4
CNSTI4 0
NEI4 $1264
line 2602
;2602:		{
line 2603
;2603:			giveError = qtrue;
ADDRLP4 1080
CNSTI4 1
ASGNI4
line 2604
;2604:		}
ADDRGP4 $1265
JUMPV
LABELV $1264
line 2605
;2605:		else if (!Q_stricmp(cmd, "vote"))
ADDRLP4 0
ARGP4
ADDRGP4 $1269
ARGP4
ADDRLP4 1140
ADDRGP4 Q_stricmp
CALLI4
ASGNI4
ADDRLP4 1140
INDIRI4
CNSTI4 0
NEI4 $1267
line 2606
;2606:		{
line 2607
;2607:			giveError = qtrue;
ADDRLP4 1080
CNSTI4 1
ASGNI4
line 2608
;2608:		}
ADDRGP4 $1268
JUMPV
LABELV $1267
line 2609
;2609:		else if (!Q_stricmp(cmd, "callteamvote"))
ADDRLP4 0
ARGP4
ADDRGP4 $1272
ARGP4
ADDRLP4 1144
ADDRGP4 Q_stricmp
CALLI4
ASGNI4
ADDRLP4 1144
INDIRI4
CNSTI4 0
NEI4 $1270
line 2610
;2610:		{
line 2611
;2611:			giveError = qtrue;
ADDRLP4 1080
CNSTI4 1
ASGNI4
line 2612
;2612:		}
ADDRGP4 $1271
JUMPV
LABELV $1270
line 2613
;2613:		else if (!Q_stricmp(cmd, "teamvote"))
ADDRLP4 0
ARGP4
ADDRGP4 $1275
ARGP4
ADDRLP4 1148
ADDRGP4 Q_stricmp
CALLI4
ASGNI4
ADDRLP4 1148
INDIRI4
CNSTI4 0
NEI4 $1273
line 2614
;2614:		{
line 2615
;2615:			giveError = qtrue;
ADDRLP4 1080
CNSTI4 1
ASGNI4
line 2616
;2616:		}
ADDRGP4 $1274
JUMPV
LABELV $1273
line 2617
;2617:		else if (!Q_stricmp(cmd, "gc"))
ADDRLP4 0
ARGP4
ADDRGP4 $1278
ARGP4
ADDRLP4 1152
ADDRGP4 Q_stricmp
CALLI4
ASGNI4
ADDRLP4 1152
INDIRI4
CNSTI4 0
NEI4 $1276
line 2618
;2618:		{
line 2619
;2619:			giveError = qtrue;
ADDRLP4 1080
CNSTI4 1
ASGNI4
line 2620
;2620:		}
ADDRGP4 $1277
JUMPV
LABELV $1276
line 2621
;2621:		else if (!Q_stricmp(cmd, "setviewpos"))
ADDRLP4 0
ARGP4
ADDRGP4 $1281
ARGP4
ADDRLP4 1156
ADDRGP4 Q_stricmp
CALLI4
ASGNI4
ADDRLP4 1156
INDIRI4
CNSTI4 0
NEI4 $1279
line 2622
;2622:		{
line 2623
;2623:			giveError = qtrue;
ADDRLP4 1080
CNSTI4 1
ASGNI4
line 2624
;2624:		}
ADDRGP4 $1280
JUMPV
LABELV $1279
line 2625
;2625:		else if (!Q_stricmp(cmd, "stats"))
ADDRLP4 0
ARGP4
ADDRGP4 $1284
ARGP4
ADDRLP4 1160
ADDRGP4 Q_stricmp
CALLI4
ASGNI4
ADDRLP4 1160
INDIRI4
CNSTI4 0
NEI4 $1282
line 2626
;2626:		{
line 2627
;2627:			giveError = qtrue;
ADDRLP4 1080
CNSTI4 1
ASGNI4
line 2628
;2628:		}
LABELV $1282
LABELV $1280
LABELV $1277
LABELV $1274
LABELV $1271
LABELV $1268
LABELV $1265
LABELV $1262
LABELV $1256
LABELV $1253
LABELV $1250
LABELV $1247
LABELV $1244
LABELV $1242
LABELV $1239
LABELV $1236
LABELV $1233
LABELV $1230
LABELV $1227
line 2630
;2629:
;2630:		if (giveError)
ADDRLP4 1080
INDIRI4
CNSTI4 0
EQI4 $1285
line 2631
;2631:		{
line 2632
;2632:			trap_SendServerCommand( clientNum, va("print \"You cannot perform this task (%s) during the intermission.\n\"", cmd ) );
ADDRGP4 $1287
ARGP4
ADDRLP4 0
ARGP4
ADDRLP4 1164
ADDRGP4 va
CALLP4
ASGNP4
ADDRFP4 0
INDIRI4
ARGI4
ADDRLP4 1164
INDIRP4
ARGP4
ADDRGP4 trap_SendServerCommand
CALLV
pop
line 2633
;2633:		}
ADDRGP4 $1186
JUMPV
LABELV $1285
line 2635
;2634:		else
;2635:		{
line 2636
;2636:			Cmd_Say_f (ent, qfalse, qtrue);
ADDRLP4 1024
INDIRP4
ARGP4
CNSTI4 0
ARGI4
CNSTI4 1
ARGI4
ADDRGP4 Cmd_Say_f
CALLV
pop
line 2637
;2637:		}
line 2638
;2638:		return;
ADDRGP4 $1186
JUMPV
LABELV $1223
line 2641
;2639:	}
;2640:
;2641:	if (Q_stricmp (cmd, "give") == 0)
ADDRLP4 0
ARGP4
ADDRGP4 $1228
ARGP4
ADDRLP4 1080
ADDRGP4 Q_stricmp
CALLI4
ASGNI4
ADDRLP4 1080
INDIRI4
CNSTI4 0
NEI4 $1288
line 2642
;2642:	{
line 2643
;2643:		Cmd_Give_f (ent);
ADDRLP4 1024
INDIRP4
ARGP4
ADDRGP4 Cmd_Give_f
CALLV
pop
line 2644
;2644:	}
ADDRGP4 $1289
JUMPV
LABELV $1288
line 2645
;2645:	else if (Q_stricmp (cmd, "god") == 0)
ADDRLP4 0
ARGP4
ADDRGP4 $1231
ARGP4
ADDRLP4 1084
ADDRGP4 Q_stricmp
CALLI4
ASGNI4
ADDRLP4 1084
INDIRI4
CNSTI4 0
NEI4 $1290
line 2646
;2646:		Cmd_God_f (ent);
ADDRLP4 1024
INDIRP4
ARGP4
ADDRGP4 Cmd_God_f
CALLV
pop
ADDRGP4 $1291
JUMPV
LABELV $1290
line 2647
;2647:	else if (Q_stricmp (cmd, "notarget") == 0)
ADDRLP4 0
ARGP4
ADDRGP4 $1234
ARGP4
ADDRLP4 1088
ADDRGP4 Q_stricmp
CALLI4
ASGNI4
ADDRLP4 1088
INDIRI4
CNSTI4 0
NEI4 $1292
line 2648
;2648:		Cmd_Notarget_f (ent);
ADDRLP4 1024
INDIRP4
ARGP4
ADDRGP4 Cmd_Notarget_f
CALLV
pop
ADDRGP4 $1293
JUMPV
LABELV $1292
line 2649
;2649:	else if (Q_stricmp (cmd, "noclip") == 0)
ADDRLP4 0
ARGP4
ADDRGP4 $1237
ARGP4
ADDRLP4 1092
ADDRGP4 Q_stricmp
CALLI4
ASGNI4
ADDRLP4 1092
INDIRI4
CNSTI4 0
NEI4 $1294
line 2650
;2650:		Cmd_Noclip_f (ent);
ADDRLP4 1024
INDIRP4
ARGP4
ADDRGP4 Cmd_Noclip_f
CALLV
pop
ADDRGP4 $1295
JUMPV
LABELV $1294
line 2651
;2651:	else if (Q_stricmp (cmd, "kill") == 0)
ADDRLP4 0
ARGP4
ADDRGP4 $1240
ARGP4
ADDRLP4 1096
ADDRGP4 Q_stricmp
CALLI4
ASGNI4
ADDRLP4 1096
INDIRI4
CNSTI4 0
NEI4 $1296
line 2652
;2652:		Cmd_Kill_f (ent);
ADDRLP4 1024
INDIRP4
ARGP4
ADDRGP4 Cmd_Kill_f
CALLV
pop
ADDRGP4 $1297
JUMPV
LABELV $1296
line 2653
;2653:	else if (Q_stricmp (cmd, "teamtask") == 0)
ADDRLP4 0
ARGP4
ADDRGP4 $267
ARGP4
ADDRLP4 1100
ADDRGP4 Q_stricmp
CALLI4
ASGNI4
ADDRLP4 1100
INDIRI4
CNSTI4 0
NEI4 $1298
line 2654
;2654:		Cmd_TeamTask_f (ent);
ADDRLP4 1024
INDIRP4
ARGP4
ADDRGP4 Cmd_TeamTask_f
CALLV
pop
ADDRGP4 $1299
JUMPV
LABELV $1298
line 2655
;2655:	else if (Q_stricmp (cmd, "levelshot") == 0)
ADDRLP4 0
ARGP4
ADDRGP4 $1245
ARGP4
ADDRLP4 1104
ADDRGP4 Q_stricmp
CALLI4
ASGNI4
ADDRLP4 1104
INDIRI4
CNSTI4 0
NEI4 $1300
line 2656
;2656:		Cmd_LevelShot_f (ent);
ADDRLP4 1024
INDIRP4
ARGP4
ADDRGP4 Cmd_LevelShot_f
CALLV
pop
ADDRGP4 $1301
JUMPV
LABELV $1300
line 2657
;2657:	else if (Q_stricmp (cmd, "follow") == 0)
ADDRLP4 0
ARGP4
ADDRGP4 $1248
ARGP4
ADDRLP4 1108
ADDRGP4 Q_stricmp
CALLI4
ASGNI4
ADDRLP4 1108
INDIRI4
CNSTI4 0
NEI4 $1302
line 2658
;2658:		Cmd_Follow_f (ent);
ADDRLP4 1024
INDIRP4
ARGP4
ADDRGP4 Cmd_Follow_f
CALLV
pop
ADDRGP4 $1303
JUMPV
LABELV $1302
line 2659
;2659:	else if (Q_stricmp (cmd, "follownext") == 0)
ADDRLP4 0
ARGP4
ADDRGP4 $1251
ARGP4
ADDRLP4 1112
ADDRGP4 Q_stricmp
CALLI4
ASGNI4
ADDRLP4 1112
INDIRI4
CNSTI4 0
NEI4 $1304
line 2660
;2660:		Cmd_FollowCycle_f (ent, 1);
ADDRLP4 1024
INDIRP4
ARGP4
CNSTI4 1
ARGI4
ADDRGP4 Cmd_FollowCycle_f
CALLV
pop
ADDRGP4 $1305
JUMPV
LABELV $1304
line 2661
;2661:	else if (Q_stricmp (cmd, "followprev") == 0)
ADDRLP4 0
ARGP4
ADDRGP4 $1254
ARGP4
ADDRLP4 1116
ADDRGP4 Q_stricmp
CALLI4
ASGNI4
ADDRLP4 1116
INDIRI4
CNSTI4 0
NEI4 $1306
line 2662
;2662:		Cmd_FollowCycle_f (ent, -1);
ADDRLP4 1024
INDIRP4
ARGP4
CNSTI4 -1
ARGI4
ADDRGP4 Cmd_FollowCycle_f
CALLV
pop
ADDRGP4 $1307
JUMPV
LABELV $1306
line 2663
;2663:	else if (Q_stricmp (cmd, "team") == 0)
ADDRLP4 0
ARGP4
ADDRGP4 $1257
ARGP4
ADDRLP4 1120
ADDRGP4 Q_stricmp
CALLI4
ASGNI4
ADDRLP4 1120
INDIRI4
CNSTI4 0
NEI4 $1308
line 2664
;2664:		Cmd_Team_f (ent);
ADDRLP4 1024
INDIRP4
ARGP4
ADDRGP4 Cmd_Team_f
CALLV
pop
ADDRGP4 $1309
JUMPV
LABELV $1308
line 2665
;2665:	else if (Q_stricmp (cmd, "forcechanged") == 0)
ADDRLP4 0
ARGP4
ADDRGP4 $1260
ARGP4
ADDRLP4 1124
ADDRGP4 Q_stricmp
CALLI4
ASGNI4
ADDRLP4 1124
INDIRI4
CNSTI4 0
NEI4 $1310
line 2666
;2666:		Cmd_ForceChanged_f (ent);
ADDRLP4 1024
INDIRP4
ARGP4
ADDRGP4 Cmd_ForceChanged_f
CALLV
pop
ADDRGP4 $1311
JUMPV
LABELV $1310
line 2667
;2667:	else if (Q_stricmp (cmd, "where") == 0)
ADDRLP4 0
ARGP4
ADDRGP4 $1263
ARGP4
ADDRLP4 1128
ADDRGP4 Q_stricmp
CALLI4
ASGNI4
ADDRLP4 1128
INDIRI4
CNSTI4 0
NEI4 $1312
line 2668
;2668:		Cmd_Where_f (ent);
ADDRLP4 1024
INDIRP4
ARGP4
ADDRGP4 Cmd_Where_f
CALLV
pop
ADDRGP4 $1313
JUMPV
LABELV $1312
line 2669
;2669:	else if (Q_stricmp (cmd, "callvote") == 0)
ADDRLP4 0
ARGP4
ADDRGP4 $1266
ARGP4
ADDRLP4 1132
ADDRGP4 Q_stricmp
CALLI4
ASGNI4
ADDRLP4 1132
INDIRI4
CNSTI4 0
NEI4 $1314
line 2670
;2670:		Cmd_CallVote_f (ent);
ADDRLP4 1024
INDIRP4
ARGP4
ADDRGP4 Cmd_CallVote_f
CALLV
pop
ADDRGP4 $1315
JUMPV
LABELV $1314
line 2671
;2671:	else if (Q_stricmp (cmd, "vote") == 0)
ADDRLP4 0
ARGP4
ADDRGP4 $1269
ARGP4
ADDRLP4 1136
ADDRGP4 Q_stricmp
CALLI4
ASGNI4
ADDRLP4 1136
INDIRI4
CNSTI4 0
NEI4 $1316
line 2672
;2672:		Cmd_Vote_f (ent);
ADDRLP4 1024
INDIRP4
ARGP4
ADDRGP4 Cmd_Vote_f
CALLV
pop
ADDRGP4 $1317
JUMPV
LABELV $1316
line 2673
;2673:	else if (Q_stricmp (cmd, "callteamvote") == 0)
ADDRLP4 0
ARGP4
ADDRGP4 $1272
ARGP4
ADDRLP4 1140
ADDRGP4 Q_stricmp
CALLI4
ASGNI4
ADDRLP4 1140
INDIRI4
CNSTI4 0
NEI4 $1318
line 2674
;2674:		Cmd_CallTeamVote_f (ent);
ADDRLP4 1024
INDIRP4
ARGP4
ADDRGP4 Cmd_CallTeamVote_f
CALLV
pop
ADDRGP4 $1319
JUMPV
LABELV $1318
line 2675
;2675:	else if (Q_stricmp (cmd, "teamvote") == 0)
ADDRLP4 0
ARGP4
ADDRGP4 $1275
ARGP4
ADDRLP4 1144
ADDRGP4 Q_stricmp
CALLI4
ASGNI4
ADDRLP4 1144
INDIRI4
CNSTI4 0
NEI4 $1320
line 2676
;2676:		Cmd_TeamVote_f (ent);
ADDRLP4 1024
INDIRP4
ARGP4
ADDRGP4 Cmd_TeamVote_f
CALLV
pop
ADDRGP4 $1321
JUMPV
LABELV $1320
line 2677
;2677:	else if (Q_stricmp (cmd, "gc") == 0)
ADDRLP4 0
ARGP4
ADDRGP4 $1278
ARGP4
ADDRLP4 1148
ADDRGP4 Q_stricmp
CALLI4
ASGNI4
ADDRLP4 1148
INDIRI4
CNSTI4 0
NEI4 $1322
line 2678
;2678:		Cmd_GameCommand_f( ent );
ADDRLP4 1024
INDIRP4
ARGP4
ADDRGP4 Cmd_GameCommand_f
CALLV
pop
ADDRGP4 $1323
JUMPV
LABELV $1322
line 2679
;2679:	else if (Q_stricmp (cmd, "setviewpos") == 0)
ADDRLP4 0
ARGP4
ADDRGP4 $1281
ARGP4
ADDRLP4 1152
ADDRGP4 Q_stricmp
CALLI4
ASGNI4
ADDRLP4 1152
INDIRI4
CNSTI4 0
NEI4 $1324
line 2680
;2680:		Cmd_SetViewpos_f( ent );
ADDRLP4 1024
INDIRP4
ARGP4
ADDRGP4 Cmd_SetViewpos_f
CALLV
pop
ADDRGP4 $1325
JUMPV
LABELV $1324
line 2681
;2681:	else if (Q_stricmp (cmd, "stats") == 0)
ADDRLP4 0
ARGP4
ADDRGP4 $1284
ARGP4
ADDRLP4 1156
ADDRGP4 Q_stricmp
CALLI4
ASGNI4
ADDRLP4 1156
INDIRI4
CNSTI4 0
NEI4 $1326
line 2682
;2682:		Cmd_Stats_f( ent );
ADDRLP4 1024
INDIRP4
ARGP4
ADDRGP4 Cmd_Stats_f
CALLV
pop
ADDRGP4 $1327
JUMPV
LABELV $1326
line 2684
;2683:	//JediDog: Begin client commands
;2684:	else if (Q_stricmp(cmd, "help") == 0) {
ADDRLP4 0
ARGP4
ADDRGP4 $1330
ARGP4
ADDRLP4 1160
ADDRGP4 Q_stricmp
CALLI4
ASGNI4
ADDRLP4 1160
INDIRI4
CNSTI4 0
NEI4 $1328
line 2685
;2685:		trap_SendServerCommand(ent-g_entities,"print\"\n^5================\n   ^7HELP MENU\n^5================\n^2Mod information:\n^5Version '4.6'\nAuthor: ^5~^2J^5e^2d^5i^2D^5o^2g^5~\nMy Forum: http://jedidog.freeforums.org/\n\"");
ADDRLP4 1024
INDIRP4
CVPU4 4
ADDRGP4 g_entities
CVPU4 4
SUBU4
CVUI4 4
CNSTI4 832
DIVI4
ARGI4
ADDRGP4 $1331
ARGP4
ADDRGP4 trap_SendServerCommand
CALLV
pop
line 2686
;2686:		trap_SendServerCommand(ent-g_entities,"print\"^5Info: Anti Flood, Anti Force Crash, Anti Name Crash, Anti Fake Players & Anti MSGBoom. With a few extras.\n\"");
ADDRLP4 1024
INDIRP4
CVPU4 4
ADDRGP4 g_entities
CVPU4 4
SUBU4
CVUI4 4
CNSTI4 832
DIVI4
ARGI4
ADDRGP4 $1332
ARGP4
ADDRGP4 trap_SendServerCommand
CALLV
pop
line 2687
;2687:		trap_SendServerCommand(ent-g_entities,"print\"^2Client Commands:\n^5/help (this help menu)\n/sit (sit down)\n\"");
ADDRLP4 1024
INDIRP4
CVPU4 4
ADDRGP4 g_entities
CVPU4 4
SUBU4
CVUI4 4
CNSTI4 832
DIVI4
ARGI4
ADDRGP4 $1333
ARGP4
ADDRGP4 trap_SendServerCommand
CALLV
pop
line 2688
;2688:		trap_SendServerCommand(ent-g_entities,"print\"^2Admin Commands:\n^5/rcon sleep <Client Number> (make a client fall to sleep)\n/rcon slap <Client Number> (slap a client)\n/rcon csay <msg> (lets you talk in middle of screen)\n\"");
ADDRLP4 1024
INDIRP4
CVPU4 4
ADDRGP4 g_entities
CVPU4 4
SUBU4
CVUI4 4
CNSTI4 832
DIVI4
ARGI4
ADDRGP4 $1334
ARGP4
ADDRGP4 trap_SendServerCommand
CALLV
pop
line 2689
;2689:	}
ADDRGP4 $1329
JUMPV
LABELV $1328
line 2690
;2690:	else if (Q_stricmp(cmd, "admincmds") == 0) {
ADDRLP4 0
ARGP4
ADDRGP4 $1337
ARGP4
ADDRLP4 1164
ADDRGP4 Q_stricmp
CALLI4
ASGNI4
ADDRLP4 1164
INDIRI4
CNSTI4 0
NEI4 $1335
line 2692
;2691:		
;2692:	}
ADDRGP4 $1336
JUMPV
LABELV $1335
line 2693
;2693:	else if (Q_stricmp(cmd, "sit") == 0 ) {
ADDRLP4 0
ARGP4
ADDRGP4 $1340
ARGP4
ADDRLP4 1168
ADDRGP4 Q_stricmp
CALLI4
ASGNI4
ADDRLP4 1168
INDIRI4
CNSTI4 0
NEI4 $1338
line 2698
;2694://		if (jd_SitEmote.integer == 0) {
;2695://			trap_SendServerCommand(ent-g_entities, va("print\"^5Sit emote is disabled in this server.\n\""));
;2696://			return;
;2697://		}
;2698:		if (!g_gametype.integer == GT_TEAM || !g_gametype.integer == GT_FFA) {
ADDRGP4 g_gametype+12
INDIRI4
CNSTI4 0
NEI4 $1348
ADDRLP4 1172
CNSTI4 1
ASGNI4
ADDRGP4 $1349
JUMPV
LABELV $1348
ADDRLP4 1172
CNSTI4 0
ASGNI4
LABELV $1349
ADDRLP4 1172
INDIRI4
CNSTI4 5
EQI4 $1347
ADDRGP4 g_gametype+12
INDIRI4
CNSTI4 0
NEI4 $1350
ADDRLP4 1176
CNSTI4 1
ASGNI4
ADDRGP4 $1351
JUMPV
LABELV $1350
ADDRLP4 1176
CNSTI4 0
ASGNI4
LABELV $1351
ADDRLP4 1176
INDIRI4
CNSTI4 0
NEI4 $1341
LABELV $1347
line 2699
;2699:			trap_SendServerCommand(ent-g_entities, va("print\"^5Sit emote is disabled in this gametype.\n\""));
ADDRGP4 $1352
ARGP4
ADDRLP4 1180
ADDRGP4 va
CALLP4
ASGNP4
ADDRLP4 1024
INDIRP4
CVPU4 4
ADDRGP4 g_entities
CVPU4 4
SUBU4
CVUI4 4
CNSTI4 832
DIVI4
ARGI4
ADDRLP4 1180
INDIRP4
ARGP4
ADDRGP4 trap_SendServerCommand
CALLV
pop
line 2700
;2700:			return;
ADDRGP4 $1186
JUMPV
LABELV $1341
line 2702
;2701:		}
;2702:		if (ent->client->ps.groundEntityNum == ENTITYNUM_NONE) {
ADDRLP4 1024
INDIRP4
CNSTI4 408
ADDP4
INDIRP4
CNSTI4 84
ADDP4
INDIRI4
CNSTI4 1023
NEI4 $1353
line 2703
;2703:			return;
ADDRGP4 $1186
JUMPV
LABELV $1353
line 2705
;2704:		}
;2705:		if (ent->client->ps.legsAnim) {
ADDRLP4 1024
INDIRP4
CNSTI4 408
ADDP4
INDIRP4
CNSTI4 92
ADDP4
INDIRI4
CNSTI4 0
EQI4 $1339
line 2706
;2706:			ent->client->ps.saberCanThrow = qfalse;
ADDRLP4 1024
INDIRP4
CNSTI4 408
ADDP4
INDIRP4
CNSTI4 560
ADDP4
CNSTI4 0
ASGNI4
line 2707
;2707:			ent->client->freeze=1;
ADDRLP4 1024
INDIRP4
CNSTI4 408
ADDP4
INDIRP4
CNSTI4 1804
ADDP4
CNSTI4 1
ASGNI4
line 2708
;2708:			StandardSetBodyAnim(ent, BOTH_SIT2, SETANIM_FLAG_OVERRIDE|SETANIM_FLAG_HOLD|SETANIM_FLAG_HOLDLESS);
ADDRLP4 1024
INDIRP4
ARGP4
CNSTI4 779
ARGI4
CNSTI4 11
ARGI4
ADDRGP4 StandardSetBodyAnim
CALLV
pop
line 2709
;2709:			ent->client->ps.saberMove = LS_NONE;
ADDRLP4 1024
INDIRP4
CNSTI4 408
ADDP4
INDIRP4
CNSTI4 512
ADDP4
CNSTI4 0
ASGNI4
line 2710
;2710:		}
line 2711
;2711:	}
ADDRGP4 $1339
JUMPV
LABELV $1338
line 2798
;2712:	//JediDog: end of client commands
;2713:	/*
;2714:	else if (Q_stricmp(cmd, "#mm") == 0 && CheatsOk( ent ))
;2715:	{
;2716:		G_PlayerBecomeATST(ent);
;2717:	}
;2718:	*/
;2719:	//I broke the ATST when I restructured it to use a single global anim set for all client animation.
;2720:	//You can fix it, but you'll have to implement unique animations (per character) again.
;2721:#ifdef _DEBUG //sigh..
;2722:	else if (Q_stricmp(cmd, "headexplodey") == 0 && CheatsOk( ent ))
;2723:	{
;2724:		Cmd_Kill_f (ent);
;2725:		if (ent->health < 1)
;2726:		{
;2727:			float presaveVel = ent->client->ps.velocity[2];
;2728:			ent->client->ps.velocity[2] = 500;
;2729:			DismembermentTest(ent);
;2730:			ent->client->ps.velocity[2] = presaveVel;
;2731:		}
;2732:	}
;2733:	else if (Q_stricmp(cmd, "g2animent") == 0 && CheatsOk( ent ))
;2734:	{
;2735:		G_CreateExampleAnimEnt(ent);
;2736:	}
;2737:	else if (Q_stricmp(cmd, "loveandpeace") == 0 && CheatsOk( ent ))
;2738:	{
;2739:		trace_t tr;
;2740:		vec3_t fPos;
;2741:
;2742:		AngleVectors(ent->client->ps.viewangles, fPos, 0, 0);
;2743:
;2744:		fPos[0] = ent->client->ps.origin[0] + fPos[0]*40;
;2745:		fPos[1] = ent->client->ps.origin[1] + fPos[1]*40;
;2746:		fPos[2] = ent->client->ps.origin[2] + fPos[2]*40;
;2747:
;2748:		trap_Trace(&tr, ent->client->ps.origin, 0, 0, fPos, ent->s.number, ent->clipmask);
;2749:
;2750:		if (tr.entityNum < MAX_CLIENTS && tr.entityNum != ent->s.number)
;2751:		{
;2752:			gentity_t *other = &g_entities[tr.entityNum];
;2753:
;2754:			if (other && other->inuse && other->client)
;2755:			{
;2756:				vec3_t entDir;
;2757:				vec3_t otherDir;
;2758:				vec3_t entAngles;
;2759:				vec3_t otherAngles;
;2760:
;2761:				if (ent->client->ps.weapon == WP_SABER && !ent->client->ps.saberHolstered)
;2762:				{
;2763:					Cmd_ToggleSaber_f(ent);
;2764:				}
;2765:
;2766:				if (other->client->ps.weapon == WP_SABER && !other->client->ps.saberHolstered)
;2767:				{
;2768:					Cmd_ToggleSaber_f(other);
;2769:				}
;2770:
;2771:				if ((ent->client->ps.weapon != WP_SABER || ent->client->ps.saberHolstered) &&
;2772:					(other->client->ps.weapon != WP_SABER || other->client->ps.saberHolstered))
;2773:				{
;2774:					VectorSubtract( other->client->ps.origin, ent->client->ps.origin, otherDir );
;2775:					VectorCopy( ent->client->ps.viewangles, entAngles );
;2776:					entAngles[YAW] = vectoyaw( otherDir );
;2777:					SetClientViewAngle( ent, entAngles );
;2778:
;2779:					StandardSetBodyAnim(ent, BOTH_KISSER1LOOP, SETANIM_FLAG_OVERRIDE|SETANIM_FLAG_HOLD|SETANIM_FLAG_HOLDLESS);
;2780:					ent->client->ps.saberMove = LS_NONE;
;2781:					ent->client->ps.saberBlocked = 0;
;2782:					ent->client->ps.saberBlocking = 0;
;2783:
;2784:					VectorSubtract( ent->client->ps.origin, other->client->ps.origin, entDir );
;2785:					VectorCopy( other->client->ps.viewangles, otherAngles );
;2786:					otherAngles[YAW] = vectoyaw( entDir );
;2787:					SetClientViewAngle( other, otherAngles );
;2788:
;2789:					StandardSetBodyAnim(other, BOTH_KISSEE1LOOP, SETANIM_FLAG_OVERRIDE|SETANIM_FLAG_HOLD|SETANIM_FLAG_HOLDLESS);
;2790:					other->client->ps.saberMove = LS_NONE;
;2791:					other->client->ps.saberBlocked = 0;
;2792:					other->client->ps.saberBlocking = 0;
;2793:				}
;2794:			}
;2795:		}
;2796:	}
;2797:#endif
;2798:	else if (Q_stricmp(cmd, "thedestroyer") == 0 && CheatsOk( ent ) && ent && ent->client && ent->client->ps.saberHolstered && ent->client->ps.weapon == WP_SABER)
ADDRLP4 0
ARGP4
ADDRGP4 $1359
ARGP4
ADDRLP4 1172
ADDRGP4 Q_stricmp
CALLI4
ASGNI4
ADDRLP4 1172
INDIRI4
CNSTI4 0
NEI4 $1357
ADDRLP4 1024
INDIRP4
ARGP4
ADDRLP4 1176
ADDRGP4 CheatsOk
CALLI4
ASGNI4
ADDRLP4 1180
CNSTI4 0
ASGNI4
ADDRLP4 1176
INDIRI4
ADDRLP4 1180
INDIRI4
EQI4 $1357
ADDRLP4 1188
CNSTU4 0
ASGNU4
ADDRLP4 1024
INDIRP4
CVPU4 4
ADDRLP4 1188
INDIRU4
EQU4 $1357
ADDRLP4 1192
ADDRLP4 1024
INDIRP4
CNSTI4 408
ADDP4
INDIRP4
ASGNP4
ADDRLP4 1192
INDIRP4
CVPU4 4
ADDRLP4 1188
INDIRU4
EQU4 $1357
ADDRLP4 1192
INDIRP4
CNSTI4 1312
ADDP4
INDIRI4
ADDRLP4 1180
INDIRI4
EQI4 $1357
ADDRLP4 1192
INDIRP4
CNSTI4 148
ADDP4
INDIRI4
CNSTI4 2
NEI4 $1357
line 2799
;2799:	{
line 2800
;2800:		Cmd_ToggleSaber_f(ent);
ADDRLP4 1024
INDIRP4
ARGP4
ADDRGP4 Cmd_ToggleSaber_f
CALLV
pop
line 2802
;2801:
;2802:		if (!ent->client->ps.saberHolstered)
ADDRLP4 1024
INDIRP4
CNSTI4 408
ADDP4
INDIRP4
CNSTI4 1312
ADDP4
INDIRI4
CNSTI4 0
NEI4 $1358
line 2803
;2803:		{
line 2804
;2804:			if (ent->client->ps.dualBlade)
ADDRLP4 1024
INDIRP4
CNSTI4 408
ADDP4
INDIRP4
CNSTI4 1364
ADDP4
INDIRI4
CNSTI4 0
EQI4 $1362
line 2805
;2805:			{
line 2806
;2806:				ent->client->ps.dualBlade = qfalse;
ADDRLP4 1024
INDIRP4
CNSTI4 408
ADDP4
INDIRP4
CNSTI4 1364
ADDP4
CNSTI4 0
ASGNI4
line 2808
;2807:				//ent->client->ps.fd.saberAnimLevel = FORCE_LEVEL_1;
;2808:			}
ADDRGP4 $1358
JUMPV
LABELV $1362
line 2810
;2809:			else
;2810:			{
line 2811
;2811:				ent->client->ps.dualBlade = qtrue;
ADDRLP4 1024
INDIRP4
CNSTI4 408
ADDP4
INDIRP4
CNSTI4 1364
ADDP4
CNSTI4 1
ASGNI4
line 2813
;2812:
;2813:				trap_SendServerCommand( -1, va("print \"%sTHE DESTROYER COMETH\n\"", S_COLOR_RED) );
ADDRGP4 $1364
ARGP4
ADDRGP4 $1365
ARGP4
ADDRLP4 1196
ADDRGP4 va
CALLP4
ASGNP4
CNSTI4 -1
ARGI4
ADDRLP4 1196
INDIRP4
ARGP4
ADDRGP4 trap_SendServerCommand
CALLV
pop
line 2814
;2814:				G_ScreenShake(vec3_origin, NULL, 10.0f, 800, qtrue);
ADDRGP4 vec3_origin
ARGP4
CNSTP4 0
ARGP4
CNSTF4 1092616192
ARGF4
CNSTI4 800
ARGI4
CNSTI4 1
ARGI4
ADDRGP4 G_ScreenShake
CALLP4
pop
line 2816
;2815:				//ent->client->ps.fd.saberAnimLevel = FORCE_LEVEL_3;
;2816:			}
line 2817
;2817:		}
line 2818
;2818:	}
ADDRGP4 $1358
JUMPV
LABELV $1357
line 2867
;2819:#ifdef _DEBUG
;2820:	else if (Q_stricmp(cmd, "debugSetSaberMove") == 0)
;2821:	{
;2822:		Cmd_DebugSetSaberMove_f(ent);
;2823:	}
;2824:	else if (Q_stricmp(cmd, "debugSetBodyAnim") == 0)
;2825:	{
;2826:		Cmd_DebugSetBodyAnim_f(ent, SETANIM_FLAG_OVERRIDE|SETANIM_FLAG_HOLD);
;2827:	}
;2828:	else if (Q_stricmp(cmd, "debugDismemberment") == 0)
;2829:	{
;2830:		Cmd_Kill_f (ent);
;2831:		if (ent->health < 1)
;2832:		{
;2833:			char	arg[MAX_STRING_CHARS];
;2834:			int		iArg = 0;
;2835:
;2836:			if (trap_Argc() > 1)
;2837:			{
;2838:				trap_Argv( 1, arg, sizeof( arg ) );
;2839:
;2840:				if (arg[0])
;2841:				{
;2842:					iArg = atoi(arg);
;2843:				}
;2844:			}
;2845:
;2846:			DismembermentByNum(ent, iArg);
;2847:		}
;2848:	}
;2849:	else if (Q_stricmp(cmd, "debugKnockMeDown") == 0)
;2850:	{
;2851:		ent->client->ps.forceHandExtend = HANDEXTEND_KNOCKDOWN;
;2852:		ent->client->ps.forceDodgeAnim = 0;
;2853:		if (trap_Argc() > 1)
;2854:		{
;2855:			ent->client->ps.forceHandExtendTime = level.time + 1100;
;2856:			ent->client->ps.quickerGetup = qfalse;
;2857:		}
;2858:		else
;2859:		{
;2860:			ent->client->ps.forceHandExtendTime = level.time + 700;
;2861:			ent->client->ps.quickerGetup = qtrue;
;2862:		}
;2863:	}
;2864:#endif
;2865:
;2866:	else
;2867:	{
line 2868
;2868:		if (Q_stricmp(cmd, "addbot") == 0)
ADDRLP4 0
ARGP4
ADDRGP4 $1368
ARGP4
ADDRLP4 1196
ADDRGP4 Q_stricmp
CALLI4
ASGNI4
ADDRLP4 1196
INDIRI4
CNSTI4 0
NEI4 $1366
line 2869
;2869:		{ //because addbot isn't a recognized command unless you're the server, but it is in the menus regardless
line 2871
;2870://			trap_SendServerCommand( clientNum, va("print \"You can only add bots as the server.\n\"" ) );
;2871:			trap_SendServerCommand( clientNum, va("print \"%s.\n\"", G_GetStripEdString("SVINGAME", "ONLY_ADD_BOTS_AS_SERVER")));
ADDRGP4 $116
ARGP4
ADDRGP4 $1370
ARGP4
ADDRLP4 1200
ADDRGP4 G_GetStripEdString
CALLP4
ASGNP4
ADDRGP4 $1369
ARGP4
ADDRLP4 1200
INDIRP4
ARGP4
ADDRLP4 1204
ADDRGP4 va
CALLP4
ASGNP4
ADDRFP4 0
INDIRI4
ARGI4
ADDRLP4 1204
INDIRP4
ARGP4
ADDRGP4 trap_SendServerCommand
CALLV
pop
line 2872
;2872:		}
ADDRGP4 $1367
JUMPV
LABELV $1366
line 2874
;2873:		else
;2874:		{
line 2875
;2875:			trap_SendServerCommand( clientNum, va("print \"unknown cmd %s\n\"", cmd ) );
ADDRGP4 $1371
ARGP4
ADDRLP4 0
ARGP4
ADDRLP4 1200
ADDRGP4 va
CALLP4
ASGNP4
ADDRFP4 0
INDIRI4
ARGI4
ADDRLP4 1200
INDIRP4
ARGP4
ADDRGP4 trap_SendServerCommand
CALLV
pop
line 2876
;2876:		}
LABELV $1367
line 2877
;2877:	}
LABELV $1358
LABELV $1339
LABELV $1336
LABELV $1329
LABELV $1327
LABELV $1325
LABELV $1323
LABELV $1321
LABELV $1319
LABELV $1317
LABELV $1315
LABELV $1313
LABELV $1311
LABELV $1309
LABELV $1307
LABELV $1305
LABELV $1303
LABELV $1301
LABELV $1299
LABELV $1297
LABELV $1295
LABELV $1293
LABELV $1291
LABELV $1289
line 2878
;2878:}
LABELV $1186
endproc ClientCommand 1208 20
import DismembermentTest
import PM_SetAnim
import saberOnSound
import saberOffSound
import BG_CycleForce
import BG_CycleInven
import AcceptBotCommand
import trap_ROFF_Purge_Ent
import trap_ROFF_Play
import trap_ROFF_Cache
import trap_ROFF_UpdateEntities
import trap_ROFF_Clean
import trap_SP_GetStringTextString
import trap_SP_Register
import trap_SP_RegisterServer
import trap_SnapVector
import trap_GeneticParentsAndChildSelection
import trap_BotResetWeaponState
import trap_BotFreeWeaponState
import trap_BotAllocWeaponState
import trap_BotLoadWeaponWeights
import trap_BotGetWeaponInfo
import trap_BotChooseBestFightWeapon
import trap_BotAddAvoidSpot
import trap_BotInitMoveState
import trap_BotFreeMoveState
import trap_BotAllocMoveState
import trap_BotPredictVisiblePosition
import trap_BotMovementViewTarget
import trap_BotReachabilityArea
import trap_BotResetLastAvoidReach
import trap_BotResetAvoidReach
import trap_BotMoveInDirection
import trap_BotMoveToGoal
import trap_BotResetMoveState
import trap_BotFreeGoalState
import trap_BotAllocGoalState
import trap_BotMutateGoalFuzzyLogic
import trap_BotSaveGoalFuzzyLogic
import trap_BotInterbreedGoalFuzzyLogic
import trap_BotFreeItemWeights
import trap_BotLoadItemWeights
import trap_BotUpdateEntityItems
import trap_BotInitLevelItems
import trap_BotSetAvoidGoalTime
import trap_BotAvoidGoalTime
import trap_BotGetLevelItemGoal
import trap_BotGetMapLocationGoal
import trap_BotGetNextCampSpotGoal
import trap_BotItemGoalInVisButNotVisible
import trap_BotTouchingGoal
import trap_BotChooseNBGItem
import trap_BotChooseLTGItem
import trap_BotGetSecondGoal
import trap_BotGetTopGoal
import trap_BotGoalName
import trap_BotDumpGoalStack
import trap_BotDumpAvoidGoals
import trap_BotEmptyGoalStack
import trap_BotPopGoal
import trap_BotPushGoal
import trap_BotResetAvoidGoals
import trap_BotRemoveFromAvoidGoals
import trap_BotResetGoalState
import trap_BotSetChatName
import trap_BotSetChatGender
import trap_BotLoadChatFile
import trap_BotReplaceSynonyms
import trap_UnifyWhiteSpaces
import trap_BotMatchVariable
import trap_BotFindMatch
import trap_StringContains
import trap_BotGetChatMessage
import trap_BotEnterChat
import trap_BotChatLength
import trap_BotReplyChat
import trap_BotNumInitialChats
import trap_BotInitialChat
import trap_BotNumConsoleMessages
import trap_BotNextConsoleMessage
import trap_BotRemoveConsoleMessage
import trap_BotQueueConsoleMessage
import trap_BotFreeChatState
import trap_BotAllocChatState
import trap_Characteristic_String
import trap_Characteristic_BInteger
import trap_Characteristic_Integer
import trap_Characteristic_BFloat
import trap_Characteristic_Float
import trap_BotFreeCharacter
import trap_BotLoadCharacter
import trap_EA_ResetInput
import trap_EA_GetInput
import trap_EA_EndRegular
import trap_EA_ForcePower
import trap_EA_Alt_Attack
import trap_EA_View
import trap_EA_Move
import trap_EA_DelayedJump
import trap_EA_Jump
import trap_EA_SelectWeapon
import trap_EA_MoveRight
import trap_EA_MoveLeft
import trap_EA_MoveBack
import trap_EA_MoveForward
import trap_EA_MoveDown
import trap_EA_MoveUp
import trap_EA_Crouch
import trap_EA_Respawn
import trap_EA_Use
import trap_EA_Attack
import trap_EA_Talk
import trap_EA_Gesture
import trap_EA_Action
import trap_EA_Command
import trap_EA_SayTeam
import trap_EA_Say
import trap_AAS_PredictClientMovement
import trap_AAS_Swimming
import trap_AAS_AlternativeRouteGoals
import trap_AAS_PredictRoute
import trap_AAS_EnableRoutingArea
import trap_AAS_AreaTravelTimeToGoalArea
import trap_AAS_AreaReachability
import trap_AAS_IntForBSPEpairKey
import trap_AAS_FloatForBSPEpairKey
import trap_AAS_VectorForBSPEpairKey
import trap_AAS_ValueForBSPEpairKey
import trap_AAS_NextBSPEntity
import trap_AAS_PointContents
import trap_AAS_TraceAreas
import trap_AAS_PointReachabilityAreaIndex
import trap_AAS_PointAreaNum
import trap_AAS_Time
import trap_AAS_PresenceTypeBoundingBox
import trap_AAS_Initialized
import trap_AAS_EntityInfo
import trap_AAS_AreaInfo
import trap_AAS_BBoxAreas
import trap_BotUserCommand
import trap_BotGetServerCommand
import trap_BotGetSnapshotEntity
import trap_BotLibTest
import trap_BotLibUpdateEntity
import trap_BotLibLoadMap
import trap_BotLibStartFrame
import trap_BotLibDefine
import trap_BotLibVarGet
import trap_BotLibVarSet
import trap_BotLibShutdown
import trap_BotLibSetup
import trap_DebugPolygonDelete
import trap_DebugPolygonCreate
import trap_GetEntityToken
import trap_GetUsercmd
import trap_BotFreeClient
import trap_BotAllocateClient
import trap_EntityContact
import trap_EntitiesInBox
import trap_UnlinkEntity
import trap_LinkEntity
import trap_AreasConnected
import trap_AdjustAreaPortalState
import trap_InPVSIgnorePortals
import trap_InPVS
import trap_PointContents
import trap_Trace
import trap_SetBrushModel
import trap_GetServerinfo
import trap_SetUserinfo
import trap_GetUserinfo
import trap_GetConfigstring
import trap_SetConfigstring
import trap_SendServerCommand
import trap_DropClient
import trap_LocateGameData
import trap_Cvar_VariableStringBuffer
import trap_Cvar_VariableValue
import trap_Cvar_VariableIntegerValue
import trap_Cvar_Set
import trap_Cvar_Update
import trap_Cvar_Register
import trap_SendConsoleCommand
import trap_FS_GetFileList
import trap_FS_FCloseFile
import trap_FS_Write
import trap_FS_Read
import trap_FS_FOpenFile
import trap_Args
import trap_Argv
import trap_Argc
import trap_Milliseconds
import trap_Error
import trap_Printf
import jd_Messages
import jd_CloseServer
import g_austrian
import g_saberDebugPrint
import g_saberDmgDelay_Wound
import g_saberDmgDelay_Idle
import g_saberDmgVelocityScale
import g_timeouttospec
import g_forceDodge
import g_dismember
import g_singlePlayer
import g_enableBreath
import g_enableDust
import g_rankings
import pmove_msec
import pmove_fixed
import g_smoothClients
import g_blueteam
import g_redteam
import g_debugUp
import g_debugRight
import g_debugForward
import g_filterBan
import g_banIPs
import g_teamForceBalance
import g_teamAutoJoin
import g_allowVote
import g_blood
import g_doWarmup
import g_warmup
import g_motd
import g_synchronousClients
import g_adaptRespawn
import g_weaponTeamRespawn
import g_weaponRespawn
import g_debugDamage
import g_debugAlloc
import g_debugMove
import g_inactivity
import g_forcerespawn
import g_quadfactor
import g_knockback
import g_speed
import g_gravity
import g_needpass
import g_password
import g_friendlySaber
import g_friendlyFire
import g_saberInterpolate
import g_capturelimit
import g_timelimit
import g_duel_fraglimit
import g_fraglimit
import g_duelWeaponDisable
import g_fraglimitVoteCorrection
import g_allowDuelSuicide
import g_weaponDisable
import g_forcePowerDisable
import g_spawnInvulnerability
import g_forceRegenTime
import g_saberDamageScale
import g_slowmoDuelEnd
import g_logClientInfo
import g_saberBoxTraceSize
import g_saberAlwaysBoxTrace
import g_saberGhoul2Collision
import g_saberTraceSaberFirst
import g_saberLockFactor
import g_saberLocking
import g_privateDuel
import g_forceBasedTeams
import g_maxForceRank
import g_dmflags
import g_autoMapCycle
import g_trueJedi
import g_restarted
import g_maxGameClients
import g_maxclients
import g_cheats
import g_dedicated
import g_gametype
import g_entities
import level
import Pickup_Team
import CheckTeamStatus
import TeamplayInfoMessage
import Team_GetLocationMsg
import Team_GetLocation
import SelectSagaSpawnPoint
import SelectCTFSpawnPoint
import Team_FreeEntity
import Team_ReturnFlag
import Team_InitGame
import Team_CheckHurtCarrier
import Team_FragBonuses
import Team_DroppedFlagThink
import AddTeamScore
import TeamColorString
import OtherTeamName
import TeamName
import OtherTeam
import BotAIStartFrame
import BotAIShutdownClient
import BotAISetupClient
import BotAILoadMap
import BotAIShutdown
import BotAISetup
import B_CleanupAlloc
import B_InitAlloc
import InFieldOfVision
import BotOrder
import OrgVisible
import InitSagaMode
import G_ClearClientLog
import G_LogExit
import G_LogWeaponOutput
import G_LogWeaponInit
import G_LogWeaponItem
import G_LogWeaponPowerup
import G_LogWeaponFrag
import G_LogWeaponDeath
import G_LogWeaponKill
import G_LogWeaponDamage
import G_LogWeaponFire
import G_LogWeaponPickup
import Jedi_DodgeEvasion
import ForceTelepathy
import ForceThrow
import ForceSeeing
import ForceTeamForceReplenish
import ForceTeamHeal
import ForceAbsorb
import ForceProtect
import ForceGrip
import ForceRage
import ForceSpeed
import ForceHeal
import ForcePowerUsableOn
import WP_ForcePowersUpdate
import WP_SpawnInitForcePowers
import WP_InitForcePowers
import WP_SaberInitBladeData
import WP_SaberCanBlock
import WP_SaberPositionUpdate
import WP_ForcePowerStop
import HasSetSaberOnly
import G_PreDefSound
import G_RefreshNextMap
import G_DoesMapSupportGametype
import BotInterbreedEndMatch
import Svcmd_BotList_f
import Svcmd_AddBot_f
import G_BotConnect
import G_RemoveQueuedBotBegin
import G_CheckBotSpawn
import G_GetBotInfoByName
import G_GetBotInfoByNumber
import G_InitBots
import UpdateTournamentInfo
import G_WriteSessionData
import G_InitWorldSession
import G_InitSessionData
import G_ReadSessionData
import Svcmd_GameMem_f
import G_InitMemory
import G_Alloc
import Team_CheckDroppedItem
import OnSameTeam
import G_RunClient
import ClientEndFrame
import ClientThink
import G_CheckClientTimeouts
import ClientBegin
import ClientDisconnect
import ClientUserinfoChanged
import ClientConnect
import G_GetStripEdString
import G_Error
import G_Printf
import SendScoreboardMessageToAllClients
import G_LogPrintf
import G_RunThink
import CheckTeamLeader
import SetLeader
import FindIntermissionPoint
import gSlowMoDuelTime
import gDoSlowMoDuel
import g_ff_objectives
import G_SetStats
import MoveClientToIntermission
import BlowDetpacks
import FireWeapon
import G_FilterPacket
import G_ProcessIPBans
import ConsoleCommand
import gJMSaberEnt
import SpotWouldTelefrag
import CalculateRanks
import AddScore
import player_die
import ClientSpawn
import InitBodyQue
import BeginIntermission
import respawn
import CopyToBodyQue
import SelectSpawnPoint
import SetClientViewAngle
import PickTeam
import TeamLeader
import TeamCount
import CheckGauntletAttack
import SnapVectorTowards
import CalcMuzzlePoint
import LogAccuracyHit
import WP_FireGenericBlasterMissile
import WP_FireTurretMissile
import G_CreateExampleAnimEnt
import G_PlayerBecomeATST
import ATST_ManageDamageBoxes
import TeleportPlayer
import trigger_teleporter_touch
import Touch_DoorTrigger
import G_RunMover
import WP_FireBlasterMissile
import G_ExplodeMissile
import G_BounceProjectile
import CreateMissile
import G_RunMissile
import G_ReflectMissile
import gGAvoidDismember
import G_CheckForDismemberment
import ExplodeDeath
import TossClientCubes
import TossClientItems
import TossClientWeapon
import body_die
import G_RadiusDamage
import G_Damage
import CanDamage
import trap_G2API_SetBoneAnim
import trap_G2API_GetGLAName
import trap_G2API_SetBoneAngles
import trap_G2API_CollisionDetect
import trap_G2API_CleanGhoul2Models
import trap_G2API_RemoveGhoul2Model
import trap_G2API_HasGhoul2ModelOnIndex
import trap_G2API_DuplicateGhoul2Instance
import trap_G2API_CopySpecificGhoul2Model
import trap_G2API_CopyGhoul2Instance
import trap_G2API_SetBoltInfo
import trap_G2API_AddBolt
import trap_G2API_InitGhoul2Model
import trap_G2API_GetBoltMatrix_NoRecNoRot
import trap_G2API_GetBoltMatrix_NoReconstruct
import trap_G2API_GetBoltMatrix
import trap_G2_HaveWeGhoul2Models
import trap_G2_SetGhoul2ModelIndexes
import trap_G2_ListModelBones
import trap_G2_ListModelSurfaces
import G_SkinIndex
import BuildShaderStateConfig
import AddRemap
import G_SetOrigin
import G_AddEvent
import G_AddPredictableEvent
import vtos
import tv
import G_RunObject
import G_TouchSolids
import G_TouchTriggers
import G_EntitiesFree
import G_FreeEntity
import G_KillG2Queue
import G_SendG2KillQueue
import TryUse
import G_EntitySound
import G_SoundAtLoc
import G_Sound
import G_MuteSound
import G_ScreenShake
import G_PlayEffect
import G_TempEntity
import G_Spawn
import G_InitGentity
import G_SetAngles
import G_SetMovedir
import G_UseTargets
import G_PickTarget
import G_RadiusList
import G_Find
import G_KillBox
import G_TeamCommand
import G_EffectIndex
import G_SoundIndex
import G_ModelIndex
import SaveRegisteredItems
import RegisterItem
import ClearRegisteredItems
import Touch_Item
import Add_Ammo
import ArmorIndex
import Think_Weapon
import FinishSpawningItem
import G_SpawnItem
import SetRespawn
import LaunchItem
import Drop_Item
import PrecacheItem
import UseHoldableItem
import RespawnItem
import G_RunItem
import G_CheckTeamItems
import ItemUse_MedPack
import ItemUse_Seeker
import ItemUse_Sentry
import ItemUse_Shield
import ItemUse_Binoculars
import G_NewString
import G_SpawnEntitiesFromString
import G_SpawnVector
import G_SpawnInt
import G_SpawnFloat
import G_SpawnString
import gEscapeTime
import gEscaping
import g2SaberInstance
import precachedKyle
import forcePowerDarkLight
import WeaponAttackAnim
import WeaponReadyAnim
import BG_OutOfMemory
import BG_StringAlloc
import BG_TempFree
import BG_TempAlloc
import BG_AllocUnaligned
import BG_Alloc
import BG_CanUseFPNow
import BG_HasYsalamiri
import BG_GetItemIndexByTag
import BG_ParseAnimationFile
import BG_PlayerTouchesItem
import BG_PlayerStateToEntityStateExtraPolate
import BG_PlayerStateToEntityState
import BG_TouchJumpPad
import BG_AddPredictableEventToPlayerstate
import BG_EvaluateTrajectoryDelta
import BG_EvaluateTrajectory
import BG_ForcePowerDrain
import BG_SaberStartTransAnim
import BG_InDeathAnim
import BG_InRoll
import BG_KnockawayForParry
import BG_BrokenParryForParry
import BG_BrokenParryForAttack
import BG_SaberInSpecialAttack
import BG_SpinningSaberAnim
import BG_FlippingAnim
import BG_SaberInIdle
import BG_SaberInSpecial
import BG_SaberInAttack
import BG_DirectFlippingAnim
import BG_InSaberStandAnim
import BG_InSpecialJump
import BG_LegalizedForcePowers
import saberMoveData
import BG_CanItemBeGrabbed
import BG_FindItemForHoldable
import BG_FindItemForPowerup
import BG_FindItemForWeapon
import BG_FindItem
import vectoyaw
import bg_numItems
import bg_itemlist
import Pmove
import PM_UpdateViewAngles
import pm
import bgForcePowerCost
import forceMasteryPoints
import forceMasteryLevels
import bgGlobalAnimations
import BGPAFtextLoaded
import forcePowerSorted
import WP_MuzzlePoint
import ammoData
import weaponData
import GetStringForID
import GetIDForString
import Q_irand
import irand
import flrand
import Rand_Init
import Com_Printf
import Com_Error
import Info_NextPair
import Info_Validate
import Info_SetValueForKey_Big
import Info_SetValueForKey
import Info_RemoveKey_big
import Info_RemoveKey
import Info_ValueForKey
import va
import Q_CleanStr
import Q_PrintStrlen
import Q_strcat
import Q_strncpyz
import Q_strrchr
import Q_strupr
import Q_strlwr
import Q_stricmpn
import Q_strncmp
import Q_stricmp
import Q_isalpha
import Q_isupper
import Q_islower
import Q_isprint
import Com_sprintf
import Parse3DMatrix
import Parse2DMatrix
import Parse1DMatrix
import SkipRestOfLine
import SkipBracedSection
import COM_MatchToken
import COM_ParseVec4
import COM_ParseFloat
import COM_ParseInt
import COM_ParseString
import COM_ParseWarning
import COM_ParseError
import COM_Compress
import COM_ParseExt
import COM_Parse
import SkipWhitespace
import COM_GetCurrentParseLine
import COM_BeginParseSession
import COM_DefaultExtension
import COM_StripExtension
import COM_SkipPath
import Com_Clamp
import PerpendicularVector
import AngleVectors
import MatrixMultiply
import MakeNormalVectors
import RotateAroundDirection
import RotatePointAroundVector
import ProjectPointOnPlane
import PlaneFromPoints
import AngleDelta
import AngleNormalize180
import AngleNormalize360
import AnglesSubtract
import AngleSubtract
import LerpAngle
import AngleMod
import BoxOnPlaneSide
import SetPlaneSignbits
import AxisCopy
import AxisClear
import AnglesToAxis
import vectoangles
import Q_crandom
import Q_random
import Q_rand
import Q_acos
import Q_log2
import VectorRotate
import Vector4Scale
import VectorNormalize2
import VectorNormalize
import CrossProduct
import VectorInverse
import VectorNormalizeFast
import DistanceSquared
import Distance
import VectorLengthSquared
import VectorLength
import VectorCompare
import AddPointToBounds
import ClearBounds
import RadiusFromBounds
import NormalizeColor
import ColorBytes4
import ColorBytes3
import _VectorMA
import _VectorScale
import _VectorCopy
import _VectorAdd
import _VectorSubtract
import _DotProduct
import ByteToDir
import DirToByte
import powf
import ClampShort
import ClampChar
import Q_rsqrt
import Q_fabs
import axisDefault
import vec3_origin
import g_color_table
import colorDkBlue
import colorLtBlue
import colorDkGrey
import colorMdGrey
import colorLtGrey
import colorWhite
import colorCyan
import colorMagenta
import colorYellow
import colorBlue
import colorGreen
import colorRed
import colorBlack
import colorTable
import bytedirs
import Com_Memcpy
import Com_Memset
import Hunk_Alloc
import forceSpeedLevels
import FloatSwap
import LongSwap
import ShortSwap
import acos
import fabs
import abs
import tan
import atan2
import cos
import sin
import sqrt
import floor
import ceil
import memcpy
import memset
import memmove
import sscanf
import vsprintf
import _atoi
import atoi
import _atof
import atof
import toupper
import tolower
import strncpy
import strstr
import strchr
import strcmp
import strcpy
import strcat
import strlen
import rand
import srand
import qsort
lit
align 1
LABELV $1371
char 1 112
char 1 114
char 1 105
char 1 110
char 1 116
char 1 32
char 1 34
char 1 117
char 1 110
char 1 107
char 1 110
char 1 111
char 1 119
char 1 110
char 1 32
char 1 99
char 1 109
char 1 100
char 1 32
char 1 37
char 1 115
char 1 10
char 1 34
char 1 0
align 1
LABELV $1370
char 1 79
char 1 78
char 1 76
char 1 89
char 1 95
char 1 65
char 1 68
char 1 68
char 1 95
char 1 66
char 1 79
char 1 84
char 1 83
char 1 95
char 1 65
char 1 83
char 1 95
char 1 83
char 1 69
char 1 82
char 1 86
char 1 69
char 1 82
char 1 0
align 1
LABELV $1369
char 1 112
char 1 114
char 1 105
char 1 110
char 1 116
char 1 32
char 1 34
char 1 37
char 1 115
char 1 46
char 1 10
char 1 34
char 1 0
align 1
LABELV $1368
char 1 97
char 1 100
char 1 100
char 1 98
char 1 111
char 1 116
char 1 0
align 1
LABELV $1365
char 1 94
char 1 49
char 1 0
align 1
LABELV $1364
char 1 112
char 1 114
char 1 105
char 1 110
char 1 116
char 1 32
char 1 34
char 1 37
char 1 115
char 1 84
char 1 72
char 1 69
char 1 32
char 1 68
char 1 69
char 1 83
char 1 84
char 1 82
char 1 79
char 1 89
char 1 69
char 1 82
char 1 32
char 1 67
char 1 79
char 1 77
char 1 69
char 1 84
char 1 72
char 1 10
char 1 34
char 1 0
align 1
LABELV $1359
char 1 116
char 1 104
char 1 101
char 1 100
char 1 101
char 1 115
char 1 116
char 1 114
char 1 111
char 1 121
char 1 101
char 1 114
char 1 0
align 1
LABELV $1352
char 1 112
char 1 114
char 1 105
char 1 110
char 1 116
char 1 34
char 1 94
char 1 53
char 1 83
char 1 105
char 1 116
char 1 32
char 1 101
char 1 109
char 1 111
char 1 116
char 1 101
char 1 32
char 1 105
char 1 115
char 1 32
char 1 100
char 1 105
char 1 115
char 1 97
char 1 98
char 1 108
char 1 101
char 1 100
char 1 32
char 1 105
char 1 110
char 1 32
char 1 116
char 1 104
char 1 105
char 1 115
char 1 32
char 1 103
char 1 97
char 1 109
char 1 101
char 1 116
char 1 121
char 1 112
char 1 101
char 1 46
char 1 10
char 1 34
char 1 0
align 1
LABELV $1340
char 1 115
char 1 105
char 1 116
char 1 0
align 1
LABELV $1337
char 1 97
char 1 100
char 1 109
char 1 105
char 1 110
char 1 99
char 1 109
char 1 100
char 1 115
char 1 0
align 1
LABELV $1334
char 1 112
char 1 114
char 1 105
char 1 110
char 1 116
char 1 34
char 1 94
char 1 50
char 1 65
char 1 100
char 1 109
char 1 105
char 1 110
char 1 32
char 1 67
char 1 111
char 1 109
char 1 109
char 1 97
char 1 110
char 1 100
char 1 115
char 1 58
char 1 10
char 1 94
char 1 53
char 1 47
char 1 114
char 1 99
char 1 111
char 1 110
char 1 32
char 1 115
char 1 108
char 1 101
char 1 101
char 1 112
char 1 32
char 1 60
char 1 67
char 1 108
char 1 105
char 1 101
char 1 110
char 1 116
char 1 32
char 1 78
char 1 117
char 1 109
char 1 98
char 1 101
char 1 114
char 1 62
char 1 32
char 1 40
char 1 109
char 1 97
char 1 107
char 1 101
char 1 32
char 1 97
char 1 32
char 1 99
char 1 108
char 1 105
char 1 101
char 1 110
char 1 116
char 1 32
char 1 102
char 1 97
char 1 108
char 1 108
char 1 32
char 1 116
char 1 111
char 1 32
char 1 115
char 1 108
char 1 101
char 1 101
char 1 112
char 1 41
char 1 10
char 1 47
char 1 114
char 1 99
char 1 111
char 1 110
char 1 32
char 1 115
char 1 108
char 1 97
char 1 112
char 1 32
char 1 60
char 1 67
char 1 108
char 1 105
char 1 101
char 1 110
char 1 116
char 1 32
char 1 78
char 1 117
char 1 109
char 1 98
char 1 101
char 1 114
char 1 62
char 1 32
char 1 40
char 1 115
char 1 108
char 1 97
char 1 112
char 1 32
char 1 97
char 1 32
char 1 99
char 1 108
char 1 105
char 1 101
char 1 110
char 1 116
char 1 41
char 1 10
char 1 47
char 1 114
char 1 99
char 1 111
char 1 110
char 1 32
char 1 99
char 1 115
char 1 97
char 1 121
char 1 32
char 1 60
char 1 109
char 1 115
char 1 103
char 1 62
char 1 32
char 1 40
char 1 108
char 1 101
char 1 116
char 1 115
char 1 32
char 1 121
char 1 111
char 1 117
char 1 32
char 1 116
char 1 97
char 1 108
char 1 107
char 1 32
char 1 105
char 1 110
char 1 32
char 1 109
char 1 105
char 1 100
char 1 100
char 1 108
char 1 101
char 1 32
char 1 111
char 1 102
char 1 32
char 1 115
char 1 99
char 1 114
char 1 101
char 1 101
char 1 110
char 1 41
char 1 10
char 1 34
char 1 0
align 1
LABELV $1333
char 1 112
char 1 114
char 1 105
char 1 110
char 1 116
char 1 34
char 1 94
char 1 50
char 1 67
char 1 108
char 1 105
char 1 101
char 1 110
char 1 116
char 1 32
char 1 67
char 1 111
char 1 109
char 1 109
char 1 97
char 1 110
char 1 100
char 1 115
char 1 58
char 1 10
char 1 94
char 1 53
char 1 47
char 1 104
char 1 101
char 1 108
char 1 112
char 1 32
char 1 40
char 1 116
char 1 104
char 1 105
char 1 115
char 1 32
char 1 104
char 1 101
char 1 108
char 1 112
char 1 32
char 1 109
char 1 101
char 1 110
char 1 117
char 1 41
char 1 10
char 1 47
char 1 115
char 1 105
char 1 116
char 1 32
char 1 40
char 1 115
char 1 105
char 1 116
char 1 32
char 1 100
char 1 111
char 1 119
char 1 110
char 1 41
char 1 10
char 1 34
char 1 0
align 1
LABELV $1332
char 1 112
char 1 114
char 1 105
char 1 110
char 1 116
char 1 34
char 1 94
char 1 53
char 1 73
char 1 110
char 1 102
char 1 111
char 1 58
char 1 32
char 1 65
char 1 110
char 1 116
char 1 105
char 1 32
char 1 70
char 1 108
char 1 111
char 1 111
char 1 100
char 1 44
char 1 32
char 1 65
char 1 110
char 1 116
char 1 105
char 1 32
char 1 70
char 1 111
char 1 114
char 1 99
char 1 101
char 1 32
char 1 67
char 1 114
char 1 97
char 1 115
char 1 104
char 1 44
char 1 32
char 1 65
char 1 110
char 1 116
char 1 105
char 1 32
char 1 78
char 1 97
char 1 109
char 1 101
char 1 32
char 1 67
char 1 114
char 1 97
char 1 115
char 1 104
char 1 44
char 1 32
char 1 65
char 1 110
char 1 116
char 1 105
char 1 32
char 1 70
char 1 97
char 1 107
char 1 101
char 1 32
char 1 80
char 1 108
char 1 97
char 1 121
char 1 101
char 1 114
char 1 115
char 1 32
char 1 38
char 1 32
char 1 65
char 1 110
char 1 116
char 1 105
char 1 32
char 1 77
char 1 83
char 1 71
char 1 66
char 1 111
char 1 111
char 1 109
char 1 46
char 1 32
char 1 87
char 1 105
char 1 116
char 1 104
char 1 32
char 1 97
char 1 32
char 1 102
char 1 101
char 1 119
char 1 32
char 1 101
char 1 120
char 1 116
char 1 114
char 1 97
char 1 115
char 1 46
char 1 10
char 1 34
char 1 0
align 1
LABELV $1331
char 1 112
char 1 114
char 1 105
char 1 110
char 1 116
char 1 34
char 1 10
char 1 94
char 1 53
char 1 61
char 1 61
char 1 61
char 1 61
char 1 61
char 1 61
char 1 61
char 1 61
char 1 61
char 1 61
char 1 61
char 1 61
char 1 61
char 1 61
char 1 61
char 1 61
char 1 10
char 1 32
char 1 32
char 1 32
char 1 94
char 1 55
char 1 72
char 1 69
char 1 76
char 1 80
char 1 32
char 1 77
char 1 69
char 1 78
char 1 85
char 1 10
char 1 94
char 1 53
char 1 61
char 1 61
char 1 61
char 1 61
char 1 61
char 1 61
char 1 61
char 1 61
char 1 61
char 1 61
char 1 61
char 1 61
char 1 61
char 1 61
char 1 61
char 1 61
char 1 10
char 1 94
char 1 50
char 1 77
char 1 111
char 1 100
char 1 32
char 1 105
char 1 110
char 1 102
char 1 111
char 1 114
char 1 109
char 1 97
char 1 116
char 1 105
char 1 111
char 1 110
char 1 58
char 1 10
char 1 94
char 1 53
char 1 86
char 1 101
char 1 114
char 1 115
char 1 105
char 1 111
char 1 110
char 1 32
char 1 39
char 1 52
char 1 46
char 1 54
char 1 39
char 1 10
char 1 65
char 1 117
char 1 116
char 1 104
char 1 111
char 1 114
char 1 58
char 1 32
char 1 94
char 1 53
char 1 126
char 1 94
char 1 50
char 1 74
char 1 94
char 1 53
char 1 101
char 1 94
char 1 50
char 1 100
char 1 94
char 1 53
char 1 105
char 1 94
char 1 50
char 1 68
char 1 94
char 1 53
char 1 111
char 1 94
char 1 50
char 1 103
char 1 94
char 1 53
char 1 126
char 1 10
char 1 77
char 1 121
char 1 32
char 1 70
char 1 111
char 1 114
char 1 117
char 1 109
char 1 58
char 1 32
char 1 104
char 1 116
char 1 116
char 1 112
char 1 58
char 1 47
char 1 47
char 1 106
char 1 101
char 1 100
char 1 105
char 1 100
char 1 111
char 1 103
char 1 46
char 1 102
char 1 114
char 1 101
char 1 101
char 1 102
char 1 111
char 1 114
char 1 117
char 1 109
char 1 115
char 1 46
char 1 111
char 1 114
char 1 103
char 1 47
char 1 10
char 1 34
char 1 0
align 1
LABELV $1330
char 1 104
char 1 101
char 1 108
char 1 112
char 1 0
align 1
LABELV $1287
char 1 112
char 1 114
char 1 105
char 1 110
char 1 116
char 1 32
char 1 34
char 1 89
char 1 111
char 1 117
char 1 32
char 1 99
char 1 97
char 1 110
char 1 110
char 1 111
char 1 116
char 1 32
char 1 112
char 1 101
char 1 114
char 1 102
char 1 111
char 1 114
char 1 109
char 1 32
char 1 116
char 1 104
char 1 105
char 1 115
char 1 32
char 1 116
char 1 97
char 1 115
char 1 107
char 1 32
char 1 40
char 1 37
char 1 115
char 1 41
char 1 32
char 1 100
char 1 117
char 1 114
char 1 105
char 1 110
char 1 103
char 1 32
char 1 116
char 1 104
char 1 101
char 1 32
char 1 105
char 1 110
char 1 116
char 1 101
char 1 114
char 1 109
char 1 105
char 1 115
char 1 115
char 1 105
char 1 111
char 1 110
char 1 46
char 1 10
char 1 34
char 1 0
align 1
LABELV $1284
char 1 115
char 1 116
char 1 97
char 1 116
char 1 115
char 1 0
align 1
LABELV $1281
char 1 115
char 1 101
char 1 116
char 1 118
char 1 105
char 1 101
char 1 119
char 1 112
char 1 111
char 1 115
char 1 0
align 1
LABELV $1278
char 1 103
char 1 99
char 1 0
align 1
LABELV $1275
char 1 116
char 1 101
char 1 97
char 1 109
char 1 118
char 1 111
char 1 116
char 1 101
char 1 0
align 1
LABELV $1272
char 1 99
char 1 97
char 1 108
char 1 108
char 1 116
char 1 101
char 1 97
char 1 109
char 1 118
char 1 111
char 1 116
char 1 101
char 1 0
align 1
LABELV $1269
char 1 118
char 1 111
char 1 116
char 1 101
char 1 0
align 1
LABELV $1266
char 1 99
char 1 97
char 1 108
char 1 108
char 1 118
char 1 111
char 1 116
char 1 101
char 1 0
align 1
LABELV $1263
char 1 119
char 1 104
char 1 101
char 1 114
char 1 101
char 1 0
align 1
LABELV $1260
char 1 102
char 1 111
char 1 114
char 1 99
char 1 101
char 1 99
char 1 104
char 1 97
char 1 110
char 1 103
char 1 101
char 1 100
char 1 0
align 1
LABELV $1257
char 1 116
char 1 101
char 1 97
char 1 109
char 1 0
align 1
LABELV $1254
char 1 102
char 1 111
char 1 108
char 1 108
char 1 111
char 1 119
char 1 112
char 1 114
char 1 101
char 1 118
char 1 0
align 1
LABELV $1251
char 1 102
char 1 111
char 1 108
char 1 108
char 1 111
char 1 119
char 1 110
char 1 101
char 1 120
char 1 116
char 1 0
align 1
LABELV $1248
char 1 102
char 1 111
char 1 108
char 1 108
char 1 111
char 1 119
char 1 0
align 1
LABELV $1245
char 1 108
char 1 101
char 1 118
char 1 101
char 1 108
char 1 115
char 1 104
char 1 111
char 1 116
char 1 0
align 1
LABELV $1240
char 1 107
char 1 105
char 1 108
char 1 108
char 1 0
align 1
LABELV $1237
char 1 110
char 1 111
char 1 99
char 1 108
char 1 105
char 1 112
char 1 0
align 1
LABELV $1234
char 1 110
char 1 111
char 1 116
char 1 97
char 1 114
char 1 103
char 1 101
char 1 116
char 1 0
align 1
LABELV $1231
char 1 103
char 1 111
char 1 100
char 1 0
align 1
LABELV $1228
char 1 103
char 1 105
char 1 118
char 1 101
char 1 0
align 1
LABELV $1220
char 1 118
char 1 116
char 1 97
char 1 117
char 1 110
char 1 116
char 1 0
align 1
LABELV $1217
char 1 118
char 1 111
char 1 116
char 1 101
char 1 108
char 1 108
char 1 0
align 1
LABELV $1214
char 1 118
char 1 111
char 1 115
char 1 97
char 1 121
char 1 95
char 1 116
char 1 101
char 1 97
char 1 109
char 1 0
align 1
LABELV $1211
char 1 118
char 1 111
char 1 115
char 1 97
char 1 121
char 1 0
align 1
LABELV $1206
char 1 118
char 1 115
char 1 97
char 1 121
char 1 95
char 1 116
char 1 101
char 1 97
char 1 109
char 1 0
align 1
LABELV $1203
char 1 118
char 1 115
char 1 97
char 1 121
char 1 0
align 1
LABELV $1200
char 1 116
char 1 101
char 1 108
char 1 108
char 1 0
align 1
LABELV $1197
char 1 115
char 1 97
char 1 121
char 1 95
char 1 116
char 1 101
char 1 97
char 1 109
char 1 0
align 1
LABELV $1194
char 1 115
char 1 97
char 1 121
char 1 0
align 1
LABELV $1191
char 1 98
char 1 111
char 1 116
char 1 95
char 1 0
align 1
LABELV $1176
char 1 80
char 1 76
char 1 68
char 1 85
char 1 69
char 1 76
char 1 67
char 1 72
char 1 65
char 1 76
char 1 76
char 1 69
char 1 78
char 1 71
char 1 69
char 1 68
char 1 0
align 1
LABELV $1175
char 1 80
char 1 76
char 1 68
char 1 85
char 1 69
char 1 76
char 1 67
char 1 72
char 1 65
char 1 76
char 1 76
char 1 69
char 1 78
char 1 71
char 1 69
char 1 0
align 1
LABELV $1174
char 1 99
char 1 112
char 1 32
char 1 34
char 1 37
char 1 115
char 1 32
char 1 37
char 1 115
char 1 10
char 1 34
char 1 0
align 1
LABELV $1167
char 1 80
char 1 76
char 1 68
char 1 85
char 1 69
char 1 76
char 1 65
char 1 67
char 1 67
char 1 69
char 1 80
char 1 84
char 1 0
align 1
LABELV $1166
char 1 112
char 1 114
char 1 105
char 1 110
char 1 116
char 1 32
char 1 34
char 1 37
char 1 115
char 1 32
char 1 37
char 1 115
char 1 32
char 1 37
char 1 115
char 1 33
char 1 10
char 1 34
char 1 0
align 1
LABELV $1141
char 1 67
char 1 65
char 1 78
char 1 84
char 1 68
char 1 85
char 1 69
char 1 76
char 1 95
char 1 66
char 1 85
char 1 83
char 1 89
char 1 0
align 1
LABELV $1138
char 1 67
char 1 65
char 1 78
char 1 84
char 1 68
char 1 85
char 1 69
char 1 76
char 1 95
char 1 74
char 1 85
char 1 83
char 1 84
char 1 68
char 1 73
char 1 68
char 1 0
align 1
LABELV $1115
char 1 78
char 1 79
char 1 68
char 1 85
char 1 69
char 1 76
char 1 95
char 1 71
char 1 65
char 1 77
char 1 69
char 1 84
char 1 89
char 1 80
char 1 69
char 1 0
align 1
LABELV $1075
char 1 115
char 1 111
char 1 117
char 1 110
char 1 100
char 1 47
char 1 119
char 1 101
char 1 97
char 1 112
char 1 111
char 1 110
char 1 115
char 1 47
char 1 115
char 1 97
char 1 98
char 1 101
char 1 114
char 1 47
char 1 115
char 1 97
char 1 98
char 1 101
char 1 114
char 1 111
char 1 110
char 1 46
char 1 119
char 1 97
char 1 118
char 1 0
align 1
LABELV $1074
char 1 115
char 1 111
char 1 117
char 1 110
char 1 100
char 1 47
char 1 119
char 1 101
char 1 97
char 1 112
char 1 111
char 1 110
char 1 115
char 1 47
char 1 115
char 1 97
char 1 98
char 1 101
char 1 114
char 1 47
char 1 115
char 1 97
char 1 98
char 1 101
char 1 114
char 1 111
char 1 102
char 1 102
char 1 113
char 1 117
char 1 105
char 1 99
char 1 107
char 1 46
char 1 119
char 1 97
char 1 118
char 1 0
align 1
LABELV $992
char 1 112
char 1 114
char 1 105
char 1 110
char 1 116
char 1 32
char 1 34
char 1 117
char 1 115
char 1 97
char 1 103
char 1 101
char 1 58
char 1 32
char 1 115
char 1 101
char 1 116
char 1 118
char 1 105
char 1 101
char 1 119
char 1 112
char 1 111
char 1 115
char 1 32
char 1 120
char 1 32
char 1 121
char 1 32
char 1 122
char 1 32
char 1 121
char 1 97
char 1 119
char 1 10
char 1 34
char 1 0
align 1
LABELV $975
char 1 80
char 1 76
char 1 84
char 1 69
char 1 65
char 1 77
char 1 86
char 1 79
char 1 84
char 1 69
char 1 67
char 1 65
char 1 83
char 1 84
char 1 0
align 1
LABELV $972
char 1 84
char 1 69
char 1 65
char 1 77
char 1 86
char 1 79
char 1 84
char 1 69
char 1 65
char 1 76
char 1 82
char 1 69
char 1 65
char 1 68
char 1 89
char 1 67
char 1 65
char 1 83
char 1 84
char 1 0
align 1
LABELV $969
char 1 78
char 1 79
char 1 84
char 1 69
char 1 65
char 1 77
char 1 86
char 1 79
char 1 84
char 1 69
char 1 73
char 1 78
char 1 80
char 1 82
char 1 79
char 1 71
char 1 0
align 1
LABELV $945
char 1 112
char 1 114
char 1 105
char 1 110
char 1 116
char 1 32
char 1 34
char 1 37
char 1 115
char 1 32
char 1 99
char 1 97
char 1 108
char 1 108
char 1 101
char 1 100
char 1 32
char 1 97
char 1 32
char 1 116
char 1 101
char 1 97
char 1 109
char 1 32
char 1 118
char 1 111
char 1 116
char 1 101
char 1 46
char 1 10
char 1 34
char 1 0
align 1
LABELV $933
char 1 112
char 1 114
char 1 105
char 1 110
char 1 116
char 1 32
char 1 34
char 1 84
char 1 101
char 1 97
char 1 109
char 1 32
char 1 118
char 1 111
char 1 116
char 1 101
char 1 32
char 1 99
char 1 111
char 1 109
char 1 109
char 1 97
char 1 110
char 1 100
char 1 115
char 1 32
char 1 97
char 1 114
char 1 101
char 1 58
char 1 32
char 1 108
char 1 101
char 1 97
char 1 100
char 1 101
char 1 114
char 1 32
char 1 60
char 1 112
char 1 108
char 1 97
char 1 121
char 1 101
char 1 114
char 1 62
char 1 46
char 1 10
char 1 34
char 1 0
align 1
LABELV $932
char 1 112
char 1 114
char 1 105
char 1 110
char 1 116
char 1 32
char 1 34
char 1 37
char 1 115
char 1 32
char 1 105
char 1 115
char 1 32
char 1 110
char 1 111
char 1 116
char 1 32
char 1 97
char 1 32
char 1 118
char 1 97
char 1 108
char 1 105
char 1 100
char 1 32
char 1 112
char 1 108
char 1 97
char 1 121
char 1 101
char 1 114
char 1 32
char 1 111
char 1 110
char 1 32
char 1 121
char 1 111
char 1 117
char 1 114
char 1 32
char 1 116
char 1 101
char 1 97
char 1 109
char 1 46
char 1 10
char 1 34
char 1 0
align 1
LABELV $897
char 1 108
char 1 101
char 1 97
char 1 100
char 1 101
char 1 114
char 1 0
align 1
LABELV $887
char 1 32
char 1 0
align 1
LABELV $878
char 1 77
char 1 65
char 1 88
char 1 84
char 1 69
char 1 65
char 1 77
char 1 86
char 1 79
char 1 84
char 1 69
char 1 83
char 1 0
align 1
LABELV $875
char 1 84
char 1 69
char 1 65
char 1 77
char 1 86
char 1 79
char 1 84
char 1 69
char 1 65
char 1 76
char 1 82
char 1 69
char 1 65
char 1 68
char 1 89
char 1 0
align 1
LABELV $853
char 1 80
char 1 76
char 1 86
char 1 79
char 1 84
char 1 69
char 1 67
char 1 65
char 1 83
char 1 84
char 1 0
align 1
LABELV $852
char 1 78
char 1 79
char 1 86
char 1 79
char 1 84
char 1 69
char 1 65
char 1 83
char 1 83
char 1 80
char 1 69
char 1 67
char 1 0
align 1
LABELV $849
char 1 86
char 1 79
char 1 84
char 1 69
char 1 65
char 1 76
char 1 82
char 1 69
char 1 65
char 1 68
char 1 89
char 1 0
align 1
LABELV $846
char 1 78
char 1 79
char 1 86
char 1 79
char 1 84
char 1 69
char 1 73
char 1 78
char 1 80
char 1 82
char 1 79
char 1 71
char 1 0
align 1
LABELV $837
char 1 37
char 1 105
char 1 0
align 1
LABELV $827
char 1 80
char 1 76
char 1 67
char 1 65
char 1 76
char 1 76
char 1 69
char 1 68
char 1 86
char 1 79
char 1 84
char 1 69
char 1 0
align 1
LABELV $826
char 1 112
char 1 114
char 1 105
char 1 110
char 1 116
char 1 32
char 1 34
char 1 37
char 1 115
char 1 32
char 1 37
char 1 115
char 1 10
char 1 34
char 1 0
align 1
LABELV $822
char 1 37
char 1 115
char 1 32
char 1 34
char 1 37
char 1 115
char 1 34
char 1 0
align 1
LABELV $816
char 1 118
char 1 115
char 1 116
char 1 114
char 1 32
char 1 110
char 1 101
char 1 120
char 1 116
char 1 109
char 1 97
char 1 112
char 1 0
align 1
LABELV $813
char 1 112
char 1 114
char 1 105
char 1 110
char 1 116
char 1 32
char 1 34
char 1 110
char 1 101
char 1 120
char 1 116
char 1 109
char 1 97
char 1 112
char 1 32
char 1 110
char 1 111
char 1 116
char 1 32
char 1 115
char 1 101
char 1 116
char 1 46
char 1 10
char 1 34
char 1 0
align 1
LABELV $805
char 1 99
char 1 108
char 1 105
char 1 101
char 1 110
char 1 116
char 1 107
char 1 105
char 1 99
char 1 107
char 1 32
char 1 37
char 1 100
char 1 0
align 1
LABELV $802
char 1 112
char 1 114
char 1 105
char 1 110
char 1 116
char 1 32
char 1 34
char 1 116
char 1 104
char 1 101
char 1 114
char 1 101
char 1 32
char 1 105
char 1 115
char 1 32
char 1 110
char 1 111
char 1 32
char 1 99
char 1 108
char 1 105
char 1 101
char 1 110
char 1 116
char 1 32
char 1 110
char 1 97
char 1 109
char 1 101
char 1 100
char 1 32
char 1 39
char 1 37
char 1 115
char 1 39
char 1 32
char 1 99
char 1 117
char 1 114
char 1 114
char 1 101
char 1 110
char 1 116
char 1 108
char 1 121
char 1 32
char 1 111
char 1 110
char 1 32
char 1 116
char 1 104
char 1 101
char 1 32
char 1 115
char 1 101
char 1 114
char 1 118
char 1 101
char 1 114
char 1 46
char 1 10
char 1 34
char 1 0
align 1
LABELV $794
char 1 107
char 1 105
char 1 99
char 1 107
char 1 32
char 1 37
char 1 115
char 1 0
align 1
LABELV $789
char 1 112
char 1 114
char 1 105
char 1 110
char 1 116
char 1 32
char 1 34
char 1 116
char 1 104
char 1 101
char 1 114
char 1 101
char 1 32
char 1 105
char 1 115
char 1 32
char 1 110
char 1 111
char 1 32
char 1 99
char 1 108
char 1 105
char 1 101
char 1 110
char 1 116
char 1 32
char 1 119
char 1 105
char 1 116
char 1 104
char 1 32
char 1 116
char 1 104
char 1 101
char 1 32
char 1 99
char 1 108
char 1 105
char 1 101
char 1 110
char 1 116
char 1 32
char 1 110
char 1 117
char 1 109
char 1 98
char 1 101
char 1 114
char 1 32
char 1 37
char 1 100
char 1 46
char 1 10
char 1 34
char 1 0
align 1
LABELV $785
char 1 112
char 1 114
char 1 105
char 1 110
char 1 116
char 1 32
char 1 34
char 1 105
char 1 110
char 1 118
char 1 97
char 1 108
char 1 105
char 1 100
char 1 32
char 1 99
char 1 108
char 1 105
char 1 101
char 1 110
char 1 116
char 1 32
char 1 110
char 1 117
char 1 109
char 1 98
char 1 101
char 1 114
char 1 32
char 1 37
char 1 100
char 1 46
char 1 10
char 1 34
char 1 0
align 1
LABELV $778
char 1 37
char 1 115
char 1 0
align 1
LABELV $773
char 1 37
char 1 115
char 1 32
char 1 37
char 1 115
char 1 59
char 1 32
char 1 115
char 1 101
char 1 116
char 1 32
char 1 110
char 1 101
char 1 120
char 1 116
char 1 109
char 1 97
char 1 112
char 1 32
char 1 34
char 1 37
char 1 115
char 1 34
char 1 0
align 1
LABELV $768
char 1 78
char 1 79
char 1 86
char 1 79
char 1 84
char 1 69
char 1 95
char 1 77
char 1 65
char 1 80
char 1 78
char 1 79
char 1 84
char 1 83
char 1 85
char 1 80
char 1 80
char 1 79
char 1 82
char 1 84
char 1 69
char 1 68
char 1 66
char 1 89
char 1 71
char 1 65
char 1 77
char 1 69
char 1 0
align 1
LABELV $763
char 1 37
char 1 115
char 1 32
char 1 37
char 1 115
char 1 0
align 1
LABELV $760
char 1 37
char 1 115
char 1 32
char 1 37
char 1 100
char 1 0
align 1
LABELV $755
char 1 112
char 1 114
char 1 105
char 1 110
char 1 116
char 1 32
char 1 34
char 1 73
char 1 110
char 1 118
char 1 97
char 1 108
char 1 105
char 1 100
char 1 32
char 1 103
char 1 97
char 1 109
char 1 101
char 1 116
char 1 121
char 1 112
char 1 101
char 1 46
char 1 10
char 1 34
char 1 0
align 1
LABELV $747
char 1 37
char 1 115
char 1 10
char 1 0
align 1
LABELV $742
char 1 112
char 1 114
char 1 105
char 1 110
char 1 116
char 1 32
char 1 34
char 1 86
char 1 111
char 1 116
char 1 101
char 1 32
char 1 99
char 1 111
char 1 109
char 1 109
char 1 97
char 1 110
char 1 100
char 1 115
char 1 32
char 1 97
char 1 114
char 1 101
char 1 58
char 1 32
char 1 109
char 1 97
char 1 112
char 1 95
char 1 114
char 1 101
char 1 115
char 1 116
char 1 97
char 1 114
char 1 116
char 1 44
char 1 32
char 1 110
char 1 101
char 1 120
char 1 116
char 1 109
char 1 97
char 1 112
char 1 44
char 1 32
char 1 109
char 1 97
char 1 112
char 1 32
char 1 60
char 1 109
char 1 97
char 1 112
char 1 110
char 1 97
char 1 109
char 1 101
char 1 62
char 1 44
char 1 32
char 1 103
char 1 95
char 1 103
char 1 97
char 1 109
char 1 101
char 1 116
char 1 121
char 1 112
char 1 101
char 1 32
char 1 60
char 1 110
char 1 62
char 1 44
char 1 32
char 1 107
char 1 105
char 1 99
char 1 107
char 1 32
char 1 60
char 1 112
char 1 108
char 1 97
char 1 121
char 1 101
char 1 114
char 1 62
char 1 44
char 1 32
char 1 99
char 1 108
char 1 105
char 1 101
char 1 110
char 1 116
char 1 107
char 1 105
char 1 99
char 1 107
char 1 32
char 1 60
char 1 99
char 1 108
char 1 105
char 1 101
char 1 110
char 1 116
char 1 110
char 1 117
char 1 109
char 1 62
char 1 44
char 1 32
char 1 103
char 1 95
char 1 100
char 1 111
char 1 87
char 1 97
char 1 114
char 1 109
char 1 117
char 1 112
char 1 44
char 1 32
char 1 116
char 1 105
char 1 109
char 1 101
char 1 108
char 1 105
char 1 109
char 1 105
char 1 116
char 1 32
char 1 60
char 1 116
char 1 105
char 1 109
char 1 101
char 1 62
char 1 44
char 1 32
char 1 102
char 1 114
char 1 97
char 1 103
char 1 108
char 1 105
char 1 109
char 1 105
char 1 116
char 1 32
char 1 60
char 1 102
char 1 114
char 1 97
char 1 103
char 1 115
char 1 62
char 1 46
char 1 10
char 1 34
char 1 0
align 1
LABELV $741
char 1 102
char 1 114
char 1 97
char 1 103
char 1 108
char 1 105
char 1 109
char 1 105
char 1 116
char 1 0
align 1
LABELV $738
char 1 116
char 1 105
char 1 109
char 1 101
char 1 108
char 1 105
char 1 109
char 1 105
char 1 116
char 1 0
align 1
LABELV $735
char 1 103
char 1 95
char 1 100
char 1 111
char 1 87
char 1 97
char 1 114
char 1 109
char 1 117
char 1 112
char 1 0
align 1
LABELV $732
char 1 99
char 1 108
char 1 105
char 1 101
char 1 110
char 1 116
char 1 107
char 1 105
char 1 99
char 1 107
char 1 0
align 1
LABELV $729
char 1 107
char 1 105
char 1 99
char 1 107
char 1 0
align 1
LABELV $726
char 1 103
char 1 95
char 1 103
char 1 97
char 1 109
char 1 101
char 1 116
char 1 121
char 1 112
char 1 101
char 1 0
align 1
LABELV $723
char 1 109
char 1 97
char 1 112
char 1 0
align 1
LABELV $720
char 1 110
char 1 101
char 1 120
char 1 116
char 1 109
char 1 97
char 1 112
char 1 0
align 1
LABELV $717
char 1 109
char 1 97
char 1 112
char 1 95
char 1 114
char 1 101
char 1 115
char 1 116
char 1 97
char 1 114
char 1 116
char 1 0
align 1
LABELV $714
char 1 112
char 1 114
char 1 105
char 1 110
char 1 116
char 1 32
char 1 34
char 1 73
char 1 110
char 1 118
char 1 97
char 1 108
char 1 105
char 1 100
char 1 32
char 1 118
char 1 111
char 1 116
char 1 101
char 1 32
char 1 115
char 1 116
char 1 114
char 1 105
char 1 110
char 1 103
char 1 46
char 1 10
char 1 34
char 1 0
align 1
LABELV $706
char 1 78
char 1 79
char 1 83
char 1 80
char 1 69
char 1 67
char 1 86
char 1 79
char 1 84
char 1 69
char 1 0
align 1
LABELV $703
char 1 77
char 1 65
char 1 88
char 1 86
char 1 79
char 1 84
char 1 69
char 1 83
char 1 0
align 1
LABELV $700
char 1 86
char 1 79
char 1 84
char 1 69
char 1 73
char 1 78
char 1 80
char 1 82
char 1 79
char 1 71
char 1 82
char 1 69
char 1 83
char 1 83
char 1 0
align 1
LABELV $696
char 1 78
char 1 79
char 1 86
char 1 79
char 1 84
char 1 69
char 1 0
align 1
LABELV $663
char 1 67
char 1 97
char 1 112
char 1 116
char 1 117
char 1 114
char 1 101
char 1 32
char 1 116
char 1 104
char 1 101
char 1 32
char 1 89
char 1 115
char 1 97
char 1 108
char 1 97
char 1 109
char 1 105
char 1 114
char 1 105
char 1 0
align 1
LABELV $662
char 1 67
char 1 97
char 1 112
char 1 116
char 1 117
char 1 114
char 1 101
char 1 32
char 1 116
char 1 104
char 1 101
char 1 32
char 1 70
char 1 108
char 1 97
char 1 103
char 1 0
align 1
LABELV $661
char 1 78
char 1 47
char 1 65
char 1 0
align 1
LABELV $660
char 1 84
char 1 101
char 1 97
char 1 109
char 1 32
char 1 70
char 1 70
char 1 65
char 1 0
align 1
LABELV $659
char 1 83
char 1 105
char 1 110
char 1 103
char 1 108
char 1 101
char 1 32
char 1 80
char 1 108
char 1 97
char 1 121
char 1 101
char 1 114
char 1 0
align 1
LABELV $658
char 1 68
char 1 117
char 1 101
char 1 108
char 1 0
align 1
LABELV $657
char 1 74
char 1 101
char 1 100
char 1 105
char 1 32
char 1 77
char 1 97
char 1 115
char 1 116
char 1 101
char 1 114
char 1 0
align 1
LABELV $656
char 1 72
char 1 111
char 1 108
char 1 111
char 1 99
char 1 114
char 1 111
char 1 110
char 1 32
char 1 70
char 1 70
char 1 65
char 1 0
align 1
LABELV $655
char 1 70
char 1 114
char 1 101
char 1 101
char 1 32
char 1 70
char 1 111
char 1 114
char 1 32
char 1 65
char 1 108
char 1 108
char 1 0
align 1
LABELV $646
char 1 114
char 1 101
char 1 112
char 1 111
char 1 114
char 1 116
char 1 0
align 1
LABELV $645
char 1 115
char 1 101
char 1 97
char 1 114
char 1 99
char 1 104
char 1 32
char 1 97
char 1 110
char 1 100
char 1 32
char 1 100
char 1 101
char 1 115
char 1 116
char 1 114
char 1 111
char 1 121
char 1 0
align 1
LABELV $644
char 1 103
char 1 117
char 1 97
char 1 114
char 1 100
char 1 32
char 1 108
char 1 111
char 1 99
char 1 97
char 1 116
char 1 105
char 1 111
char 1 110
char 1 0
align 1
LABELV $643
char 1 99
char 1 111
char 1 118
char 1 101
char 1 114
char 1 32
char 1 109
char 1 101
char 1 0
align 1
LABELV $642
char 1 99
char 1 111
char 1 109
char 1 101
char 1 32
char 1 104
char 1 101
char 1 114
char 1 101
char 1 0
align 1
LABELV $641
char 1 104
char 1 111
char 1 108
char 1 100
char 1 32
char 1 116
char 1 104
char 1 105
char 1 115
char 1 32
char 1 112
char 1 111
char 1 115
char 1 105
char 1 116
char 1 105
char 1 111
char 1 110
char 1 0
align 1
LABELV $640
char 1 104
char 1 111
char 1 108
char 1 100
char 1 32
char 1 121
char 1 111
char 1 117
char 1 114
char 1 32
char 1 112
char 1 111
char 1 115
char 1 105
char 1 116
char 1 105
char 1 111
char 1 110
char 1 0
align 1
LABELV $639
char 1 116
char 1 97
char 1 117
char 1 110
char 1 116
char 1 0
align 1
LABELV $636
char 1 112
char 1 114
char 1 97
char 1 105
char 1 115
char 1 101
char 1 0
align 1
LABELV $619
char 1 107
char 1 105
char 1 108
char 1 108
char 1 95
char 1 105
char 1 110
char 1 115
char 1 117
char 1 108
char 1 116
char 1 0
align 1
LABELV $614
char 1 107
char 1 105
char 1 108
char 1 108
char 1 95
char 1 103
char 1 97
char 1 117
char 1 110
char 1 116
char 1 108
char 1 101
char 1 116
char 1 0
align 1
LABELV $603
char 1 100
char 1 101
char 1 97
char 1 116
char 1 104
char 1 95
char 1 105
char 1 110
char 1 115
char 1 117
char 1 108
char 1 116
char 1 0
align 1
LABELV $593
char 1 118
char 1 116
char 1 101
char 1 108
char 1 108
char 1 58
char 1 32
char 1 37
char 1 115
char 1 32
char 1 116
char 1 111
char 1 32
char 1 37
char 1 115
char 1 58
char 1 32
char 1 37
char 1 115
char 1 10
char 1 0
align 1
LABELV $571
char 1 118
char 1 111
char 1 105
char 1 99
char 1 101
char 1 58
char 1 32
char 1 37
char 1 115
char 1 32
char 1 37
char 1 115
char 1 10
char 1 0
align 1
LABELV $561
char 1 37
char 1 115
char 1 32
char 1 37
char 1 100
char 1 32
char 1 37
char 1 100
char 1 32
char 1 37
char 1 100
char 1 32
char 1 37
char 1 115
char 1 0
align 1
LABELV $560
char 1 118
char 1 99
char 1 104
char 1 97
char 1 116
char 1 0
align 1
LABELV $559
char 1 118
char 1 116
char 1 101
char 1 108
char 1 108
char 1 0
align 1
LABELV $556
char 1 118
char 1 116
char 1 99
char 1 104
char 1 97
char 1 116
char 1 0
align 1
LABELV $539
char 1 116
char 1 101
char 1 108
char 1 108
char 1 58
char 1 32
char 1 37
char 1 115
char 1 32
char 1 116
char 1 111
char 1 32
char 1 37
char 1 115
char 1 58
char 1 32
char 1 37
char 1 115
char 1 10
char 1 0
align 1
LABELV $513
char 1 37
char 1 115
char 1 37
char 1 115
char 1 10
char 1 0
align 1
LABELV $507
char 1 25
char 1 91
char 1 37
char 1 115
char 1 37
char 1 99
char 1 37
char 1 99
char 1 25
char 1 93
char 1 25
char 1 58
char 1 32
char 1 0
align 1
LABELV $506
char 1 25
char 1 91
char 1 37
char 1 115
char 1 37
char 1 99
char 1 37
char 1 99
char 1 25
char 1 93
char 1 32
char 1 40
char 1 37
char 1 115
char 1 41
char 1 25
char 1 58
char 1 32
char 1 0
align 1
LABELV $501
char 1 25
char 1 40
char 1 37
char 1 115
char 1 37
char 1 99
char 1 37
char 1 99
char 1 25
char 1 41
char 1 25
char 1 58
char 1 32
char 1 0
align 1
LABELV $500
char 1 25
char 1 40
char 1 37
char 1 115
char 1 37
char 1 99
char 1 37
char 1 99
char 1 25
char 1 41
char 1 32
char 1 40
char 1 37
char 1 115
char 1 41
char 1 25
char 1 58
char 1 32
char 1 0
align 1
LABELV $497
char 1 115
char 1 97
char 1 121
char 1 116
char 1 101
char 1 97
char 1 109
char 1 58
char 1 32
char 1 37
char 1 115
char 1 58
char 1 32
char 1 37
char 1 115
char 1 10
char 1 0
align 1
LABELV $495
char 1 37
char 1 115
char 1 37
char 1 99
char 1 37
char 1 99
char 1 25
char 1 58
char 1 32
char 1 0
align 1
LABELV $494
char 1 115
char 1 97
char 1 121
char 1 58
char 1 32
char 1 37
char 1 115
char 1 58
char 1 32
char 1 37
char 1 115
char 1 10
char 1 0
align 1
LABELV $483
char 1 99
char 1 104
char 1 97
char 1 116
char 1 0
align 1
LABELV $482
char 1 116
char 1 99
char 1 104
char 1 97
char 1 116
char 1 0
align 1
LABELV $481
char 1 37
char 1 115
char 1 32
char 1 34
char 1 37
char 1 115
char 1 37
char 1 99
char 1 37
char 1 99
char 1 37
char 1 115
char 1 34
char 1 0
align 1
LABELV $453
char 1 67
char 1 109
char 1 100
char 1 95
char 1 70
char 1 111
char 1 108
char 1 108
char 1 111
char 1 119
char 1 67
char 1 121
char 1 99
char 1 108
char 1 101
char 1 95
char 1 102
char 1 58
char 1 32
char 1 98
char 1 97
char 1 100
char 1 32
char 1 100
char 1 105
char 1 114
char 1 32
char 1 37
char 1 105
char 1 0
align 1
LABELV $421
char 1 94
char 1 50
char 1 0
align 1
LABELV $420
char 1 112
char 1 114
char 1 105
char 1 110
char 1 116
char 1 32
char 1 34
char 1 37
char 1 115
char 1 37
char 1 115
char 1 10
char 1 10
char 1 34
char 1 0
align 1
LABELV $419
char 1 70
char 1 79
char 1 82
char 1 67
char 1 69
char 1 80
char 1 79
char 1 87
char 1 69
char 1 82
char 1 67
char 1 72
char 1 65
char 1 78
char 1 71
char 1 69
char 1 68
char 1 0
align 1
LABELV $413
char 1 112
char 1 114
char 1 105
char 1 110
char 1 116
char 1 32
char 1 34
char 1 67
char 1 97
char 1 110
char 1 110
char 1 111
char 1 116
char 1 32
char 1 115
char 1 119
char 1 105
char 1 116
char 1 99
char 1 104
char 1 32
char 1 116
char 1 101
char 1 97
char 1 109
char 1 115
char 1 32
char 1 105
char 1 110
char 1 32
char 1 68
char 1 117
char 1 101
char 1 108
char 1 10
char 1 34
char 1 0
align 1
LABELV $407
char 1 78
char 1 79
char 1 83
char 1 87
char 1 73
char 1 84
char 1 67
char 1 72
char 1 0
align 1
LABELV $402
char 1 80
char 1 82
char 1 73
char 1 78
char 1 84
char 1 83
char 1 80
char 1 69
char 1 67
char 1 84
char 1 69
char 1 65
char 1 77
char 1 0
align 1
LABELV $401
char 1 112
char 1 114
char 1 105
char 1 110
char 1 116
char 1 32
char 1 34
char 1 83
char 1 112
char 1 101
char 1 99
char 1 116
char 1 97
char 1 116
char 1 111
char 1 114
char 1 32
char 1 116
char 1 101
char 1 97
char 1 109
char 1 10
char 1 34
char 1 0
align 1
LABELV $399
char 1 80
char 1 82
char 1 73
char 1 78
char 1 84
char 1 70
char 1 82
char 1 69
char 1 69
char 1 84
char 1 69
char 1 65
char 1 77
char 1 0
align 1
LABELV $398
char 1 112
char 1 114
char 1 105
char 1 110
char 1 116
char 1 32
char 1 34
char 1 70
char 1 114
char 1 101
char 1 101
char 1 32
char 1 116
char 1 101
char 1 97
char 1 109
char 1 10
char 1 34
char 1 0
align 1
LABELV $396
char 1 80
char 1 82
char 1 73
char 1 78
char 1 84
char 1 82
char 1 69
char 1 68
char 1 84
char 1 69
char 1 65
char 1 77
char 1 0
align 1
LABELV $395
char 1 112
char 1 114
char 1 105
char 1 110
char 1 116
char 1 32
char 1 34
char 1 82
char 1 101
char 1 100
char 1 32
char 1 116
char 1 101
char 1 97
char 1 109
char 1 10
char 1 34
char 1 0
align 1
LABELV $393
char 1 80
char 1 82
char 1 73
char 1 78
char 1 84
char 1 66
char 1 76
char 1 85
char 1 69
char 1 84
char 1 69
char 1 65
char 1 77
char 1 0
align 1
LABELV $350
char 1 84
char 1 79
char 1 79
char 1 77
char 1 65
char 1 78
char 1 89
char 1 66
char 1 76
char 1 85
char 1 69
char 1 0
align 1
LABELV $345
char 1 84
char 1 79
char 1 79
char 1 77
char 1 65
char 1 78
char 1 89
char 1 82
char 1 69
char 1 68
char 1 0
align 1
LABELV $333
char 1 98
char 1 0
align 1
LABELV $332
char 1 98
char 1 108
char 1 117
char 1 101
char 1 0
align 1
LABELV $328
char 1 114
char 1 0
align 1
LABELV $327
char 1 114
char 1 101
char 1 100
char 1 0
align 1
LABELV $320
char 1 115
char 1 0
align 1
LABELV $319
char 1 115
char 1 112
char 1 101
char 1 99
char 1 116
char 1 97
char 1 116
char 1 111
char 1 114
char 1 0
align 1
LABELV $315
char 1 115
char 1 99
char 1 111
char 1 114
char 1 101
char 1 0
align 1
LABELV $314
char 1 115
char 1 99
char 1 111
char 1 114
char 1 101
char 1 98
char 1 111
char 1 97
char 1 114
char 1 100
char 1 0
align 1
LABELV $310
char 1 115
char 1 101
char 1 116
char 1 116
char 1 101
char 1 97
char 1 109
char 1 58
char 1 32
char 1 32
char 1 37
char 1 105
char 1 32
char 1 37
char 1 115
char 1 32
char 1 37
char 1 115
char 1 10
char 1 0
align 1
LABELV $309
char 1 74
char 1 79
char 1 73
char 1 78
char 1 69
char 1 68
char 1 84
char 1 72
char 1 69
char 1 66
char 1 65
char 1 84
char 1 84
char 1 76
char 1 69
char 1 0
align 1
LABELV $303
char 1 74
char 1 79
char 1 73
char 1 78
char 1 69
char 1 68
char 1 84
char 1 72
char 1 69
char 1 83
char 1 80
char 1 69
char 1 67
char 1 84
char 1 65
char 1 84
char 1 79
char 1 82
char 1 83
char 1 0
align 1
LABELV $300
char 1 74
char 1 79
char 1 73
char 1 78
char 1 69
char 1 68
char 1 84
char 1 72
char 1 69
char 1 66
char 1 76
char 1 85
char 1 69
char 1 84
char 1 69
char 1 65
char 1 77
char 1 0
align 1
LABELV $297
char 1 74
char 1 79
char 1 73
char 1 78
char 1 69
char 1 68
char 1 84
char 1 72
char 1 69
char 1 82
char 1 69
char 1 68
char 1 84
char 1 69
char 1 65
char 1 77
char 1 0
align 1
LABELV $296
char 1 99
char 1 112
char 1 32
char 1 34
char 1 37
char 1 115
char 1 94
char 1 55
char 1 32
char 1 37
char 1 115
char 1 10
char 1 34
char 1 0
align 1
LABELV $284
char 1 65
char 1 84
char 1 84
char 1 69
char 1 77
char 1 80
char 1 84
char 1 68
char 1 85
char 1 69
char 1 76
char 1 75
char 1 73
char 1 76
char 1 76
char 1 0
align 1
LABELV $268
char 1 37
char 1 100
char 1 0
align 1
LABELV $267
char 1 116
char 1 101
char 1 97
char 1 109
char 1 116
char 1 97
char 1 115
char 1 107
char 1 0
align 1
LABELV $263
char 1 99
char 1 108
char 1 105
char 1 101
char 1 110
char 1 116
char 1 76
char 1 101
char 1 118
char 1 101
char 1 108
char 1 83
char 1 104
char 1 111
char 1 116
char 1 0
align 1
LABELV $262
char 1 112
char 1 114
char 1 105
char 1 110
char 1 116
char 1 32
char 1 34
char 1 77
char 1 117
char 1 115
char 1 116
char 1 32
char 1 98
char 1 101
char 1 32
char 1 105
char 1 110
char 1 32
char 1 103
char 1 95
char 1 103
char 1 97
char 1 109
char 1 101
char 1 116
char 1 121
char 1 112
char 1 101
char 1 32
char 1 48
char 1 32
char 1 102
char 1 111
char 1 114
char 1 32
char 1 108
char 1 101
char 1 118
char 1 101
char 1 108
char 1 115
char 1 104
char 1 111
char 1 116
char 1 10
char 1 34
char 1 0
align 1
LABELV $252
char 1 110
char 1 111
char 1 99
char 1 108
char 1 105
char 1 112
char 1 32
char 1 79
char 1 78
char 1 10
char 1 0
align 1
LABELV $251
char 1 110
char 1 111
char 1 99
char 1 108
char 1 105
char 1 112
char 1 32
char 1 79
char 1 70
char 1 70
char 1 10
char 1 0
align 1
LABELV $245
char 1 110
char 1 111
char 1 116
char 1 97
char 1 114
char 1 103
char 1 101
char 1 116
char 1 32
char 1 79
char 1 78
char 1 10
char 1 0
align 1
LABELV $244
char 1 110
char 1 111
char 1 116
char 1 97
char 1 114
char 1 103
char 1 101
char 1 116
char 1 32
char 1 79
char 1 70
char 1 70
char 1 10
char 1 0
align 1
LABELV $238
char 1 112
char 1 114
char 1 105
char 1 110
char 1 116
char 1 32
char 1 34
char 1 37
char 1 115
char 1 34
char 1 0
align 1
LABELV $237
char 1 103
char 1 111
char 1 100
char 1 109
char 1 111
char 1 100
char 1 101
char 1 32
char 1 79
char 1 78
char 1 10
char 1 0
align 1
LABELV $236
char 1 103
char 1 111
char 1 100
char 1 109
char 1 111
char 1 100
char 1 101
char 1 32
char 1 79
char 1 70
char 1 70
char 1 10
char 1 0
align 1
LABELV $224
char 1 97
char 1 115
char 1 115
char 1 105
char 1 115
char 1 116
char 1 0
align 1
LABELV $221
char 1 100
char 1 101
char 1 102
char 1 101
char 1 110
char 1 100
char 1 0
align 1
LABELV $218
char 1 103
char 1 97
char 1 117
char 1 110
char 1 116
char 1 108
char 1 101
char 1 116
char 1 97
char 1 119
char 1 97
char 1 114
char 1 100
char 1 0
align 1
LABELV $215
char 1 105
char 1 109
char 1 112
char 1 114
char 1 101
char 1 115
char 1 115
char 1 105
char 1 118
char 1 101
char 1 0
align 1
LABELV $212
char 1 101
char 1 120
char 1 99
char 1 101
char 1 108
char 1 108
char 1 101
char 1 110
char 1 116
char 1 0
align 1
LABELV $204
char 1 97
char 1 114
char 1 109
char 1 111
char 1 114
char 1 0
align 1
LABELV $192
char 1 97
char 1 109
char 1 109
char 1 111
char 1 0
align 1
LABELV $189
char 1 119
char 1 101
char 1 97
char 1 112
char 1 111
char 1 110
char 1 110
char 1 117
char 1 109
char 1 0
align 1
LABELV $183
char 1 119
char 1 101
char 1 97
char 1 112
char 1 111
char 1 110
char 1 115
char 1 0
align 1
LABELV $173
char 1 104
char 1 101
char 1 97
char 1 108
char 1 116
char 1 104
char 1 0
align 1
LABELV $165
char 1 97
char 1 108
char 1 108
char 1 0
align 1
LABELV $159
char 1 112
char 1 114
char 1 105
char 1 110
char 1 116
char 1 32
char 1 34
char 1 85
char 1 115
char 1 101
char 1 114
char 1 32
char 1 37
char 1 115
char 1 32
char 1 105
char 1 115
char 1 32
char 1 110
char 1 111
char 1 116
char 1 32
char 1 111
char 1 110
char 1 32
char 1 116
char 1 104
char 1 101
char 1 32
char 1 115
char 1 101
char 1 114
char 1 118
char 1 101
char 1 114
char 1 10
char 1 34
char 1 0
align 1
LABELV $149
char 1 112
char 1 114
char 1 105
char 1 110
char 1 116
char 1 32
char 1 34
char 1 67
char 1 108
char 1 105
char 1 101
char 1 110
char 1 116
char 1 32
char 1 37
char 1 105
char 1 32
char 1 105
char 1 115
char 1 32
char 1 110
char 1 111
char 1 116
char 1 32
char 1 97
char 1 99
char 1 116
char 1 105
char 1 118
char 1 101
char 1 10
char 1 34
char 1 0
align 1
LABELV $146
char 1 112
char 1 114
char 1 105
char 1 110
char 1 116
char 1 32
char 1 34
char 1 66
char 1 97
char 1 100
char 1 32
char 1 99
char 1 108
char 1 105
char 1 101
char 1 110
char 1 116
char 1 32
char 1 115
char 1 108
char 1 111
char 1 116
char 1 58
char 1 32
char 1 37
char 1 105
char 1 10
char 1 34
char 1 0
align 1
LABELV $120
char 1 77
char 1 85
char 1 83
char 1 84
char 1 66
char 1 69
char 1 65
char 1 76
char 1 73
char 1 86
char 1 69
char 1 0
align 1
LABELV $117
char 1 78
char 1 79
char 1 67
char 1 72
char 1 69
char 1 65
char 1 84
char 1 83
char 1 0
align 1
LABELV $116
char 1 83
char 1 86
char 1 73
char 1 78
char 1 71
char 1 65
char 1 77
char 1 69
char 1 0
align 1
LABELV $115
char 1 112
char 1 114
char 1 105
char 1 110
char 1 116
char 1 32
char 1 34
char 1 37
char 1 115
char 1 10
char 1 34
char 1 0
align 1
LABELV $105
char 1 115
char 1 99
char 1 111
char 1 114
char 1 101
char 1 115
char 1 32
char 1 37
char 1 105
char 1 32
char 1 37
char 1 105
char 1 32
char 1 37
char 1 105
char 1 37
char 1 115
char 1 0
align 1
LABELV $97
char 1 32
char 1 37
char 1 105
char 1 32
char 1 37
char 1 105
char 1 32
char 1 37
char 1 105
char 1 32
char 1 37
char 1 105
char 1 32
char 1 37
char 1 105
char 1 32
char 1 37
char 1 105
char 1 32
char 1 37
char 1 105
char 1 32
char 1 37
char 1 105
char 1 32
char 1 37
char 1 105
char 1 32
char 1 37
char 1 105
char 1 32
char 1 37
char 1 105
char 1 32
char 1 37
char 1 105
char 1 32
char 1 37
char 1 105
char 1 32
char 1 37
char 1 105
char 1 0
